{"version":3,"sources":["webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-ojt-check-sheet-routing.module.ts","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-check-sheet-parameter/add-check-sheet-parameter.component.html","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-ojt-check-sheet.component.html","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-check-sheet-points/add-check-sheet-points.component.html","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-check-sheet-parameter/add-check-sheet-parameter.component.scss","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-ojt-check-sheet.module.ts","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-check-sheet-points/add-check-sheet-points.component.scss","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-ojt-check-sheet.component.scss","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-check-sheet-points/add-check-sheet-points.component.ts","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-check-sheet-parameter/add-check-sheet-parameter.component.ts","webpack:///src/app/modules/settings/skill-matrix/ojt-check-sheet/add-ojt-check-sheet/add-ojt-check-sheet.component.ts"],"names":["routes","path","component","AddOjtCheckSheetRoutingModule","imports","forChild","exports","AddOjtCheckSheetModule","declarations","AddCheckSheetPointsComponent","fb","skillMatrixService","alertService","modalService","addPoints","userDet","submitLoader","selectedDet","onPointInputChange","control","value","noOfDays","zeroValue","negativeValue","greaterThanNoOfDays","group","dayNo","pointList","array","itemName","required","reference","id","action","console","log","dayValue","JSON","parse","localStorage","getItem","checkSheetForm","daysList","addDaysRow","getChecksheetDetails","get","dayNumIndex","totalDays","currentDays","length","error","push","addPointsRow","removeAt","updateDayField","at","pointsForm","empNumIndex","pointIndex","controls","index","setValue","obj","hasOwnProperty","isEditPoint","groupPointList","x","checksheetPointId","form","invalid","Object","keys","forEach","key","markAsDirty","reqBody","checkSheetId","empId","saveChecksheetPoint","subscribe","response","result","success","dismissAll","statusCode","reason","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","allowOutsideClick","allowEscapeKey","allowEnterKey","customClass","container","then","isConfirmed","reqbody","deleteChecksheetPoint","data","removePointRow","checksheetPointsForm","pointReq","dayNum","point","selector","template","AddCheckSheetParameterComponent","apiService","SingleDropdownSettings","isNumberParameter","paraTypeList","isAddButtonClicked","parameterDet","rec","setChecksheetId","selectedParameterDet","isValidateNonNegativeOrZero","addLoader","isTextParameter","disableReferModel","onNumberInputChange","parseInt","getParameterTypeList","singleSelection","idField","textField","allowSearchFilter","closeDropDownOnSelection","checksheetParameterForm","parameterTypeId","parameter","cycleValue","checksheetParameterFormDate","dataList","parameterType","typeName","setValidators","clearValidators","isDateTimeParameter","isModelParameter","isGapParameter","assign","parameterData","hasCyclePlanParameter","some","param","req","parameterList","saveChecksheetParameter","paramIndex","splice","inputValue","event","target","validateNonNegativeOrZero","type","newValue","replace","reset","selectedParameterType","isSelectedParaType","isCyclePlan","pattern","updateValueAndValidity","fieldToSort","Array","isArray","sort","a","b","nameA","toUpperCase","nameB","AddOjtCheckSheetComponent","modalConfig","cdRef","branchAccessList","SingleBranchDropdownSettings","SingleLevelDropdownSettings","SingleParaDropdownSettings","isCheckSheetAvailable","editChecksheet","constant","checksheetDetails","LevelList","savedChecksheetDet","checksheetPointList","editChecksheetData","parameterTypeList","dataSpinner","actionLoader","reportBodyCell","departmentList","workforceList","lineId","searchDet","levelList","checksheetList","copyChecksheetDetails","selectedchecksheet","isCopyChecksheetDetailsAvail","isDirty","mainTab","isSetMainTab","tabId","mainChecksheetTab","isSetChecksheetTab","backdrop","keyboard","getLocalStorageChecksheetData","checksheetForm","plant","deptId","cellLineId","workstationId","level","copyChecksheetForm","getLevelList","getBranchAccessList","getCopyParameterTypeList","isEditable","undefined","organization","orgId","branchId","branch","branchName","name","removeItem","resGroups","reduce","item","map","isActionTaken","editableParameter","editableCycleValue","setItem","stringify","deptName","lineName","workstation","skillLevelId","levelName","skillLevel","checksheetData","skillLvlId","saveChecksheetDetails","responseData","isEditParameter","updatedBy","updateChecksheet","modal","modalRef","open","windowClass","Obj","flag","paramObj","filter","updateParameterData","typeCaption","updateChecksheetParameter","Number","getDepartmentByBranch","res","deptList","setArray","sortFunction","dept","addForm","ev","getCellList","cellList","lineIds","getWorkforceDeploymentData","key1","key2","tmpArray","element","tmp","resetFormField","deptIds","getDepartmentList","work","getWorkforceList","keyName","markAsPristine","markAsUntouched","filteredLevels","getChecksheetList","reqData","createdBy","filteredChecksheetList","clear","addcopyDaysRow","lastIndex","copyCheckSheetId","filteredChecksheetDetails","setMainTab","getSelectedChecksheetDetails","requiredFields","saveCopyChecksheet"],"mappings":"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","file":"add-ojt-check-sheet-add-ojt-check-sheet-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddOjtCheckSheetComponent } from './add-ojt-check-sheet.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddOjtCheckSheetComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddOjtCheckSheetRoutingModule { }\r\n","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title headerTitle\\\" id=\\\"modal-basic-title\\\" style=\\\"color: #7044cd;font-weight: bold;\\\">Add OJT\\r\\n        Checksheet Parameters</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close('Cross Click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\" style=\\\"padding: 10px;\\\">\\r\\n    <div class=\\\"checksheetForm\\\">\\r\\n        <form [formGroup]=\\\"checksheetParameterForm\\\" (ngSubmit)=\\\"addChecksheetParameter(checksheetParameterForm)\\\">\\r\\n            <input type=\\\"hidden\\\" name=\\\"checkSheetId\\\" formControlName=\\\"checkSheetId\\\" />\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <label for=\\\"parameterTypeId\\\" class=\\\"col-sm-12 col-form-label\\\">Field\\r\\n                        Type &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"template\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                            [placeholder]=\\\"'Select Field Type'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                            [(ngModel)]=\\\"selectedDet.parameterType\\\" [data]=\\\"getSortFunction(paraTypeList,'paraType')\\\"\\r\\n                            formControlName=\\\"parameterTypeId\\\" (onSelect)=\\\"onParameterTypeSelect($event)\\\"\\r\\n                            (onDeSelect)=\\\"onParameterTypeSelect(false)\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"checksheetParameterForm.controls['parameterTypeId'].invalid && (checksheetParameterForm.controls['parameterTypeId'].touched || checksheetParameterForm.controls['parameterTypeId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"checksheetParameterForm.controls['parameterTypeId'].errors.required\\\">\\r\\n                                Please select field type\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <label for=\\\"parameter\\\" class=\\\"col-sm-12 col-form-label\\\">Field\\r\\n                        &nbsp;<span class=\\\"astrik\\\">*</span>&nbsp;\\r\\n                        <!-- <small style=\\\"color:red\\\" *ngIf=\\\"isNoteShowParameter\\\">&nbsp;&nbsp;[Only]</small> -->\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <input placeholder=\\\"Enter Actual Parameter\\\"\\r\\n                            *ngIf=\\\"isDateTimeParameter && !isNumberParameter && !isTextParameter && !isGapParameter && !isModelParameter\\\"\\r\\n                            class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                        <input *ngIf=\\\"isNumberParameter\\\" placeholder=\\\"Enter Parameter\\\"\\r\\n                            class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                        <input\\r\\n                            *ngIf=\\\"!isNumberParameter && !isDateTimeParameter && !isModelParameter && !isGapParameter || isTextParameter\\\"\\r\\n                            placeholder=\\\"Enter Parameter\\\" class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                            formControlName=\\\"parameter\\\">\\r\\n                        <!-- <span *ngIf=\\\"isNoteShowParameter\\\" class=\\\"custom-errorMsg\\\">Note <sup style=\\\"font-size: 10px;\\\">*</sup></span> -->\\r\\n                        <!-- <label for=\\\"parameter\\\" *ngIf=\\\"isNoteShowParameter\\\" class=\\\"col-sm-12 col-form-label\\\">Note\\r\\n                        &nbsp;<span class=\\\"astrik\\\">*</span></label> -->\\r\\n                        <input *ngIf=\\\"isGapParameter && !isDateTimeParameter && !isNumberParameter \\\"\\r\\n                            placeholder=\\\"Enter Gap\\\" class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                            formControlName=\\\"parameter\\\">\\r\\n                        <input *ngIf=\\\"isModelParameter && !isDateTimeParameter\\\" placeholder=\\\"Enter From Model\\\"\\r\\n                            class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                        <div *ngIf=\\\"checksheetParameterForm.controls['parameter'].invalid && (checksheetParameterForm.controls['parameter'].touched || checksheetParameterForm.controls['parameter'].dirty) || checksheetParameterForm.get('parameter').hasError('required') \\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div\\r\\n                                *ngIf=\\\"isAddButtonClicked && checksheetParameterForm.get('parameter').hasError('required') && !isDateTimeParameter && !isNumberParameter && !isGapParameter && !isModelParameter\\\">\\r\\n                                Please\\r\\n                                enter a parameter\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\" isAddButtonClicked && isNumberParameter\\\">Please\\r\\n                                enter a number\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isAddButtonClicked && isDateTimeParameter\\\">Please\\r\\n                                enter a parameter\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isAddButtonClicked && isGapParameter\\\">Please\\r\\n                                enter a gap\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isAddButtonClicked && isModelParameter\\\">Please\\r\\n                                enter a model\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <ng-container\\r\\n                        *ngIf=\\\"( checksheetParameterForm.get('parameterTypeId').value != null && checksheetParameterForm.get('parameterTypeId').value.length > 0 && checksheetParameterForm.get('parameterTypeId').value[0].typeName == 'cyclePlan')\\\">\\r\\n                        <label for=\\\"cycleValue\\\" class=\\\"col-sm-12 col-form-label\\\">No. of Cycle\\r\\n                            &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <input placeholder=\\\"Enter No. of Cycle\\\" onkeydown=\\\"false\\\" onkeyup=\\\"false\\\"\\r\\n                                class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                                (input)=\\\"onParameterInputChange($event ,'Number')\\\" formControlName=\\\"cycleValue\\\">\\r\\n                            <div *ngIf=\\\"checksheetParameterForm.controls['cycleValue'].invalid && (checksheetParameterForm.controls['cycleValue'].touched || checksheetParameterForm.controls['cycleValue'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div\\r\\n                                    *ngIf=\\\"isAddButtonClicked && isCyclePlan && checksheetParameterForm.controls['cycleValue'].errors.required\\\">\\r\\n                                    Please enter cycle plan\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3 m-auto\\\">\\r\\n                    <button style=\\\"margin-top: 1.7rem;\\\" class=\\\"btn btn-lg submitBtn event-btn\\\" type=\\\"submit\\\"\\r\\n                        [disabled]=\\\"!disableReferModel\\\">\\r\\n                        <span *ngIf=\\\"addLoader\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                        <span *ngIf=\\\"addLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                        <span *ngIf=\\\"!addLoader\\\" class=\\\"btn-text\\\">Add </span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <!-- for cretae duplicate -->\\r\\n\\r\\n        <div *ngIf=\\\"isSelectedParaType == 'Datetime' || isSelectedParaType == 'Model'\\\" style=\\\"margin-top: 10px;\\\">\\r\\n            <form [formGroup]=\\\"checksheetParameterFormDate\\\"\\r\\n                (ngSubmit)=\\\"addChecksheetParameterCopy(checksheetParameterFormDate)\\\">\\r\\n                <input type=\\\"hidden\\\" name=\\\"checkSheetId\\\" formControlName=\\\"checkSheetId\\\" />\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"template\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                [placeholder]=\\\"'Select Field Type'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                                [(ngModel)]=\\\"selectedDet.parameterType\\\"\\r\\n                                [data]=\\\"getSortFunction(paraTypeList,'paraType')\\\" formControlName=\\\"parameterTypeId\\\"\\r\\n                                (onSelect)=\\\"onParameterTypeSelect($event)\\\" (onDeSelect)=\\\"onParameterTypeSelect(false)\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"checksheetParameterFormDate.controls['parameterTypeId'].invalid && (checksheetParameterFormDate.controls['parameterTypeId'].touched || checksheetParameterFormDate.controls['parameterTypeId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetParameterFormDate.controls['parameterTypeId'].errors.required\\\">\\r\\n                                    Please select field type\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <input placeholder=\\\"Enter Target Parameter\\\"\\r\\n                                *ngIf=\\\"isDateTimeParameter && !isNumberParameter && !isTextParameter && !isGapParameter && !isModelParameter\\\"\\r\\n                                class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                            <input *ngIf=\\\"isModelParameter && !isDateTimeParameter\\\" placeholder=\\\"Enter To Model\\\"\\r\\n                                class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                            <div *ngIf=\\\"checksheetParameterFormDate.controls['parameter'].invalid && (checksheetParameterFormDate.controls['parameter'].touched || checksheetParameterFormDate.controls['parameter'].dirty) || checksheetParameterFormDate.get('parameter').hasError('required') \\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"isAddButtonClicked && isDateTimeParameter\\\">Please\\r\\n                                    enter a parameter\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isAddButtonClicked && isModelParameter\\\">Please\\r\\n                                    enter a model\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3\\\"></div>\\r\\n                    <div class=\\\"col-md-3 m-auto\\\">\\r\\n                        <button style=\\\"margin-top: 0.2rem;\\\" class=\\\"btn btn-lg submitBtn event-btn\\\" type=\\\"submit\\\"\\r\\n                            [disabled]=\\\"!disableReferModel\\\">\\r\\n                            <span *ngIf=\\\"addLoader\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                            <span *ngIf=\\\"addLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                            <span *ngIf=\\\"!addLoader\\\" class=\\\"btn-text\\\">Add </span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <perfect-scrollbar [style.height]=\\\"'calc(100vh - 52vh)'\\\">\\r\\n        <div class *ngIf=\\\"parameterDet.rec != null && parameterDet.rec.length > 0\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Parameter Type</th>\\r\\n                        <th>Parameter</th>\\r\\n                        <th></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let x of parameterDet.rec;let paramIndex = index;\\\">\\r\\n                        <td>{{x.parameterData.typeName || ''}}</td>\\r\\n                        <td>\\r\\n                            {{x.parameter || ''}}\\r\\n                            <span *ngIf=\\\"x.parameterData.typeName == 'cyclePlan'\\\"><small>(<b>Cycle\\r\\n                                        Value :\\r\\n                                    </b>{{x.cycleValue || 0}})</small></span>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm dangerBtn\\\" (click)=\\\"removeParameter(paramIndex)\\\">\\r\\n                                <i class=\\\"fa fa-times\\\"></i>\\r\\n                            </button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </perfect-scrollbar>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn submitBtn event-btn\\\"\\r\\n                *ngIf=\\\"parameterDet.rec != null && parameterDet.rec.length > 0\\\" (click)=\\\"saveChecksheetParameter()\\\">\\r\\n                <span *ngIf=\\\"submitLoader\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                <span *ngIf=\\\"!submitLoader\\\" class=\\\"btn-text\\\">Submit </span>\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn cancelBtn m-l-5\\\" aria-label=\\\"Close\\\" [disabled]=\\\"submitLoader\\\"\\r\\n                (click)=\\\"close('Cross Click')\\\">Cancel\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"p-0 col-9\\\">\\r\\n        <div class=\\\"headerBar\\\">\\r\\n            <span class=\\\"backArrow\\\">\\r\\n                <a routerLink=\\\"..\\\"><i class=\\\"feather icon-arrow-left\\\"></i></a>\\r\\n            </span>\\r\\n            <div class=\\\"main-tab-switcher\\\">\\r\\n                <div class=\\\"main-tab-switch\\\" [ngClass]=\\\"{mainActiveSwitch:isSetChecksheetTab(3)}\\\"\\r\\n                    (click)=\\\"setcheckSheetTab(3)\\\">\\r\\n                    Create OJT Checksheet\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!isCheckSheetAvailable\\\" class=\\\"main-tab-switch\\\"\\r\\n                    [ngClass]=\\\"{mainActiveSwitch:isSetChecksheetTab(4)}\\\" (click)=\\\"setcheckSheetTab(4)\\\">\\r\\n                    Copy OJT Checksheet\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- <app-topBar title=\\\"Add OJT Checksheet\\\" style=\\\"width: 100%;\\\">\\r\\n            </app-topBar> -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-3 m-auto\\\">\\r\\n        <!-- <app-loginInfo></app-loginInfo> -->\\r\\n    </div>\\r\\n</div>\\r\\n<app-loading *ngIf=\\\"actionLoader\\\"></app-loading>\\r\\n<ng-container *ngIf=\\\"isSetChecksheetTab(3) || isCheckSheetAvailable\\\">\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <form class=\\\"checksheetForm\\\" [formGroup]=\\\"checksheetForm\\\"\\r\\n                (ngSubmit)=\\\"saveChecksheetDetails(checksheetForm)\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"plant\\\" class=\\\" col-form-label\\\">Plant &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"plant\\\" id=\\\"plant\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"plant\\\" [placeholder]=\\\"'Select Plant'\\\"\\r\\n                                [settings]=\\\"SingleBranchDropdownSettings\\\"\\r\\n                                [data]=\\\"getSortFunction(branchAccessList,'dept')\\\" [disabled]=\\\"isCheckSheetAvailable\\\"\\r\\n                                (onSelect)=\\\"onChange($event,'plant')\\\" (onDeSelect)=\\\"onChange(false,'plant')\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['plant'].invalid && (checksheetForm.controls['plant'].touched || checksheetForm.controls['plant'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['plant'].errors.required\\\">\\r\\n                                    Please select plant\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"deptId\\\" class=\\\" col-form-label\\\">Department &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"deptId\\\" id=\\\"deptId\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"deptId\\\" [placeholder]=\\\"'Select Department'\\\"\\r\\n                                [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"departmentList\\\"\\r\\n                                [disabled]=\\\"isCheckSheetAvailable\\\" (onSelect)=\\\"onChange($event,'dept')\\\"\\r\\n                                (onDeSelect)=\\\"onChange(false,'dept')\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['deptId'].invalid && (checksheetForm.controls['deptId'].touched || checksheetForm.controls['deptId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['deptId'].errors.required\\\">\\r\\n                                    Please select department\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"cellLineId\\\" class=\\\" col-form-label\\\">Cell/Line &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"cellLineId\\\" id=\\\"cellLineId\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"cellLineId\\\" [placeholder]=\\\"'Select Cell/Line'\\\"\\r\\n                                [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"cellList\\\" [disabled]=\\\"isCheckSheetAvailable\\\"\\r\\n                                (onSelect)=\\\"onChange($event,'cell')\\\" (onDeSelect)=\\\"onChange(false,'cell')\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['cellLineId'].invalid && (checksheetForm.controls['cellLineId'].touched || checksheetForm.controls['cellLineId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['cellLineId'].errors.required\\\">\\r\\n                                    Please select cell/line\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"workstationId\\\" class=\\\" col-form-label\\\">Workstation &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"workstationId\\\" id=\\\"workstationId\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"workstationId\\\" [placeholder]=\\\"'Select Workstation'\\\"\\r\\n                                [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"workforceList\\\"\\r\\n                                [disabled]=\\\"isCheckSheetAvailable\\\"\\r\\n                                (onChange)=\\\"updateLevelOptions(checksheetForm.get('workstationId').value)\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['workstationId'].invalid && (checksheetForm.controls['workstationId'].touched || checksheetForm.controls['workstationId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['workstationId'].errors.required\\\">\\r\\n                                    Please select workstation\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"level\\\" class=\\\" col-form-label\\\">Level &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"level\\\" id=\\\"level\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"level\\\" [placeholder]=\\\"'Select Level'\\\"\\r\\n                                [settings]=\\\"SingleLevelDropdownSettings\\\" [data]=\\\"LevelList\\\"\\r\\n                                [disabled]=\\\"isCheckSheetAvailable\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['level'].invalid && (checksheetForm.controls['level'].touched || checksheetForm.controls['level'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['level'].errors.required\\\">\\r\\n                                    Please select level\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"noOfDays\\\" class=\\\" col-form-label\\\">No. of Days &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <input placeholder=\\\"Enter No. of Days\\\" class=\\\"form-control checksheetinputBox\\\" id=\\\"noOfDays\\\"\\r\\n                                name=\\\"noOfDays\\\" [(ngModel)]=\\\"noOfDays\\\" formControlName=\\\"noOfDays\\\" type=\\\"number\\\"\\r\\n                                pattern=\\\"^\\\\d{1,2}$\\\">\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['noOfDays'].invalid && (checksheetForm.controls['noOfDays'].touched || checksheetForm.controls['noOfDays'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['noOfDays'].errors.required\\\">\\r\\n                                    Please enter no. of days\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"checksheetForm.get('noOfDays').hasError('zeroValue')\\\">\\r\\n                                    No. of days can not be 0.\\r\\n                                </div>\\r\\n                                <!-- <div *ngIf=\\\"checksheetForm.get('noOfDays').hasError('negativeValue')\\\">\\r\\n                                    No. of days can not be negative.\\r\\n                                </div> -->\\r\\n                                <div *ngIf=\\\"checksheetForm.get('noOfDays').hasError('pattern')\\\">\\r\\n                                    Please enter two-digit positive integer no. of days.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-5\\\">\\r\\n                        <label for=\\\"title\\\" class=\\\" col-form-label\\\">Title &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <input placeholder=\\\"Enter Checksheet Title\\\" class=\\\"form-control checksheetinputBox\\\"\\r\\n                                id=\\\"title\\\" name=\\\"title\\\" formControlName=\\\"title\\\" type=\\\"text\\\" maxlength=\\\"250\\\">\\r\\n                            <div *ngIf=\\\"checksheetForm.controls['title'].invalid && (checksheetForm.controls['title'].touched || checksheetForm.controls['title'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"checksheetForm.controls['title'].errors.required\\\">\\r\\n                                    Please enter checksheet title\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"row text-right\\\">\\r\\n                    <div class=\\\"col-md-12 m-t-5\\\">\\r\\n                        <button class=\\\"btn btn-lg submitBtn event-btn\\\" type=\\\"submit\\\">\\r\\n                            <span *ngIf=\\\"!isCheckSheetAvailable\\\" class=\\\"btn-text\\\">Submit</span>\\r\\n                            <span *ngIf=\\\"isCheckSheetAvailable\\\" class=\\\"btn-text\\\">Update</span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"isCheckSheetAvailable\\\" class=\\\"row m-t-10\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <ng-container\\r\\n                        *ngIf=\\\"(checksheetDetails.hasOwnProperty('groupPointList') && checksheetDetails.groupPointList != null && checksheetDetails.groupPointList.length != 0) || (checksheetDetails.parameterList != null && checksheetDetails.parameterList.length != 0)\\\">\\r\\n                        <div class=\\\"main-tab-switcher\\\">\\r\\n                            <div class=\\\"main-tab-switch\\\" [ngClass]=\\\"{mainActiveSwitch:isSetMainTab(1)}\\\"\\r\\n                                (click)=\\\"setMainTab(1)\\\">\\r\\n                                Key\\r\\n                                Points\\r\\n                            </div>\\r\\n                            <div class=\\\"main-tab-switch\\\" [ngClass]=\\\"{mainActiveSwitch:isSetMainTab(2)}\\\"\\r\\n                                (click)=\\\"setMainTab(2)\\\">\\r\\n                                Verification\\r\\n                                Parameter\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 text-right\\\">\\r\\n                    <button style=\\\"margin: 5px;\\\" class=\\\"btn btn-lg submitBtn event-btn m-r-10\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"openAddChecksheetPointsModal(AddChecksheetPointsModel)\\\">\\r\\n                        <span class=\\\"btn-text\\\">Add Key Points</span>\\r\\n                    </button>\\r\\n                    <button style=\\\"margin: 5px;\\\" class=\\\"btn btn-lg submitBtn event-btn m-l-5\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"openAddChecksheetPointsModal(AddChecksheetParametersModel)\\\">\\r\\n                        <span class=\\\"btn-text\\\">Add Verification Parameters</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <perfect-scrollbar [style.height]=\\\"'calc(100vh - 60vh)'\\\">\\r\\n        <div class=\\\"row m-0\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <ng-container *ngIf=\\\"isSetMainTab(1)\\\">\\r\\n                    <div class=\\\"pointsBlock\\\"\\r\\n                        *ngIf=\\\"checksheetDetails.hasOwnProperty('groupPointList') && checksheetDetails.groupPointList != null && checksheetDetails.groupPointList.length != 0\\\">\\r\\n                        <div class=\\\"row formElementsBlock\\\" *ngFor=\\\"let x of checksheetDetails.groupPointList\\\">\\r\\n                            <div class=\\\"overlay-bg\\\"></div>\\r\\n                            <table class=\\\"table table-bordered\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th colspan=\\\"2\\\">\\r\\n                                            Day : {{x.dayNo || ''}}\\r\\n                                        </th>\\r\\n                                    </tr>\\r\\n                                    <tr>\\r\\n                                        <th>Key Points</th>\\r\\n                                        <th> Reference</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody *ngFor=\\\"let point of x.pointList\\\">\\r\\n                                    <tr>\\r\\n                                        <td>{{point.itemName || ''}}</td>\\r\\n                                        <td>{{point.reference || ''}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                            <div class=\\\"actionBtn\\\">\\r\\n                                <div>\\r\\n                                    <button class=\\\"btn btn-edit btn-que-edit\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"updatePoint(AddChecksheetPointsModel,x)\\\">EDIT</button>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <button class=\\\"btn ques-delete-btn btn-que-delete\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"deleteChecksheetPoint(x)\\\">DELETE</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isSetMainTab(2)\\\">\\r\\n                    <div class=\\\"pointsBlock\\\"\\r\\n                        *ngIf=\\\"checksheetDetails.parameterList != null && checksheetDetails.parameterList.length != 0\\\">\\r\\n                        <table class=\\\"table table-bordered\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 20%;\\\"> Field Type</th>\\r\\n                                    <th> Field</th>\\r\\n                                    <th *ngIf=\\\"isActionTakenInParam()\\\" style=\\\"width: 20%;\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody class=\\\"formElementsBlock1\\\"\\r\\n                                [ngClass]=\\\"isActionTakenInParam() ? '' : 'formElementsBlock'\\\"\\r\\n                                *ngFor=\\\"let x of checksheetDetails.parameterList\\\">\\r\\n                                <div class=\\\"overlay-bg\\\" *ngIf=\\\"!isActionTakenInParam()\\\"></div>\\r\\n                                <tr>\\r\\n                                    <td style=\\\"width: 20%;\\\">\\r\\n                                        {{x.parameterType || ''}}\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <span *ngIf=\\\"!x.isActionTaken\\\">\\r\\n                                            {{x.parameter || ''}}\\r\\n                                            <ng-container\\r\\n                                                *ngIf=\\\"x.hasOwnProperty('paramObj') && x.paramObj.typeCaption == 'CyclePlan'\\\">\\r\\n                                                &nbsp;<small>(<b>Cycle Value : </b>{{x.cycleValue ||\\r\\n                                                    ''}})</small></ng-container>\\r\\n                                        </span>\\r\\n                                        <div *ngIf=\\\"x.isActionTaken\\\" style=\\\"display: inline-flex;width: 100%;\\\">\\r\\n                                            <input placeholder=\\\"Enter Parameter\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n                                                [(ngModel)]=\\\"x.editableParameter\\\" name=\\\"editableParameter\\\" />\\r\\n                                            <ng-container\\r\\n                                                *ngIf=\\\"x.hasOwnProperty('paramObj') && x.paramObj.typeCaption == 'CyclePlan'\\\">&nbsp;\\r\\n                                                <input placeholder=\\\"Enter Cycle Value\\\" class=\\\"form-control\\\"\\r\\n                                                    type=\\\"number\\\" [(ngModel)]=\\\"x.editableCycleValue\\\"\\r\\n                                                    name=\\\"editableCycleValue\\\" />\\r\\n                                            </ng-container>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td *ngIf=\\\"x.isActionTaken\\\" style=\\\"width: 20%;\\\">\\r\\n                                        <button class=\\\"btn submitBtn\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"updateParameter(x,'')\\\">Update</button>&nbsp;&nbsp;\\r\\n                                        <button class=\\\"btn borderBtn\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"updateParameter(x,'cancel')\\\">Cancel</button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <div class=\\\"actionBtn\\\">\\r\\n                                    <div>\\r\\n                                        <button class=\\\"btn btn-edit btn-que-edit\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"updateParameter(x,'edit')\\\">EDIT</button>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <button class=\\\"btn ques-delete-btn btn-que-delete\\\" type=\\\"button\\\"\\r\\n                                            (click)=\\\"deleteChecksheetParameter(x)\\\">DELETE</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </perfect-scrollbar>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"isSetChecksheetTab(4) && !isCheckSheetAvailable\\\">\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <form class=\\\"checksheetForm\\\" [formGroup]=\\\"copyChecksheetForm\\\"\\r\\n                (ngSubmit)=\\\"saveCopyChecksheetDetails(copyChecksheetForm)\\\" [style.height]=\\\"'calc(100vh - 11vh)'\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"plant\\\" class=\\\" col-form-label\\\">Plant &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"plant\\\" id=\\\"plant\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"plant\\\" [ngModel]=\\\"copyChecksheetDetails.plant\\\"\\r\\n                                [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleBranchDropdownSettings\\\"\\r\\n                                [data]=\\\"getSortFunction(branchAccessList,'dept')\\\" [disabled]=\\\"isCheckSheetAvailable\\\"\\r\\n                                (onSelect)=\\\"onPlantChange($event,'plant')\\\" (onDeSelect)=\\\"onChange(false,'plant')\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"isDirty && copyChecksheetForm.controls['plant'].invalid && (copyChecksheetForm.controls['plant'].touched || copyChecksheetForm.controls['plant'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['plant'].errors.required\\\">\\r\\n                                    Please select plant\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"deptId\\\" class=\\\" col-form-label\\\">Department &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"deptId\\\" id=\\\"deptId\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"deptId\\\" ([ngModel])=\\\"copyChecksheetDetails.dept\\\"\\r\\n                                [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                                [data]=\\\"departmentList\\\" [disabled]=\\\"isCheckSheetAvailable\\\"\\r\\n                                (onSelect)=\\\"onPlantChange($event,'dept')\\\" (onDeSelect)=\\\"onChange(false,'dept')\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"copyChecksheetForm.controls['deptId'].invalid && (copyChecksheetForm.controls['deptId'].touched || copyChecksheetForm.controls['deptId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['deptId'].errors.required\\\">\\r\\n                                    Please select department\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"cellLineId\\\" class=\\\" col-form-label\\\">Cell/Line &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"cellLineId\\\" id=\\\"cellLineId\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"cellLineId\\\" ([ngModel])=\\\"copyChecksheetDetails.cell\\\"\\r\\n                                [placeholder]=\\\"'Select Cell/Line'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"cellList\\\"\\r\\n                                [disabled]=\\\"isCheckSheetAvailable\\\" (onSelect)=\\\"onPlantChange($event,'cell')\\\"\\r\\n                                (onDeSelect)=\\\"onChange(false,'cell')\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"copyChecksheetForm.controls['cellLineId'].invalid && (copyChecksheetForm.controls['cellLineId'].touched || copyChecksheetForm.controls['cellLineId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['cellLineId'].errors.required\\\">\\r\\n                                    Please select cell/line\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"workstationId\\\" class=\\\" col-form-label\\\">Workstation &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"workstationId\\\" id=\\\"workstationId\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"workstationId\\\" ([ngModel])=\\\"copyChecksheetDetails.workstation\\\"\\r\\n                                [placeholder]=\\\"'Select Workstation'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                                [data]=\\\"workforceList\\\" [disabled]=\\\"isCheckSheetAvailable\\\"\\r\\n                                (onChange)=\\\"updateLevelOptions(copyChecksheetForm.get('workstationId').value)\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"copyChecksheetForm.controls['workstationId'].invalid && (copyChecksheetForm.controls['workstationId'].touched || copyChecksheetForm.controls['workstationId'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['workstationId'].errors.required\\\">\\r\\n                                    Please select workstation\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"level\\\" class=\\\" col-form-label\\\">Level &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <ng-multiselect-dropdown name=\\\"level\\\" id=\\\"level\\\"\\r\\n                                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                formControlName=\\\"level\\\" ([ngModel])=\\\"copyChecksheetDetails.level\\\"\\r\\n                                (onSelect)=\\\"onPlantChange($event,'level')\\\" [placeholder]=\\\"'Select Level'\\\"\\r\\n                                [settings]=\\\"SingleLevelDropdownSettings\\\" [data]=\\\"LevelList\\\"\\r\\n                                [disabled]=\\\"isCheckSheetAvailable\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                            <div *ngIf=\\\"copyChecksheetForm.controls['level'].invalid && (copyChecksheetForm.controls['level'].touched || copyChecksheetForm.controls['level'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['level'].errors.required\\\">\\r\\n                                    Please select level\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label for=\\\"noOfDays\\\" class=\\\" col-form-label\\\">No. of Days &nbsp;<span\\r\\n                                class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <input placeholder=\\\"Enter No. of Days\\\" class=\\\"form-control checksheetinputBox\\\" id=\\\"noOfDays\\\"\\r\\n                                name=\\\"noOfDays\\\" ([ngModel])=\\\"copyChecksheetDetails.noOfDays\\\" formControlName=\\\"noOfDays\\\"\\r\\n                                type=\\\"number\\\" pattern=\\\"^\\\\d{1,2}$\\\">\\r\\n                            <div *ngIf=\\\"copyChecksheetForm.controls['noOfDays'].invalid && (copyChecksheetForm.controls['noOfDays'].touched || copyChecksheetForm.controls['noOfDays'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['noOfDays'].errors.required\\\">\\r\\n                                    Please enter no. of days\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.get('noOfDays').hasError('zeroValue')\\\">\\r\\n                                    No. of days can not be 0.\\r\\n                                </div>\\r\\n                                <!-- <div *ngIf=\\\"copyChecksheetForm.get('noOfDays').hasError('negativeValue')\\\">\\r\\n                                    No. of days can not be negative.\\r\\n                                </div> -->\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.get('noOfDays').hasError('pattern')\\\">\\r\\n                                    Please enter two-digit positive integer no. of days.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-5\\\">\\r\\n                        <label for=\\\"title\\\" class=\\\" col-form-label\\\">Title &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                        <div class=\\\"\\\">\\r\\n                            <input placeholder=\\\"Enter Checksheet Title\\\" class=\\\"form-control checksheetinputBox\\\"\\r\\n                                id=\\\"title\\\" name=\\\"title\\\" formControlName=\\\"title\\\"\\r\\n                                ([ngModel])=\\\"copyChecksheetDetails.title\\\" type=\\\"text\\\" maxlength=\\\"250\\\">\\r\\n                            <div *ngIf=\\\"copyChecksheetForm.controls['title'].invalid && (copyChecksheetForm.controls['title'].touched || copyChecksheetForm.controls['title'].dirty)\\\"\\r\\n                                class=\\\"custom-errorMsg\\\">\\r\\n                                <div *ngIf=\\\"copyChecksheetForm.controls['title'].errors.required\\\">\\r\\n                                    Please enter checksheet title\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"copy-checksheets\\\" *ngIf=\\\"checksheetList != null && checksheetList.length > 0\\\">\\r\\n                    <perfect-scrollbar [style.height]=\\\"'calc(100vh - 63vh)'\\\">\\r\\n                        <div class=\\\"row m-t-10\\\">\\r\\n                            <div class=\\\"col-md-5\\\">\\r\\n                                <div class=\\\"txt-color-primary\\\" style=\\\"text-align:center;font-size:18px;\\\">\\r\\n                                    <span>Checksheet List</span>\\r\\n                                </div>\\r\\n                                <ng-container class=\\\"copy-checksheet-container\\\">\\r\\n                                    <div>\\r\\n                                        <div class=\\\"small-checksheet-card\\\" *ngFor=\\\"let x of checksheetList\\\"\\r\\n                                            [ngClass]=\\\"(selectedchecksheet.id==x.id) ? 'active-copy-sheet' : '' \\\">\\r\\n                                            <div style=\\\"margin-left: 10px;\\\" (click)=\\\"setChecksheet(x)\\\">\\r\\n                                                <div class=\\\"txt-capitalize checksheet-title\\\">\\r\\n                                                    {{x.title}}\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-7 checksheet-list-col\\\">\\r\\n                                <ng-container>\\r\\n                                    <div class=\\\"main-tab-switcher1\\\">\\r\\n                                        <div class=\\\"main-tab-switch\\\" [ngClass]=\\\"{mainActiveSwitch:isSetMainTab(1)}\\\"\\r\\n                                            (click)=\\\"setMainTab(1)\\\">\\r\\n                                            Key\\r\\n                                            Points\\r\\n                                        </div>\\r\\n                                        <div class=\\\"main-tab-switch\\\" [ngClass]=\\\"{mainActiveSwitch:isSetMainTab(2)}\\\"\\r\\n                                            (click)=\\\"setMainTab(2)\\\">\\r\\n                                            Verification\\r\\n                                            Parameter\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                                <div class=\\\"row m-0\\\">\\r\\n                                    <div class=\\\"col-md-12\\\" *ngIf=\\\"isCopyChecksheetDetailsAvail\\\">\\r\\n                                        <ng-container *ngIf=\\\"isSetMainTab(1)\\\">\\r\\n                                            <div class=\\\"modal-body\\\" style=\\\"padding: 10px 5px 10px 10px;\\\">\\r\\n                                                <!-- <perfect-scrollbar [style.height]=\\\"'calc(100vh - 30vh)'\\\"> -->\\r\\n                                                <ng-container formArrayName=\\\"daysList\\\">\\r\\n                                                    <div class=\\\"daywiseBlock\\\"\\r\\n                                                        *ngFor=\\\"let dayNumForm of daysList().controls; let dayNumIndex = index;let dayNumLast = last;\\\">\\r\\n                                                        <ng-container [formGroupName]=\\\"dayNumIndex\\\">\\r\\n                                                            <div class=\\\"row m-0\\\">\\r\\n                                                                <label for=\\\"dayNo\\\" class=\\\"col-sm-4 col-form-label\\\"\\r\\n                                                                    style=\\\"padding-right: 7px !important;\\\">Day\\r\\n                                                                    Number &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                                                                <div class=\\\"col-sm-6\\\"\\r\\n                                                                    style=\\\"padding-left: 0px !important;padding-right: 7px !important;\\\">\\r\\n                                                                    <input placeholder=\\\"Enter Number Day\\\"\\r\\n                                                                        class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"dayNo\\\"\\r\\n                                                                        name=\\\"dayNo\\\" formControlName=\\\"dayNo\\\" disabled>\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"col-sm-2 p-0 text-right\\\">\\r\\n                                                                    <button type=\\\"button\\\" class=\\\"btn btn-sm successBtn\\\"\\r\\n                                                                        *ngIf=\\\"dayNumLast\\\"\\r\\n                                                                        (click)=\\\"addDaysRow(daysList().controls.length)\\\">\\r\\n                                                                        <i class=\\\"fa fa-plus\\\"></i>\\r\\n                                                                    </button>&nbsp;&nbsp;\\r\\n                                                                    <button type=\\\"button\\\" class=\\\"btn btn-sm dangerBtn\\\"\\r\\n                                                                        (click)=\\\"removeDayNumRow(dayNumIndex)\\\"\\r\\n                                                                        *ngIf=\\\"daysList().controls.length > 1\\\">\\r\\n                                                                        <i class=\\\"fa fa-times\\\"></i>\\r\\n                                                                    </button>&nbsp;&nbsp;\\r\\n                                                                    <button type=\\\"button\\\" class=\\\"btn btn-sm borderBtn\\\"\\r\\n                                                                        (click)=\\\"dayNumForm.isVisible = (dayNumForm.isVisible) ? false : true\\\">\\r\\n                                                                        <i class=\\\"fa\\\"\\r\\n                                                                            [ngClass]=\\\"(dayNumForm.isVisible) ? 'fa-chevron-up':'fa-chevron-down'\\\"></i>\\r\\n                                                                    </button>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <ng-container formArrayName=\\\"pointList\\\"\\r\\n                                                                *ngIf=\\\"!dayNumForm.isVisible\\\">\\r\\n                                                                <table class=\\\"table table-bordered\\\"\\r\\n                                                                    style=\\\"margin-top: 10px;\\\">\\r\\n                                                                    <thead>\\r\\n                                                                        <tr>\\r\\n                                                                            <th>Key Points &nbsp;<span\\r\\n                                                                                    class=\\\"astrik\\\">*</span></th>\\r\\n                                                                            <th>Reference\\r\\n                                                                                <!--&nbsp;<span class=\\\"astrik\\\">*</span>-->\\r\\n                                                                            </th>\\r\\n                                                                            <th style=\\\"width: 10%;\\\"></th>\\r\\n                                                                        </tr>\\r\\n                                                                    </thead>\\r\\n                                                                    <tbody>\\r\\n                                                                        <tr\\r\\n                                                                            *ngFor=\\\"let point of pointList(dayNumIndex).controls; let pointIndex = index;let pointLast = last;\\\">\\r\\n                                                                            <ng-container [formGroupName]=\\\"pointIndex\\\">\\r\\n                                                                                <td>\\r\\n                                                                                    <input type=\\\"hidden\\\" name=\\\"id\\\"\\r\\n                                                                                        formControlName=\\\"id\\\" />\\r\\n                                                                                    <input type=\\\"hidden\\\" name=\\\"action\\\"\\r\\n                                                                                        formControlName=\\\"action\\\" />\\r\\n                                                                                    <input\\r\\n                                                                                        placeholder=\\\"Enter Checksheet Point\\\"\\r\\n                                                                                        class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n                                                                                        id=\\\"itemName\\\" name=\\\"itemName\\\"\\r\\n                                                                                        formControlName=\\\"itemName\\\" />\\r\\n                                                                                    <div *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('itemName').invalid && (pointList(dayNumIndex).controls.at(pointIndex).get('itemName').touched || pointList(dayNumIndex).controls.at(pointIndex).get('itemName').dirty)\\\"\\r\\n                                                                                        class=\\\"custom-errorMsg\\\">\\r\\n                                                                                        <div\\r\\n                                                                                            *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('itemName').errors.required\\\">\\r\\n                                                                                            Please enter checksheet\\r\\n                                                                                            point\\r\\n                                                                                        </div>\\r\\n                                                                                    </div>\\r\\n                                                                                </td>\\r\\n                                                                                <td>\\r\\n                                                                                    <input placeholder=\\\"Enter Reference\\\"\\r\\n                                                                                        class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n                                                                                        id=\\\"reference\\\" name=\\\"reference\\\"\\r\\n                                                                                        formControlName=\\\"reference\\\" />\\r\\n                                                                                    <div *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('reference').invalid && (pointList(dayNumIndex).controls.at(pointIndex).get('reference').touched || pointList(dayNumIndex).controls.at(pointIndex).get('reference').dirty)\\\"\\r\\n                                                                                        class=\\\"custom-errorMsg\\\">\\r\\n                                                                                        <div\\r\\n                                                                                            *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('reference').errors.required\\\">\\r\\n                                                                                            Please enter reference\\r\\n                                                                                        </div>\\r\\n                                                                                    </div>\\r\\n                                                                                </td>\\r\\n                                                                                <td style=\\\"width: 10%;\\\">\\r\\n                                                                                    <button type=\\\"button\\\"\\r\\n                                                                                        class=\\\"btn btn-sm successBtn\\\"\\r\\n                                                                                        (click)=\\\"addPointsRow(dayNumIndex)\\\"\\r\\n                                                                                        *ngIf=\\\"pointLast\\\">\\r\\n                                                                                        <i\\r\\n                                                                                            class=\\\"fa fa-plus\\\"></i></button>&nbsp;&nbsp;\\r\\n                                                                                    <button type=\\\"button\\\"\\r\\n                                                                                        class=\\\"btn btn-sm dangerBtn\\\"\\r\\n                                                                                        (click)=\\\"removePointRow(dayNumIndex,pointIndex)\\\"\\r\\n                                                                                        *ngIf=\\\"pointList(dayNumIndex).controls.length > 1\\\">\\r\\n                                                                                        <i class=\\\"fa fa-times\\\"></i>\\r\\n                                                                                    </button>\\r\\n                                                                                </td>\\r\\n                                                                            </ng-container>\\r\\n                                                                        </tr>\\r\\n                                                                    </tbody>\\r\\n                                                                </table>\\r\\n                                                            </ng-container>\\r\\n                                                        </ng-container>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                                <!-- </perfect-scrollbar> -->\\r\\n                                            </div>\\r\\n                                        </ng-container>\\r\\n                                        <ng-container *ngIf=\\\"isSetMainTab(2)\\\">\\r\\n                                            <div class=\\\"modal-body\\\" style=\\\"padding: 10px;\\\">\\r\\n                                                <div class=\\\"checksheetForm\\\">\\r\\n                                                    <div class=\\\"row\\\">\\r\\n                                                        <div class=\\\"col-md-3\\\" style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\">\\r\\n                                                            <!-- style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\" -->\\r\\n                                                            <label for=\\\"parameterTypeId\\\"\\r\\n                                                                class=\\\"col-sm-12 col-form-label\\\">Field\\r\\n                                                                Type &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                                                            <div class=\\\"col-sm-12\\\"\\r\\n                                                                style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\">\\r\\n                                                                <ng-multiselect-dropdown name=\\\"template\\\"\\r\\n                                                                    class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                                                    [placeholder]=\\\"'Select Field Type'\\\"\\r\\n                                                                    [settings]=\\\"SingleParaDropdownSettings\\\"\\r\\n                                                                    [(ngModel)]=\\\"copyChecksheetDetails.parameterType\\\"\\r\\n                                                                    [data]=\\\"getParaSortFunction(paraTypeList,'paraType')\\\"\\r\\n                                                                    formControlName=\\\"parameterTypeId\\\"\\r\\n                                                                    (onSelect)=\\\"onParameterTypeSelect($event)\\\"\\r\\n                                                                    (onDeSelect)=\\\"onParameterTypeSelect(false)\\\">\\r\\n                                                                </ng-multiselect-dropdown>\\r\\n                                                                <div *ngIf=\\\"isAddButtonClicked\\\" class=\\\"custom-errorMsg\\\">\\r\\n                                                                    <div\\r\\n                                                                        *ngIf=\\\"copyChecksheetDetails.parameterType == null || copyChecksheetDetails.parameterType.length == 0\\\">\\r\\n                                                                        Please select field type\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-md-3\\\">\\r\\n                                                            <!--  style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\" -->\\r\\n                                                            <label for=\\\"parameter\\\"\\r\\n                                                                class=\\\"col-sm-12 col-form-label\\\">Field\\r\\n                                                                &nbsp;<span class=\\\"astrik\\\">*</span>&nbsp;\\r\\n                                                            </label>\\r\\n\\r\\n                                                            <div class=\\\"col-sm-12\\\"\\r\\n                                                                style=\\\"padding-right: 5px !important;padding-left: 0px !important;\\\">\\r\\n                                                                <input placeholder=\\\"Enter Parameter\\\"\\r\\n                                                                    *ngIf=\\\"isDateTimeParameter && !isNumberParameter && !isTextParameter && !isGapParameter && !isModelParameter\\\"\\r\\n                                                                    class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                                                                    formControlName=\\\"parameter\\\"\\r\\n                                                                    [(ngModel)]=\\\"copyChecksheetDetails.parameter\\\">\\r\\n                                                                <input *ngIf=\\\"isNumberParameter\\\"\\r\\n                                                                    placeholder=\\\"Enter Parameter\\\"\\r\\n                                                                    class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                                                                    formControlName=\\\"parameter\\\"\\r\\n                                                                    [(ngModel)]=\\\"copyChecksheetDetails.parameter\\\">\\r\\n                                                                <input\\r\\n                                                                    *ngIf=\\\"!isNumberParameter && !isDateTimeParameter && !isModelParameter && !isGapParameter || isTextParameter\\\"\\r\\n                                                                    placeholder=\\\"Enter Parameter\\\"\\r\\n                                                                    class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                                                                    formControlName=\\\"parameter\\\"\\r\\n                                                                    [(ngModel)]=\\\"copyChecksheetDetails.parameter\\\">\\r\\n                                                                <input\\r\\n                                                                    *ngIf=\\\"isGapParameter && !isDateTimeParameter && !isNumberParameter \\\"\\r\\n                                                                    placeholder=\\\"Enter Gap\\\"\\r\\n                                                                    class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                                                                    formControlName=\\\"parameter\\\"\\r\\n                                                                    [(ngModel)]=\\\"copyChecksheetDetails.parameter\\\">\\r\\n                                                                <input *ngIf=\\\"isModelParameter && !isDateTimeParameter\\\"\\r\\n                                                                    placeholder=\\\"Enter Model\\\"\\r\\n                                                                    class=\\\"form-control checksheetinputBox\\\" type=\\\"text\\\"\\r\\n                                                                    formControlName=\\\"parameter\\\"\\r\\n                                                                    [(ngModel)]=\\\"copyChecksheetDetails.parameter\\\">\\r\\n                                                                <div *ngIf=\\\"isAddButtonClicked\\\" class=\\\"custom-errorMsg\\\">\\r\\n                                                                    <div\\r\\n                                                                        *ngIf=\\\"copyChecksheetDetails.parameter == undefined || copyChecksheetDetails.parameter == ''\\\">\\r\\n                                                                        Please\\r\\n                                                                        enter a parameter\\r\\n                                                                    </div>\\r\\n                                                                    <div\\r\\n                                                                        *ngIf=\\\" isAddButtonClicked && isNumberParameter\\\">\\r\\n                                                                        Please\\r\\n                                                                        enter a number\\r\\n                                                                    </div>\\r\\n                                                                    <div\\r\\n                                                                        *ngIf=\\\"isAddButtonClicked && isDateTimeParameter\\\">\\r\\n                                                                        Please\\r\\n                                                                        enter a parameter\\r\\n                                                                    </div>\\r\\n                                                                    <div *ngIf=\\\"isAddButtonClicked && isGapParameter\\\">\\r\\n                                                                        Please\\r\\n                                                                        enter a gap\\r\\n                                                                    </div>\\r\\n                                                                    <div *ngIf=\\\"isAddButtonClicked && isModelParameter\\\">\\r\\n                                                                        Please\\r\\n                                                                        enter a model\\r\\n                                                                    </div>\\r\\n\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-md-3\\\"\\r\\n                                                            style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\">\\r\\n                                                            <ng-container\\r\\n                                                                *ngIf=\\\"(copyChecksheetDetails.parameterType[0].typeName == 'cyclePlan')\\\">\\r\\n                                                                <label for=\\\"cycleValue\\\"\\r\\n                                                                    class=\\\"col-sm-12 col-form-label\\\">No.\\r\\n                                                                    of\\r\\n                                                                    Cycle\\r\\n                                                                    &nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                                                                <div class=\\\"col-sm-12\\\"\\r\\n                                                                    style=\\\"padding-right: 5px !important;padding-left: 0px !important;\\\">\\r\\n                                                                    <input placeholder=\\\"Enter No. of Cycle\\\"\\r\\n                                                                        onkeydown=\\\"false\\\" onkeyup=\\\"false\\\"\\r\\n                                                                        class=\\\"form-control checksheetinputBox\\\"\\r\\n                                                                        type=\\\"text\\\"\\r\\n                                                                        (input)=\\\"onParameterInputChange($event ,'Number')\\\"\\r\\n                                                                        formControlName=\\\"cycleValue\\\"\\r\\n                                                                        [(ngModel)]=\\\"copyChecksheetDetails.cycleValue\\\">\\r\\n                                                                    <div *ngIf=\\\"isAddButtonClicked\\\"\\r\\n                                                                        class=\\\"custom-errorMsg\\\">\\r\\n                                                                        <div\\r\\n                                                                            *ngIf=\\\"copyChecksheetDetails.cycleValue == undefined || copyChecksheetDetails.cycleValue == ''\\\">\\r\\n                                                                            Please enter cycle plan\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </ng-container>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"col-md-3 m-auto\\\">\\r\\n                                                            <button style=\\\"margin-top: 0.2rem;\\\"\\r\\n                                                                class=\\\"btn btn-lg submitBtn event-btn\\\" type=\\\"button\\\"\\r\\n                                                                (click)=\\\"addChecksheetParameter()\\\">\\r\\n                                                                <span *ngIf=\\\"addLoader\\\"\\r\\n                                                                    class=\\\"spinner-grow spinner-grow-sm\\\"\\r\\n                                                                    role=\\\"status\\\"></span>\\r\\n                                                                <span *ngIf=\\\"addLoader\\\" class=\\\"load-text\\\">\\r\\n                                                                    Loading...</span>\\r\\n                                                                <span *ngIf=\\\"!addLoader\\\" class=\\\"btn-text\\\">Add </span>\\r\\n                                                            </button>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                    <div\\r\\n                                                        *ngIf=\\\"isSelectedParaType == 'Datetime' || isSelectedParaType == 'Model'\\\">\\r\\n                                                        <!-- <form [formGroup]=\\\"checksheetParameterFormDate\\\"\\r\\n                                                    (ngSubmit)=\\\"addChecksheetParameter(checksheetParameterFormDate)\\\"> -->\\r\\n                                                        <input type=\\\"hidden\\\" name=\\\"checkSheetId\\\"\\r\\n                                                            formControlName=\\\"checkSheetId\\\" />\\r\\n                                                        <div class=\\\"row\\\" style=\\\"margin-top: 6px;\\\">\\r\\n                                                            <div class=\\\"col-md-3\\\"\\r\\n                                                                style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\">\\r\\n                                                                <div class=\\\"col-sm-12\\\"\\r\\n                                                                    style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\">\\r\\n                                                                    <ng-multiselect-dropdown name=\\\"template\\\"\\r\\n                                                                        class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                                                                        [placeholder]=\\\"'Select Field Type'\\\"\\r\\n                                                                        [settings]=\\\"SingleParaDropdownSettings\\\"\\r\\n                                                                        [(ngModel)]=\\\"copyChecksheetDetails.parameterType\\\"\\r\\n                                                                        [data]=\\\"getParaSortFunction(paraTypeList,'paraType')\\\"\\r\\n                                                                        formControlName=\\\"parameterTypeId\\\"\\r\\n                                                                        (onSelect)=\\\"onParameterTypeSelect($event)\\\"\\r\\n                                                                        (onDeSelect)=\\\"onParameterTypeSelect(false)\\\">\\r\\n                                                                    </ng-multiselect-dropdown>\\r\\n                                                                    <div *ngIf=\\\"isAddButtonClicked\\\"\\r\\n                                                                        class=\\\"custom-errorMsg\\\">\\r\\n                                                                        <div\\r\\n                                                                            *ngIf=\\\"copyChecksheetDetails.parameterType == null || copyChecksheetDetails.parameterType.length == 0\\\">\\r\\n                                                                            Please select field type\\r\\n                                                                        </div>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"col-md-3\\\">\\r\\n                                                                <!-- \\r\\n                                                                style=\\\"padding-right: 5px !important;padding-left: 5px !important;\\\" -->\\r\\n                                                                <div class=\\\"col-sm-12\\\"\\r\\n                                                                style=\\\"padding-right: 5px !important;padding-left: 0px !important;\\\">\\r\\n                                                                    <input placeholder=\\\"Enter Target Parameter\\\"\\r\\n                                                                        *ngIf=\\\"isDateTimeParameter && !isNumberParameter && !isTextParameter && !isGapParameter && !isModelParameter\\\"\\r\\n                                                                        class=\\\"form-control checksheetinputBox\\\"\\r\\n                                                                        [(ngModel)]=\\\"copyChecksheetDetails.parameter1\\\"\\r\\n                                                                        type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                                                                    <input\\r\\n                                                                        *ngIf=\\\"isModelParameter && !isDateTimeParameter\\\"\\r\\n                                                                        placeholder=\\\"Enter To Model\\\"\\r\\n                                                                        class=\\\"form-control checksheetinputBox\\\"\\r\\n                                                                        [(ngModel)]=\\\"copyChecksheetDetails.parameter1\\\"\\r\\n                                                                        type=\\\"text\\\" formControlName=\\\"parameter\\\">\\r\\n                                                                </div>\\r\\n                                                            </div>\\r\\n                                                            <div class=\\\"col-md-3\\\"></div>\\r\\n                                                            <div class=\\\"col-md-3 m-auto\\\">\\r\\n                                                                <button style=\\\"margin-top: 0.2rem;\\\"\\r\\n                                                                    class=\\\"btn btn-lg submitBtn event-btn\\\" type=\\\"button\\\"\\r\\n                                                                    (click)=\\\"addChecksheetParameter()\\\">\\r\\n                                                                    <span *ngIf=\\\"addLoader\\\"\\r\\n                                                                        class=\\\"spinner-grow spinner-grow-sm\\\"\\r\\n                                                                        role=\\\"status\\\"></span>\\r\\n                                                                    <span *ngIf=\\\"addLoader\\\" class=\\\"load-text\\\">\\r\\n                                                                        Loading...</span>\\r\\n                                                                    <span *ngIf=\\\"!addLoader\\\" class=\\\"btn-text\\\">Add\\r\\n                                                                    </span>\\r\\n                                                                </button>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                        <!-- </form> -->\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <!-- <perfect-scrollbar [style.height]=\\\"'calc(100vh - 40vh)'\\\"> -->\\r\\n                                                <div class\\r\\n                                                    *ngIf=\\\"parameterDet.rec != null && parameterDet.rec.length > 0\\\">\\r\\n                                                    <table class=\\\"table table-bordered\\\">\\r\\n                                                        <thead>\\r\\n                                                            <tr>\\r\\n                                                                <th>Parameter Type</th>\\r\\n                                                                <th>Parameter</th>\\r\\n                                                                <th></th>\\r\\n                                                            </tr>\\r\\n                                                        </thead>\\r\\n                                                        <tbody>\\r\\n                                                            <tr\\r\\n                                                                *ngFor=\\\"let x of parameterDet.rec;let paramIndex = index;\\\">\\r\\n                                                                <td>{{x.parameterData.typeName || ''}}</td>\\r\\n                                                                <td>\\r\\n                                                                    {{x.parameter || ''}}\\r\\n                                                                    <span\\r\\n                                                                        *ngIf=\\\"x.parameterData.typeName == 'cyclePlan'\\\"><small>(<b>Cycle\\r\\n                                                                                Value :\\r\\n                                                                            </b>{{x.cycleValue || 0}})</small></span>\\r\\n                                                                </td>\\r\\n                                                                <td>\\r\\n                                                                    <button type=\\\"button\\\" class=\\\"btn btn-sm dangerBtn\\\"\\r\\n                                                                        (click)=\\\"removeParameter(paramIndex)\\\">\\r\\n                                                                        <i class=\\\"fa fa-times\\\"></i>\\r\\n                                                                    </button>\\r\\n                                                                </td>\\r\\n                                                            </tr>\\r\\n                                                        </tbody>\\r\\n                                                    </table>\\r\\n                                                </div>\\r\\n                                                <!-- </perfect-scrollbar> -->\\r\\n                                            </div>\\r\\n                                        </ng-container>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </perfect-scrollbar>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row text-right\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn submitBtn event-btn\\\">\\r\\n                            <span *ngIf=\\\"submitLoader\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                            <span *ngIf=\\\"submitLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                            <span *ngIf=\\\"!submitLoader\\\" class=\\\"btn-text\\\">Submit </span>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn cancelBtn m-l-5\\\" aria-label=\\\"Close\\\" [disabled]=\\\"submitLoader\\\"\\r\\n                            (click)=\\\"close('Cross Click')\\\">Cancel\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n<!-- Add OJT Checksheet point or Update Popup -->\\r\\n<ng-template #AddChecksheetPointsModel let-modal let-c=\\\"close\\\">\\r\\n    <app-add-check-sheet-points [close]=\\\"c\\\" [dayValue]=\\\"noOfDays\\\"></app-add-check-sheet-points>\\r\\n</ng-template>\\r\\n\\r\\n<!-- Add OJT Checksheet Parameter Popup -->\\r\\n<ng-template #AddChecksheetParametersModel let-modal let-c=\\\"close\\\">\\r\\n    <app-add-check-sheet-parameter [close]=\\\"c\\\"></app-add-check-sheet-parameter>\\r\\n</ng-template>\";","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 style=\\\"color: #7044cd;font-weight: bold;\\\" class=\\\"modal-title headerTitle\\\" id=\\\"modal-basic-title\\\">Add OJT\\r\\n        Checksheet Points</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close('Cross Click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<form class=\\\"checksheetForm\\\" [formGroup]=\\\"checkSheetForm\\\" (ngSubmit)=\\\"saveChecksheetForm(checkSheetForm)\\\"\\r\\n    autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"modal-body\\\" style=\\\"padding: 10px 5px 10px 10px;\\\">\\r\\n        <perfect-scrollbar [style.height]=\\\"'calc(100vh - 15vh)'\\\">\\r\\n            <ng-container formArrayName=\\\"daysList\\\">\\r\\n                <div class=\\\"daywiseBlock\\\"\\r\\n                    *ngFor=\\\"let dayNumForm of daysList().controls; let dayNumIndex = index;let dayNumLast = last;\\\">\\r\\n                    <ng-container [formGroupName]=\\\"dayNumIndex\\\">\\r\\n                        <div class=\\\"row m-0\\\">\\r\\n                            <label for=\\\"dayNo\\\" class=\\\"col-sm-2 col-form-label\\\">Day Number &nbsp;<span\\r\\n                                    class=\\\"astrik\\\">*</span></label>\\r\\n                            <div class=\\\"col-sm-8\\\">\\r\\n                                <input placeholder=\\\"Enter Number Day\\\" class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"dayNo\\\"\\r\\n                                    name=\\\"dayNo\\\" formControlName=\\\"dayNo\\\" disabled>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-2 p-0 text-right\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm successBtn\\\"\\r\\n                                    *ngIf=\\\"dayNumLast && !selectedDet.isEditPoint\\\"\\r\\n                                    (click)=\\\"addDaysRow(daysList().controls.length)\\\">\\r\\n                                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                                </button>&nbsp;&nbsp;\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm dangerBtn\\\"\\r\\n                                    (click)=\\\"removeDayNumRow(dayNumIndex)\\\" *ngIf=\\\"daysList().controls.length > 1\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                                </button>&nbsp;&nbsp;\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm borderBtn\\\"\\r\\n                                    (click)=\\\"dayNumForm.isVisible = (dayNumForm.isVisible) ? false : true\\\">\\r\\n                                    <i class=\\\"fa\\\"\\r\\n                                        [ngClass]=\\\"(dayNumForm.isVisible) ? 'fa-chevron-up':'fa-chevron-down'\\\"></i>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <ng-container formArrayName=\\\"pointList\\\" *ngIf=\\\"!dayNumForm.isVisible\\\">\\r\\n                            <table class=\\\"table table-bordered\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Key Points &nbsp;<span class=\\\"astrik\\\">*</span></th>\\r\\n                                        <th>Reference <!--&nbsp;<span class=\\\"astrik\\\">*</span>--></th>\\r\\n                                        <th style=\\\"width: 10%;\\\"></th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr\\r\\n                                        *ngFor=\\\"let point of pointList(dayNumIndex).controls; let pointIndex = index;let pointLast = last;\\\">\\r\\n                                        <ng-container [formGroupName]=\\\"pointIndex\\\">\\r\\n                                            <td>\\r\\n                                                <input type=\\\"hidden\\\" name=\\\"id\\\" formControlName=\\\"id\\\" />\\r\\n                                                <input type=\\\"hidden\\\" name=\\\"action\\\" formControlName=\\\"action\\\" />\\r\\n                                                <input placeholder=\\\"Enter Checksheet Point\\\" class=\\\"form-control\\\"\\r\\n                                                    type=\\\"text\\\" id=\\\"itemName\\\" name=\\\"itemName\\\"\\r\\n                                                    formControlName=\\\"itemName\\\" />\\r\\n                                                <div *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('itemName').invalid && (pointList(dayNumIndex).controls.at(pointIndex).get('itemName').touched || pointList(dayNumIndex).controls.at(pointIndex).get('itemName').dirty)\\\"\\r\\n                                                    class=\\\"custom-errorMsg\\\">\\r\\n                                                    <div\\r\\n                                                        *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('itemName').errors.required\\\">\\r\\n                                                        Please enter checksheet point\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                                <input placeholder=\\\"Enter Reference\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n                                                    id=\\\"reference\\\" name=\\\"reference\\\" formControlName=\\\"reference\\\" />\\r\\n                                                <div *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('reference').invalid && (pointList(dayNumIndex).controls.at(pointIndex).get('reference').touched || pointList(dayNumIndex).controls.at(pointIndex).get('reference').dirty)\\\"\\r\\n                                                    class=\\\"custom-errorMsg\\\">\\r\\n                                                    <div\\r\\n                                                        *ngIf=\\\"pointList(dayNumIndex).controls.at(pointIndex).get('reference').errors.required\\\">\\r\\n                                                        Please enter reference\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                            <td style=\\\"width: 10%;\\\">\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-sm successBtn\\\"\\r\\n                                                    (click)=\\\"addPointsRow(dayNumIndex)\\\" *ngIf=\\\"pointLast\\\">\\r\\n                                                    <i class=\\\"fa fa-plus\\\"></i></button>&nbsp;&nbsp;\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-sm dangerBtn\\\"\\r\\n                                                    (click)=\\\"(pointList(dayNumIndex).controls.at(pointIndex).get('id').value > 0) ? deleteChecksheetPoint(pointList(dayNumIndex).controls.at(pointIndex).get('id').value,dayNumIndex,pointIndex) :removePointRow(dayNumIndex,pointIndex)\\\"\\r\\n                                                    *ngIf=\\\"pointList(dayNumIndex).controls.length > 1\\\">\\r\\n                                                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                                                </button>\\r\\n                                            </td>\\r\\n                                        </ng-container>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </perfect-scrollbar>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn submitBtn event-btn\\\">\\r\\n                    <span *ngIf=\\\"submitLoader\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                    <span *ngIf=\\\"submitLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                    <span *ngIf=\\\"!submitLoader\\\" class=\\\"btn-text\\\">Submit </span>\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn cancelBtn m-l-5\\\" aria-label=\\\"Close\\\" [disabled]=\\\"submitLoader\\\"\\r\\n                    (click)=\\\"close('Cross Click')\\\">Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \".checksheetinputBox,\\n.checksheetinputBox:hover {\\n  border-radius: 4px;\\n  box-shadow: 0 0 2px 1px #eae1ea;\\n  border: 1px solid #dedede;\\n  background: #fff;\\n}\\n\\n.checksheetForm {\\n  border: 1px solid #7044cd;\\n  padding: 0px 5px 10px 0px;\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcYWRkLWNoZWNrLXNoZWV0LXBhcmFtZXRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFSSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUNBO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0FBRUoiLCJmaWxlIjoiYWRkLWNoZWNrLXNoZWV0LXBhcmFtZXRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGVja3NoZWV0aW5wdXRCb3gsXHJcbi5jaGVja3NoZWV0aW5wdXRCb3g6aG92ZXIge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDJweCAxcHggI2VhZTFlYTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZWRlZGU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG59XHJcbi5jaGVja3NoZWV0Rm9ybSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzA0NGNkO1xyXG4gICAgcGFkZGluZzogMHB4IDVweCAxMHB4IDBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuIl19 */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AddOjtCheckSheetRoutingModule } from './add-ojt-check-sheet-routing.module';\r\nimport { AddCheckSheetParameterComponent } from './add-check-sheet-parameter/add-check-sheet-parameter.component';\r\nimport { AddCheckSheetPointsComponent } from './add-check-sheet-points/add-check-sheet-points.component';\r\nimport { AddOjtCheckSheetComponent } from './add-ojt-check-sheet.component';\r\nimport { LoginInfoModule, TopBarModule } from 'src/app/theme/shared/components';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddCheckSheetParameterComponent, AddCheckSheetPointsComponent, AddOjtCheckSheetComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AddOjtCheckSheetRoutingModule,\r\n    TopBarModule,\r\n    LoginInfoModule,\r\n    FormsModule,\r\n    NgMultiSelectDropDownModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule\r\n  ]\r\n})\r\nexport class AddOjtCheckSheetModule { }\r\n","export default \".checksheetForm {\\n  background: #fff;\\n  position: relative;\\n}\\n\\n.daywiseBlock {\\n  border: 1px solid #7044cd;\\n  padding: 5px;\\n  margin: 0px 10px 5px 0px;\\n}\\n\\n.daywiseBlock:last-child {\\n  margin-bottom: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcYWRkLWNoZWNrLXNoZWV0LXBvaW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLHdCQUFBO0FBQ0o7O0FBQUk7RUFDSSxrQkFBQTtBQUVSIiwiZmlsZSI6ImFkZC1jaGVjay1zaGVldC1wb2ludHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hlY2tzaGVldEZvcm0ge1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC8vIGhlaWdodDogMTByZW07XHJcbn1cclxuLmRheXdpc2VCbG9jayB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzA0NGNkO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWFyZ2luOiAwcHggMTBweCA1cHggMHB4O1xyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICB9XHJcbn1cclxuIl19 */\";","export default \".checksheetinputBox,\\n.checksheetinputBox:hover {\\n  border-radius: 4px;\\n  box-shadow: 0 0 2px 1px #eae1ea;\\n  border: 1px solid #dedede;\\n  background: #fff;\\n}\\n\\n.col-md-12 .checksheetForm {\\n  padding: 10px;\\n  background: #fff;\\n  border: 1px solid #7044cd;\\n  border-radius: 2px;\\n  position: relative;\\n}\\n\\n.headerBar {\\n  width: 100%;\\n}\\n\\n.headerBar .backArrow {\\n  margin: auto;\\n  display: inline-block;\\n  padding-left: 1rem;\\n}\\n\\n.headerBar .backArrow .feather {\\n  color: #7044cd;\\n  vertical-align: bottom;\\n  font-size: 2em;\\n  cursor: pointer;\\n}\\n\\n.pointsBlock {\\n  padding: 10px;\\n  border: 1px solid #7044cd;\\n  margin: 10px;\\n  border-radius: 2px;\\n}\\n\\n.pointsBlock h4 {\\n  margin: 0px;\\n  background-color: transparent;\\n  color: #7044cd;\\n}\\n\\n.pointsBlock .formElementsBlock,\\n.pointsBlock row {\\n  background: #fff;\\n  cursor: pointer;\\n  border: 1px dotted #8792d6;\\n  position: relative;\\n  padding: 1rem;\\n  margin: 0px;\\n}\\n\\n.pointsBlock .formElementsBlock .cheksheet-point-block,\\n.pointsBlock row .cheksheet-point-block {\\n  display: block;\\n  width: 100%;\\n  padding: 0.375rem 0.95rem;\\n  font-size: 0.875rem;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  color: #495057;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 2px;\\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n\\n.actionBtn {\\n  position: absolute;\\n  right: 8px;\\n  top: 2px;\\n  display: inline-flex;\\n  z-index: 999;\\n}\\n\\n.overlay-bg {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0);\\n  transition: background 0.5s ease;\\n  z-index: 999;\\n}\\n\\n.formElementsBlock:hover .overlay-bg {\\n  display: block;\\n  background: rgba(0, 0, 0, 0.1);\\n}\\n\\n.formElementsBlock:hover .btn-que-edit {\\n  opacity: 1;\\n}\\n\\n.formElementsBlock:hover .ques-delete-btn {\\n  opacity: 1;\\n}\\n\\n.btn-edit {\\n  position: relative;\\n  top: 4px;\\n  margin-right: 3px;\\n  margin-top: -2px;\\n  height: 30px;\\n  border: 1px solid #00bf6f;\\n  width: 70px;\\n  color: #fff;\\n  font-size: 14px;\\n  text-transform: uppercase;\\n  font-weight: normal;\\n  background: #00bf6f;\\n  border-radius: 3px;\\n  opacity: 0;\\n  transition: opacity 0.35s ease;\\n}\\n\\n.ques-delete-btn:hover {\\n  color: #fff;\\n  background: #e46363;\\n  border: 1px solid #e46363;\\n}\\n\\n.ques-delete-btn {\\n  position: relative;\\n  top: 4px;\\n  margin-right: 0px;\\n  margin-top: -2px;\\n  height: 30px;\\n  width: 70px;\\n  background: #dd4b39;\\n  border: 1px solid #dd4b39;\\n  border-radius: 2px;\\n  color: #fff;\\n  font-size: 12px;\\n  opacity: 0;\\n  transition: opacity 0.35s ease;\\n}\\n\\n.col-form-label {\\n  padding-left: 3px;\\n}\\n\\n.txt-color-primary {\\n  color: #7044cd;\\n}\\n\\n.copy-checksheets {\\n  background: #fff;\\n  position: relative;\\n  padding: 10px;\\n  border: 1px solid #7044cd;\\n  margin: 10px;\\n  border-radius: 2px;\\n}\\n\\n.active-copy-sheet {\\n  background: #fff;\\n  position: relative;\\n  padding: 10px;\\n  border: 2px solid #7044cd;\\n  margin: 10px;\\n  border-radius: 2px;\\n}\\n\\n.copy-checksheet-container {\\n  /* height: 471px; */\\n  overflow: auto;\\n}\\n\\n.small-checksheet-card {\\n  box-shadow: 0px 1px 5px #888;\\n  margin: 5px;\\n  padding: 5px;\\n  overflow: hidden;\\n  background-clip: padding-box;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n  cursor: pointer;\\n}\\n\\n.small-checksheet-card:hover {\\n  border: 2px solid #4b4795;\\n}\\n\\n.small-checksheet-card .checksheet-title {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  -webkit-box-orient: vertical;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n}\\n\\n.checksheet-list-col {\\n  height: auto;\\n  border-left: 1px solid gray;\\n  padding-left: 5px;\\n}\\n\\n.checksheetinputBox,\\n.checksheetinputBox:hover {\\n  border-radius: 4px;\\n  box-shadow: 0 0 2px 1px #eae1ea;\\n  border: 1px solid #dedede;\\n  background: #fff;\\n}\\n\\n.checksheetForm {\\n  border: 1px solid #7044cd;\\n  padding: 0px 5px 10px 0px;\\n  margin-bottom: 10px;\\n}\\n\\n.main-tab-switcher1 {\\n  box-shadow: 0px 0px 5px 1px #e2e2e2;\\n  padding: 2px;\\n  background: white;\\n  border-radius: 25px;\\n  display: inline-flex;\\n  color: #474747;\\n  opacity: 1;\\n  /* margin-top: 15px; */\\n  position: relative;\\n  top: 0px;\\n  left: 11px;\\n  margin-bottom: 10px;\\n}\\n\\n.mainActiveSwitch {\\n  background: #7044cd 0% 0% no-repeat padding-box;\\n  padding: 3px 20px;\\n  color: white;\\n  border-radius: 25px;\\n  line-height: 1.5;\\n  box-shadow: 0px 0px 12px -2px #8f8d8f;\\n}\\n\\n.main-tab-switch {\\n  line-height: 1.5;\\n  padding: 3px 20px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SkillMatrixService } from '../../../skill-matrix.service';\r\nimport { AlertService } from 'src/app/theme/shared/components';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-check-sheet-points',\r\n  templateUrl: './add-check-sheet-points.component.html',\r\n  styleUrls: ['./add-check-sheet-points.component.scss']\r\n})\r\nexport class AddCheckSheetPointsComponent implements OnInit {\r\n  @Input() close;\r\n  @Input() dayValue :any;\r\n  @Input() noOfDays:any;\r\n  checksheetPointsForm: FormGroup;\r\n  checkSheetForm: FormGroup;\r\n  addPoints: any = {};\r\n  // setChecksheetId: any = {};\r\n  userDet: any = {};\r\n  // selectedPointsDet: any = {};\r\n  submitLoader: boolean = false;\r\n  selectedDet: any = {};\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private skillMatrixService: SkillMatrixService,\r\n    private alertService: AlertService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  dayNumForm(): FormGroup {\r\n    return this.fb.group({\r\n      dayNo: '1',\r\n      pointList: this.fb.array([])\r\n    })\r\n  }\r\n  pointsForm(): FormGroup {\r\n    return this.fb.group({\r\n      itemName: new FormControl('', Validators.required),\r\n      reference: new FormControl(''),//Validators.required\r\n      id: new FormControl('0'),\r\n      action: new FormControl('ADD')\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.dayValue);\r\n    this.userDet = JSON.parse(localStorage.getItem('userDet'));\r\n    this.checkSheetForm = this.fb.group({\r\n      daysList: this.fb.array([])\r\n    })\r\n    this.addDaysRow(0);\r\n    this.getChecksheetDetails();\r\n  }\r\n  daysList(): FormArray {\r\n    return this.checkSheetForm.get(\"daysList\") as FormArray;\r\n  }\r\n    addDaysRow(dayNumIndex: number) {\r\n    // this.daysList().push(this.fb.group({\r\n    //     dayNo: dayNumIndex + 1,\r\n    //     pointList: this.fb.array([])\r\n    //   }));\r\n    //   this.addPointsRow(dayNumIndex);\r\n    const totalDays = this.selectedDet.noOfDays;\r\n    const currentDays = this.daysList().length; \r\n\r\n    if (currentDays >= totalDays) {\r\n       this.alertService.error('Cannot add more days. Maximum number of days reached.');\r\n    return;\r\n    }\r\n    this.daysList().push(this.fb.group({\r\n        dayNo: currentDays + 1, \r\n        pointList: this.fb.array([])\r\n    }));\r\n    this.addPointsRow(currentDays); \r\n    }\r\n  removeDayNumRow(dayNumIndex: number) {\r\n    this.daysList().removeAt(dayNumIndex);\r\n    this.updateDayField();\r\n  }\r\n  pointList(dayNumIndex: number): FormArray {\r\n    return this.daysList().at(dayNumIndex).get(\"pointList\") as FormArray;\r\n  }\r\n  addPointsRow(dayNumIndex: number) {\r\n    this.pointList(dayNumIndex).push(this.pointsForm());\r\n  }\r\n  removePointRow(empNumIndex: number, pointIndex: number) {\r\n    this.pointList(empNumIndex).removeAt(pointIndex);\r\n  }\r\n  updateDayField() {\r\n    if (this.daysList().controls != null && this.daysList().controls.length > 0) {\r\n      for (let index = 0; index < this.daysList().controls.length; index++) {\r\n        this.daysList().at(index).get(\"dayNo\").setValue(index + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /* Get Checksheet Details form Local Storage\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  getChecksheetDetails() {\r\n    if (localStorage.getItem('setChecksheetId')) {\r\n      this.selectedDet = JSON.parse(localStorage.getItem('setChecksheetId'));\r\n    }\r\n    if (localStorage.getItem('selectedPointsDet')) {\r\n      this.selectedDet = JSON.parse(localStorage.getItem('selectedPointsDet'));\r\n    }\r\n    let obj: any = {\r\n      daysList: []\r\n    };\r\n    //  && (this.setChecksheetId.isEditPoint == false || this.setChecksheetId.isEditPoint == undefined)\r\n    if (this.selectedDet) {\r\n      if (this.selectedDet.hasOwnProperty('isEditPoint') && this.selectedDet.isEditPoint) {\r\n        obj.daysList.push(this.selectedDet);\r\n      } else {\r\n        obj.daysList = this.selectedDet.groupPointList;\r\n      }\r\n    }\r\n    console.log(obj);\r\n    if (obj.daysList != null && obj.daysList.length > 0) {\r\n      for (let index = 0; index < obj.daysList.length; index++) {\r\n        if (index != 0) {\r\n          this.addDaysRow(index);\r\n        }\r\n        this.daysList().controls[index].get('dayNo').setValue(obj.daysList[index].dayNo);\r\n        if (obj.daysList[index].pointList != null && obj.daysList[index].pointList.length > 0) {\r\n          for (let x = 0; x < obj.daysList[index].pointList.length; x++) {\r\n            if (x != 0) {\r\n              this.addPointsRow(index);\r\n            }\r\n            this.pointList(index).controls[x].get('id').setValue(obj.daysList[index].pointList[x].checksheetPointId);\r\n            this.pointList(index).controls[x].get('action').setValue('UPDATE');\r\n            this.pointList(index).controls[x].get('itemName').setValue(obj.daysList[index].pointList[x].itemName);\r\n            this.pointList(index).controls[x].get('reference').setValue(obj.daysList[index].pointList[x].reference);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  saveChecksheetForm(form) {\r\n    console.log(form.value)\r\n    this.submitLoader = true;\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach((key: any, index) => {\r\n        form.controls[key].markAsDirty();\r\n        this.submitLoader = false;\r\n      });\r\n      this.alertService.error('Please fill mandatory data');\r\n      return;\r\n    }\r\n    if (form.value.daysList.length < this.dayValue) {\r\n      this.alertService.error('It is mandatory to add checksheet points for all days.');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n    console.log(this.noOfDays)\r\n    let reqBody = {\r\n      \"checkSheetId\": this.selectedDet.checkSheetId,\r\n      \"createdBy\": this.userDet.empId,\r\n      \"daysList\": form.value.daysList\r\n    }\r\n    // let x = 0;\r\n    // if (x == 0) {\r\n    console.log(reqBody);\r\n    //   this.submitLoader = false;\r\n    //   return;\r\n    // }\r\n    this.skillMatrixService.saveChecksheetPoint('apis/sm/addChecksheetPoint', reqBody).subscribe((response: any) => {\r\n      if (response.result) {\r\n        this.submitLoader = false;\r\n        // this.alertService.success(\"OJT checksheet point saved successfully.\");\r\n        this.alertService.success(\"OJT key point saved successfully.\");\r\n        this.modalService.dismissAll();\r\n      } else {\r\n        if (response.statusCode == 100) {\r\n          this.alertService.error(response.reason);\r\n        } else {\r\n          this.alertService.error('Error occurred while saving data. Please try again');\r\n        }\r\n      }\r\n    }, (error: any) => {\r\n      this.submitLoader = false;\r\n    })\r\n  }\r\n\r\n\r\n  /* Delete Checksheet Parameter\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  deleteChecksheetPoint(id, dayNumIndex, pointIndex) {\r\n    Swal.fire({\r\n      title: 'Are You Sure!',\r\n      text: 'Do you want to remove this points?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#7044cd',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes remove it',\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      allowEnterKey: false,\r\n      customClass: {\r\n        container: 'swalConfirmationModal'\r\n      }\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let reqbody = {\r\n          \"updatedBy\": this.userDet.empId,\r\n          \"createdBy\": this.userDet.empId,\r\n          \"id\": id\r\n        }\r\n        this.skillMatrixService.deleteChecksheetPoint('apis/sm/deleteChecksheetPoint', reqbody).subscribe((data: any) => {\r\n          if (data.result) {\r\n            // this.alertService.success(\"Checksheet point removed successfully\");\r\n            this.alertService.success(\"Key point removed successfully\");\r\n            this.removePointRow(dayNumIndex, pointIndex);\r\n          } else {\r\n            if (data.statusCode == 100) {\r\n              this.alertService.error(data.reason);\r\n            } else {\r\n              this.alertService.error('Error occurred while removing data. Please try again');\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /* Validation for checksheet point(is value not a 0 and not a negative and not a greater than no. of days)\r\n   @Author Jayshri Kolase\r\n   *@Date Sep 1, 2023\r\n */\r\n  onPointInputChange = (control: any) => {\r\n    const value = control.value;\r\n    const noOfDays = this.selectedDet.noOfDays;\r\n    if (value === 0) {\r\n      return { zeroValue: true };\r\n    }\r\n    if (value < 0) {\r\n      return { negativeValue: true };\r\n    }\r\n    if (value > noOfDays) {\r\n      return { greaterThanNoOfDays: true };\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  /* Save or Update Checksheet Point\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  saveChecksheetPoint(checksheetPointsForm: any) {\r\n    if (checksheetPointsForm.invalid) {\r\n      Object.keys(checksheetPointsForm.controls).forEach(key => {\r\n        checksheetPointsForm.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    console.log(checksheetPointsForm);\r\n    // if (checksheetPointsForm.status == \"VALID\") {\r\n    //   if (this.selectedPointsDet.isEditPoint != true && (this.setChecksheetId.isEditPoint == false || this.setChecksheetId.isEditPoint == undefined) && (this.selectedPointsDet.checksheetPointId == undefined || this.selectedPointsDet.checksheetPointId == 0)) {\r\n    let pointReq = {\r\n      \"checkSheetId\": this.selectedDet.checkSheetId,\r\n      \"createdBy\": this.userDet.empId,\r\n      \"daysList\": [\r\n        {\r\n          \"dayNo\": checksheetPointsForm.value.dayNum,\r\n          \"pointList\": [\r\n            {\r\n              \"itemName\": checksheetPointsForm.value.point,\r\n              \"reference\": checksheetPointsForm.value.reference\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n    this.skillMatrixService.saveChecksheetPoint('apis/sm/addChecksheetPoint', pointReq).subscribe((response: any) => {\r\n      console.log(response);\r\n      if (response.result) {\r\n        this.alertService.success(\"OJT checksheet point added successfully.\");\r\n        // this.alertService.success(\"OJT key point added successfully.\");\r\n        this.modalService.dismissAll();\r\n      }\r\n      else {\r\n        this.alertService.error(response.reason);\r\n      }\r\n    })\r\n    // }\r\n    // else {\r\n    //   let pointReq = {\r\n    //     itemName: checksheetPointsForm.value.point,\r\n    //     dayNo: checksheetPointsForm.value.dayNum,\r\n    //     checkSheetId: this.selectedPointsDet.checkSheetId,\r\n    //     id: this.selectedPointsDet.checksheetPointId,\r\n    //     updatedBy: this.userDet.empId,\r\n    //     createdBy: this.userDet.empId\r\n    //   }\r\n    //   this.skillMatrixService.saveChecksheetPoint('apis/sm/updateChecksheetPoint', pointReq).subscribe((response: any) => {\r\n    //     console.log(response);\r\n    //     if (response.result) {\r\n    //       this.alertService.success(\"OJT checksheet point updated successfully.\")\r\n    //       this.modalService.dismissAll();\r\n    //     }\r\n    //     else {\r\n    //       this.alertService.error(response.reason);\r\n    //     }\r\n    //   })\r\n    // }\r\n    // }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { SkillMatrixService } from '../../../skill-matrix.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from 'src/app/theme/shared/components';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-add-check-sheet-parameter',\r\n  templateUrl: './add-check-sheet-parameter.component.html',\r\n  styleUrls: ['./add-check-sheet-parameter.component.scss']\r\n})\r\nexport class AddCheckSheetParameterComponent implements OnInit {\r\n  @Input() close;\r\n  selectedParameterType: any;\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  checksheetParameterForm: FormGroup;\r\n  checksheetParameterFormDate: FormGroup;\r\n  public isNumberParameter: boolean = false;\r\n  selectedDet: any = {};\r\n  paraTypeList: any = [];\r\n  isAddButtonClicked: boolean = false;\r\n  parameterDet: any = {\r\n    rec: []\r\n  };\r\n  userDet: any = {};\r\n  setChecksheetId: any = {};\r\n  selectedParameterDet: any = {};\r\n  isValidateNonNegativeOrZero: boolean = false;\r\n  submitLoader: boolean = false;\r\n  addLoader: boolean = false;\r\n  zeroValue: boolean = false;\r\n  negativeValue: boolean = false;\r\n  isTextParameter: boolean = true;\r\n  isDateTimeParameter: boolean;\r\n  isGapParameter: boolean;\r\n  isModelParameter: boolean;\r\n  isCyclePlan: boolean;\r\n  defaultSelectedValue: any;\r\n  disableReferModel: boolean = true;\r\n  isSelectedParaType: any;\r\n  // isNoteShowParameter : boolean = false;\r\n  constructor(\r\n    private apiService: SkillMatrixService,\r\n    private fb: FormBuilder,\r\n    private alertService: AlertService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userDet = JSON.parse(localStorage.getItem('userDet'));\r\n    this.getParameterTypeList();\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'typeName',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.checksheetParameterForm = this.fb.group({\r\n      parameterTypeId: new FormControl(''),\r\n      parameter: new FormControl('', Validators.required),\r\n      cycleValue: new FormControl(''),\r\n      checkSheetId: new FormControl('')\r\n    });\r\n    this.checksheetParameterFormDate = this.fb.group({\r\n      parameterTypeId: new FormControl(''),\r\n      parameter: new FormControl('', Validators.required),\r\n      cycleValue: new FormControl(''),\r\n      checkSheetId: new FormControl('')\r\n    });\r\n\r\n    this.getChecksheetDetails();\r\n\r\n  }\r\n\r\n\r\n\r\n  /* Get Parameter Type List\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  getParameterTypeList() {\r\n    this.apiService.getParameterTypeList('apis/sm/getParameterTypeList').subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.paraTypeList = response.dataList;\r\n          this.selectedDet.parameterType = [this.paraTypeList[0]]\r\n          console.log(this.selectedDet.parameterType);\r\n          if (this.selectedDet.parameterType[0].typeName == 'Text') {\r\n            this.checksheetParameterForm.get('parameter').setValidators([Validators.required]);\r\n            this.checksheetParameterForm.get('cycleValue').clearValidators();\r\n            this.isAddButtonClicked = false;\r\n            this.isNumberParameter = false;\r\n            this.isTextParameter = true;\r\n            this.isDateTimeParameter = false;\r\n            this.isModelParameter = false;\r\n            this.isGapParameter = false;\r\n          }\r\n\r\n        } else {\r\n          this.paraTypeList = [];\r\n        }\r\n      } else {\r\n        this.paraTypeList = [];\r\n      }\r\n    })\r\n  }\r\n  /* Get Checksheet Details from Local Storage\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  getChecksheetDetails() {\r\n\r\n    if (localStorage.getItem('setChecksheetId')) {\r\n      this.selectedDet = JSON.parse(localStorage.getItem('setChecksheetId'));\r\n    }\r\n    if (localStorage.getItem('selectedParameterDet')) {\r\n      this.selectedDet = JSON.parse(localStorage.getItem('selectedParameterDet'));\r\n    }\r\n    if (this.selectedDet) {\r\n      this.checksheetParameterForm.get('checkSheetId').setValue(this.selectedDet.checkSheetId)\r\n      if (this.selectedDet.hasOwnProperty('isEditParameter')) {\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Save or Update Checksheet Parameter\r\n  @Author Jayshri Kolase\r\n  * @Date August 18, 2023\r\n*/\r\n  addChecksheetParameter(form) {\r\n\r\n    console.log(form);\r\n    this.isAddButtonClicked = true;\r\n    this.addLoader = true;\r\n\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      this.addLoader = false;\r\n      return;\r\n    }\r\n    let obj = Object.assign({}, form.value, { parameterData: form.value.parameterTypeId[0], parameterTypeId: form.value.parameterTypeId[0].id });\r\n    const hasCyclePlanParameter = this.selectedDet.parameterType.some(\r\n      param => param.parameterType === \"cyclePlan\"\r\n    );\r\n\r\n    if (hasCyclePlanParameter && obj.parameterData.typeName === \"cyclePlan\") {\r\n      this.alertService.error('Only one cycle plan can be added for this checksheet.');\r\n      this.addLoader = false;\r\n    } else {\r\n      this.parameterDet.rec.push(obj);\r\n      this.addLoader = false;\r\n    }\r\n\r\n    this.checksheetParameterForm.get('checkSheetId').setValue(this.selectedDet.checkSheetId);\r\n    this.checksheetParameterForm.get('parameter').setValue('');\r\n  }\r\n  addChecksheetParameterCopy(form) {\r\n\r\n    console.log(form);\r\n    this.isAddButtonClicked = true;\r\n    this.addLoader = true;\r\n\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      this.addLoader = false;\r\n      return;\r\n    }\r\n    let obj = Object.assign({}, form.value, { parameterData: form.value.parameterTypeId[0], parameterTypeId: form.value.parameterTypeId[0].id });\r\n    const hasCyclePlanParameter = this.selectedDet.parameterType.some(\r\n      param => param.parameterType === \"cyclePlan\"\r\n    );\r\n\r\n    if (hasCyclePlanParameter && obj.parameterData.typeName === \"cyclePlan\") {\r\n      this.alertService.error('Only one cycle plan can be added for this checksheet.');\r\n      this.addLoader = false;\r\n    } else {\r\n      this.parameterDet.rec.push(obj);\r\n      this.addLoader = false;\r\n    }\r\n\r\n    this.checksheetParameterForm.get('checkSheetId').setValue(this.selectedDet.checkSheetId);\r\n    this.checksheetParameterFormDate.get('parameter').setValue('');\r\n  }\r\n  saveChecksheetParameter() {\r\n    this.submitLoader = true;\r\n    let req: any = {\r\n      \"updatedBy\": this.userDet.empId,\r\n      \"createdBy\": this.userDet.empId,\r\n      \"checkSheetId\": this.selectedDet.checkSheetId,\r\n      \"parameterList\": this.parameterDet.rec\r\n    }\r\n    for (let index = 0; index < req.parameterList.length; index++) {\r\n      if (req.parameterList[index].parameterData.typeName != 'cyclePlan') {\r\n        delete req.parameterList[index]['cycleValue'];\r\n      }\r\n      // delete req.parameterList[index]['parameterData'];\r\n    }\r\n    console.log(req);\r\n    // let x = 0;\r\n    // if (x == 0) {\r\n    //   this.submitLoader = false;\r\n    //   return\r\n    // }\r\n    this.apiService.saveChecksheetParameter('apis/sm/addChecksheetParameter', req).subscribe((response: any) => {\r\n      this.submitLoader = false;\r\n      if (response.result) {\r\n        // this.alertService.success(\"OJT checksheet parameter saved successfully.\")\r\n        this.alertService.success(\"OJT verification parameter saved successfully.\")\r\n        this.modalService.dismissAll();\r\n      } else {\r\n        if (response.statusCode == 100) {\r\n          this.alertService.error(response.reason);\r\n        } else {\r\n          this.alertService.error('Error occurred while submitting data. Please try again');\r\n        }\r\n      }\r\n    }, (error: any) => {\r\n      this.submitLoader = false;\r\n    });\r\n  }\r\n  removeParameter(paramIndex) {\r\n    this.parameterDet.rec.splice(paramIndex, 1);\r\n  }\r\n\r\n  onPointInputChange = (control: any) => {\r\n    const value = control.value;\r\n    if (value === 0) {\r\n      return { zeroValue: true };\r\n    }\r\n    if (value < 0) {\r\n      return { negativeValue: true };\r\n    }\r\n    return null;\r\n  };\r\n  // Custom validator function\r\n  validateNonNegativeOrZero(inputValue: number): boolean {\r\n    return inputValue >= 0 && inputValue !== 0;\r\n  }\r\n\r\n  // Event handler for input change\r\n  onInputChange(event: any) {\r\n    const inputValue = parseInt(event.target.value);\r\n    if (!this.validateNonNegativeOrZero(inputValue)) {\r\n\r\n      this.isValidateNonNegativeOrZero = false;\r\n      console.log('Invalid input');\r\n    } else {\r\n      this.parameterDet.parameter = inputValue;\r\n    }\r\n  }\r\n  onNumberInputChange = (control: any) => {\r\n    const value = parseInt(control.data);\r\n    if (value === 0) {\r\n      this.zeroValue = true;\r\n    }\r\n    if (value < 0) {\r\n      this.negativeValue = true;\r\n    }\r\n  };\r\n\r\n\r\n  onParameterInputChange(event: any, type: any) {\r\n    let newValue = event.target.value;\r\n    if (type === 'Number') {\r\n      newValue = newValue.replace(/[^0-9]/g, \"\");\r\n      newValue = newValue.replace(/^0+/g, \"\");\r\n      if (newValue === \"\" || parseInt(newValue) < 1) {\r\n        newValue = \" \";\r\n      }\r\n    }\r\n    else if (type === 'Text') {\r\n      newValue = newValue.replace(/[^a-zA-Z0-9]/g, \"\");\r\n    }\r\n    event.target.value = newValue;\r\n    // console.log(this.ParameterFlag);\r\n  }\r\n\r\n\r\n  /* to change input fields in parameterTye\r\n   @Author Saurabh salunke\r\n   * @Date Oct 7, 2023\r\n */\r\n  onParameterTypeSelect(event: any) {\r\n    this.checksheetParameterForm.get('parameter').reset();\r\n    console.log(event);\r\n    this.disableReferModel = true;\r\n    const selectedParameterType = event.typeName;\r\n    this.isSelectedParaType = event.typeName;\r\n\r\n\r\n    if (selectedParameterType === 'Text') {\r\n      this.checksheetParameterForm.get('parameter').setValidators([Validators.required]);\r\n      this.checksheetParameterForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isNumberParameter = false;\r\n      this.isTextParameter = true;\r\n      this.isCyclePlan = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = false;\r\n    } else if (selectedParameterType === 'Number') {\r\n      this.checksheetParameterForm.get('parameter').setValidators([Validators.required]);\r\n      this.checksheetParameterForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isTextParameter = false;\r\n      this.isNumberParameter = true;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = false;\r\n    } else if (selectedParameterType === 'cyclePlan') {\r\n      // this.checksheetParameterForm.get('parameter').clearValidators();\r\n      this.checksheetParameterForm.get('cycleValue').setValidators([Validators.required, Validators.pattern('^[0-9]*$')]);\r\n      this.isTextParameter = false;\r\n      this.isCyclePlan = true;\r\n      this.isAddButtonClicked = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = false;\r\n      // this.isNoteShowParameter = false;\r\n    } else if (selectedParameterType === 'Datetime') {\r\n      this.checksheetParameterForm.get('parameter').setValidators([Validators.required]);\r\n      this.checksheetParameterForm.get('cycleValue').clearValidators();\r\n      this.isTextParameter = false;\r\n      this.isAddButtonClicked = false;\r\n      this.isGapParameter = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = true;\r\n      this.isModelParameter = false;\r\n      // this.isNoteShowParameter = false;\r\n\r\n    } else if (selectedParameterType === 'Gap') {\r\n      this.checksheetParameterForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isTextParameter = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = true;\r\n      // this.isNoteShowParameter = true;\r\n    } else if (selectedParameterType === 'Model') {\r\n      this.checksheetParameterForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isTextParameter = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isGapParameter = false;\r\n      this.isModelParameter = true;\r\n      // this.isNoteShowParameter = false;\r\n    } else {\r\n      // Handle other parameter types if necessary\r\n      this.isTextParameter = false;\r\n      this.isAddButtonClicked = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isGapParameter = false;\r\n      this.isModelParameter = false;\r\n      this.disableReferModel = false;\r\n      // this.isNoteShowParameter = false;\r\n    }\r\n\r\n    this.checksheetParameterForm.get('parameter').updateValueAndValidity();\r\n    this.checksheetParameterForm.get('cycleValue').updateValueAndValidity();\r\n  }\r\n\r\n\r\n  /* Save or Update Checksheet Parameter\r\n  @Author Jayshri Kolase\r\n  * @Date August 18, 2023\r\n*/\r\n  /* saveChecksheetParameter(checksheetParameterForm: any) {\r\n    if (checksheetParameterForm.invalid) {\r\n      Object.keys(checksheetParameterForm.controls).forEach(key => {\r\n        checksheetParameterForm.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    console.log(checksheetParameterForm);\r\n    if (checksheetParameterForm.status == \"VALID\") {\r\n      if (checksheetParameterForm.value.paraType != null && checksheetParameterForm.value.paraType.length > 0) {\r\n        for (let i = 0; i < checksheetParameterForm.value.paraType.length; i++) {\r\n          this.parameterDet.parameterTypeId = checksheetParameterForm.value.paraType[i].id;\r\n        }\r\n      }\r\n      // if (this.selectedParameterDet.id == undefined && this.selectedParameterDet.id == '') {\r\n      if (this.selectedParameterDet.isEditParameter != true && (this.setChecksheetId.isEditParameter == false || this.setChecksheetId.isEditParameter == undefined) && (this.selectedParameterDet.id == undefined || this.selectedParameterDet.id == 0)) {\r\n        let reqData = {\r\n          \"updatedBy\": this.userDet.empId,\r\n          \"createdBy\": this.userDet.empId,\r\n          \"parameter\": checksheetParameterForm.value.parameter,\r\n          \"checkSheetId\": this.setChecksheetId.checkSheetId,\r\n          \"parameterTypeId\": this.parameterDet.parameterTypeId\r\n        }\r\n        console.log(reqData)\r\n        this.apiService.saveChecksheetParameter('apis/sm/addChecksheetParameter', reqData).subscribe((response: any) => {\r\n          if (response.result) {\r\n            this.alertService.success(\"OJT checksheet parameter saved successfully.\")\r\n            this.modalService.dismissAll();\r\n          }\r\n          else {\r\n            this.alertService.error(response.reason)\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        let reqData = {\r\n          \"updatedBy\": this.userDet.empId,\r\n          \"createdBy\": this.userDet.empId,\r\n          \"parameter\": checksheetParameterForm.value.parameter,\r\n          \"checkSheetId\": this.setChecksheetId.checkSheetId,\r\n          \"parameterTypeId\": this.parameterDet.parameterTypeId,\r\n          \"parameterId\": this.selectedParameterDet.id\r\n        }\r\n        this.apiService.updateChecksheetParameter('apis/sm/updateChecksheetParameter', reqData).subscribe((response: any) => {\r\n          console.log(response);\r\n          if (response.result) {\r\n            this.alertService.success(\"OJT checksheet parameter updated successfully.\");\r\n            this.modalService.dismissAll();\r\n          }\r\n          else {\r\n            this.alertService.error(response.reason)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  } */\r\n  getSortFunction(array, fieldToSort) {\r\n    if (array && Array.isArray(array) && array.length > 0) {\r\n      if (fieldToSort === \"paraType\") {\r\n        array.sort(function (a, b) {\r\n          var nameA = a.typeName ? a.typeName.toUpperCase() : \"\";\r\n          var nameB = b.typeName ? b.typeName.toUpperCase() : \"\";\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { SkillMatrixService } from '../../skill-matrix.service';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from 'src/app/theme/shared/components';\r\nimport Swal from 'sweetalert2';\r\nimport { error } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-add-ojt-check-sheet',\r\n  templateUrl: './add-ojt-check-sheet.component.html',\r\n  styleUrls: ['./add-ojt-check-sheet.component.scss']\r\n})\r\nexport class AddOjtCheckSheetComponent implements OnInit {\r\n  branchAccessList: any = [];\r\n  SingleBranchDropdownSettings: IDropdownSettings = {};\r\n  SingleLevelDropdownSettings: IDropdownSettings = {};\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  SingleParaDropdownSettings: IDropdownSettings = {};\r\n  userDet: any = {};\r\n  checksheetForm: FormGroup;\r\n  copyChecksheetForm: FormGroup;\r\n  isCheckSheetAvailable: boolean = false;\r\n  setChecksheetId: any = {};\r\n  editChecksheet: boolean = false;\r\n  isSelectedParaType:any;\r\n  constant: any = {};\r\n  // level: any;\r\n  checksheetDetails: any = {};\r\n  LevelList: any = [];\r\n  savedChecksheetDet: any = {};\r\n  checksheetPointList: any = [];\r\n  editChecksheetData: any = {};\r\n  parameterTypeList: any = [];\r\n  dataSpinner: any = [];\r\n  actionLoader: boolean = false;\r\n  branchId: any[];\r\n  reportBodyCell: any = {};\r\n  branch: any[];\r\n  cellList: any[];\r\n  deptId: any;\r\n  departmentList: any = [];\r\n  workforceList: any = [];\r\n  lineId: any = [];\r\n  searchDet: any = {};\r\n  levelList: any = [];\r\n  noOfDays: any;\r\n  filteredChecksheetDetails: any;\r\n  checksheetList: any = [];\r\n  copyChecksheetDetails: any = {};\r\n  selectedchecksheet: any = {};\r\n  isCopyChecksheetDetailsAvail: boolean = false;\r\n  paraTypeList: any = [];\r\n  isAddButtonClicked: boolean = false;\r\n  isNumberParameter: boolean = false;\r\n  isTextParameter: boolean = false;\r\n  isCyclePlan: boolean = false;\r\n  isDateTimeParameter: boolean = false;\r\n  isModelParameter: boolean = false;\r\n  isGapParameter: boolean = false;\r\n  disableReferModel: boolean = false;\r\n  parameterDet: any = {\r\n    rec: []\r\n  };\r\n\r\n  addLoader: boolean = false;\r\n  submitLoader: boolean = false\r\n  isDirty: boolean = false;\r\n\r\n  constructor(\r\n    private modalConfig: NgbModalConfig,\r\n    private modalService: NgbModal,\r\n    private apiService: SkillMatrixService,\r\n    private fb: FormBuilder,\r\n    private alertService: AlertService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    modalConfig.backdrop = 'static';\r\n    modalConfig.keyboard = false;\r\n  }\r\n\r\n  dayNumForm(): FormGroup {\r\n    return this.fb.group({\r\n      dayNo: '1',\r\n      pointList: this.fb.array([])\r\n    })\r\n  }\r\n\r\n  pointsForm(): FormGroup {\r\n    return this.fb.group({\r\n      itemName: new FormControl('', Validators.required),\r\n      reference: new FormControl(''),//Validators.required\r\n      id: new FormControl('0'),\r\n      action: new FormControl('ADD')\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userDet = JSON.parse(localStorage.getItem('userDet'));\r\n    // console.log(this.userDet)\r\n    this.getLocalStorageChecksheetData();\r\n    this.checksheetForm = this.fb.group({\r\n      plant: new FormControl('', Validators.required),\r\n      deptId: new FormControl('', Validators.required),\r\n      cellLineId: new FormControl('', Validators.required),\r\n      workstationId: new FormControl('', Validators.required),\r\n      level: new FormControl('', Validators.required),\r\n      title: new FormControl('', Validators.required),\r\n      noOfDays: new FormControl('', [Validators.required, this.onPointInputChange])\r\n    });\r\n    this.copyChecksheetForm = this.fb.group({\r\n      plant: new FormControl('', Validators.required),\r\n      deptId: new FormControl('', Validators.required),\r\n      cellLineId: new FormControl('', Validators.required),\r\n      workstationId: new FormControl('', Validators.required),\r\n      level: new FormControl('', Validators.required),\r\n      title: new FormControl('', Validators.required),\r\n      noOfDays: new FormControl('', [Validators.required, this.onPointInputChange]),\r\n      parameterTypeId: new FormControl(''),\r\n      parameter: new FormControl(''),\r\n      cycleValue: new FormControl(''),\r\n      daysList: this.fb.array([])\r\n\r\n    });\r\n    this.getLevelList();\r\n    this.getBranchAccessList();\r\n    this.SingleBranchDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'branchId',\r\n      textField: 'branchName',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.SingleLevelDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'levelName',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.SingleParaDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'typeName',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    // this.getChecksheetPointList();\r\n  }\r\n\r\n  daysList(): FormArray {\r\n    return this.copyChecksheetForm.get(\"daysList\") as FormArray;\r\n  }\r\n  mainTab: any = 1;\r\n  isSetMainTab = function (tabId) {\r\n    return this.mainTab === tabId;\r\n  };\r\n\r\n  setMainTab(tabId) {\r\n    this.mainTab = tabId;\r\n    if (this.mainTab == 1) {\r\n\r\n    } else if (this.mainTab == 2) {\r\n      this.getParameterTypeList();\r\n      this.getCopyParameterTypeList();\r\n    }\r\n  };\r\n\r\n  mainChecksheetTab: any = 3;\r\n  isSetChecksheetTab = function (tabId) {\r\n    return this.mainChecksheetTab === tabId;\r\n  }\r\n  setcheckSheetTab(tabId) {\r\n    this.mainChecksheetTab = tabId;\r\n    if (this.mainTab == 3) {\r\n\r\n    } else if (this.mainTab == 4) {\r\n\r\n    }\r\n  };\r\n\r\n  /* Validation for checksheet point(is value not a 0 and not a negative and not a greater than no. of days)\r\n  @Author Jayshri Kolase\r\n  *@Date Sep 1, 2023\r\n*/\r\n  onPointInputChange = (control: any) => {\r\n    const value = control.value;\r\n    if (value === 0) {\r\n      return { zeroValue: true };\r\n    }\r\n    if (value < 0) {\r\n      return { negativeValue: true };\r\n    }\r\n    return null;\r\n  };\r\n  /* Get Local Storage Checksheet Data\r\n     @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n  */\r\n  getLocalStorageChecksheetData() {\r\n    if (localStorage.getItem('setChecksheetId')) {\r\n      this.setChecksheetId = JSON.parse(localStorage.getItem('setChecksheetId'));\r\n      if (this.setChecksheetId.isEditable && this.setChecksheetId.checkSheetId == 0) {\r\n        this.editChecksheet = false;\r\n        this.checksheetDetails = {};\r\n      } else {\r\n        console.log(this.setChecksheetId)\r\n        if (this.setChecksheetId.checkSheetId == undefined && this.setChecksheetId.checkSheetId != 0) {\r\n          this.setChecksheetId.checkSheetId = this.setChecksheetId.id;\r\n        }\r\n        this.getChecksheetDetails(this.setChecksheetId);\r\n      }\r\n      // this.getChecksheetDetails(this.setChecksheetId);\r\n    } else {\r\n    }\r\n  }\r\n\r\n  /* get skill level list\r\n   @Author Jayshri Kolase\r\n  * @Date August 18, 2023\r\n*/\r\n  getLevelList() {\r\n    this.apiService.getLevelList('apis/sm/getLevelList').subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.LevelList = response.dataList;\r\n        } else {\r\n          this.LevelList = [];\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /* Get Branch Access List\r\n  @Author Jayshri Kolase\r\n * @Date August 18, 2023\r\n*/\r\n  getBranchAccessList() {\r\n    this.apiService.getBranchAccessList('getBranchAccessSetupByEmpId/' + this.userDet.organization.orgId + \"/\" + this.userDet.empId).subscribe((response: any) => {\r\n      // console.log(response);\r\n      if (response.result) {\r\n        this.branchAccessList = response.branchAccessList;\r\n        console.log(this.branchAccessList)\r\n        if (this.branchAccessList.length > 0) {\r\n          // this.filterData.selectedBranch = [this.branchAccessList[0]]; // Set the default value\r\n        }\r\n        else {\r\n          this.branchAccessList = [{ branchId: this.userDet.branch.branchId, branchName: this.userDet.branch.name }];\r\n        }\r\n      }\r\n      else {\r\n        // this.branchAccessList = [];\r\n        this.branchAccessList = [{ branchId: this.userDet.branch.branchId, branchName: this.userDet.branch.name }];\r\n        console.log(this.branchAccessList)\r\n      }\r\n    })\r\n  }\r\n  /* Get Checksheet Details\r\n  @Author Jayshri Kolase\r\n * @Date August 18, 2023\r\n*/\r\n  getChecksheetDetails(data) {\r\n    console.log(data);\r\n    this.apiService.getChecksheetDetails('apis/sm/getChecksheetDetails/' + data.checkSheetId).subscribe((response: any) => {\r\n      console.log(response);\r\n      if (response.result) {\r\n        localStorage.removeItem('setChecksheetId');\r\n        /* Point */\r\n        if (response.data.hasOwnProperty('pointList') && (response.data.pointList != null && response.data.pointList.length > 0)) {\r\n          var resGroups = response.data.pointList.reduce(function (obj, item) {\r\n            obj[item.dayNo] = obj[item.dayNo] || [];\r\n            obj[item.dayNo].push(item);\r\n            return obj;\r\n          }, {});\r\n          response.data.groupPointList = Object.keys(resGroups)\r\n            .map(function (key) {\r\n              return {\r\n                dayNo: key,\r\n                pointList: resGroups[key],\r\n              };\r\n            });\r\n        }\r\n        /* Parameter */\r\n        if (response.data.parameterList != null && response.data.parameterList.length > 0) {\r\n          for (let index = 0; index < response.data.parameterList.length; index++) {\r\n            response.data.parameterList[index].isActionTaken = false;\r\n            response.data.parameterList[index].editableParameter = response.data.parameterList[index].parameter;\r\n            response.data.parameterList[index].editableCycleValue = response.data.parameterList[index].cycleValue;\r\n          }\r\n        }\r\n        this.checksheetDetails = response.data;\r\n        console.log(this.checksheetDetails);\r\n        this.checksheetDetails.checkSheetId = this.checksheetDetails.id;\r\n        this.isCheckSheetAvailable = true;\r\n        localStorage.setItem('setChecksheetId', JSON.stringify(this.checksheetDetails));\r\n        this.checksheetForm.controls['plant'].setValue([{ branchId: this.checksheetDetails.branchId, branchName: this.checksheetDetails.branchName }]);\r\n        this.checksheetForm.controls['deptId'].setValue([{ id: this.checksheetDetails.deptId, name: this.checksheetDetails.deptName }]);\r\n        this.checksheetForm.controls['cellLineId'].setValue([{ id: this.checksheetDetails.lineId, name: this.checksheetDetails.lineName }]);\r\n        this.checksheetForm.controls['workstationId'].setValue([{ id: this.checksheetDetails.workstationId, name: this.checksheetDetails.workstation }]);\r\n        this.checksheetForm.controls['level'].setValue([{ id: this.checksheetDetails.skillLevelId, levelName: this.checksheetDetails.skillLevel }]);\r\n        this.checksheetForm.controls['title'].setValue(this.checksheetDetails.title);\r\n        this.checksheetForm.controls['noOfDays'].setValue(this.checksheetDetails.noOfDays);\r\n      }\r\n    })\r\n  }\r\n  /* Save or Update Checksheet Details\r\n @Author Jayshri Kolase\r\n* @Date August 18, 2023\r\n*/\r\n  saveChecksheetDetails(checksheetForm: any) {\r\n    console.log(checksheetForm)\r\n    if (checksheetForm.invalid) {\r\n      Object.keys(checksheetForm.controls).forEach(key => {\r\n        checksheetForm.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    this.getLocalStorageChecksheetData();\r\n    if (this.setChecksheetId.checkSheetId == undefined || this.setChecksheetId.checkSheetId == \"\" || this.setChecksheetId.checkSheetId == 0) {\r\n      let checksheetData = {\r\n        branchId: checksheetForm.value.plant[0].branchId,\r\n        deptId: checksheetForm.value.deptId[0].id,\r\n        lineId: checksheetForm.value.cellLineId[0].id,\r\n        workstationId: checksheetForm.value.workstationId[0].id,\r\n        noOfDays: checksheetForm.value.noOfDays,\r\n        skillLvlId: checksheetForm.value.level[0].id,\r\n        title: checksheetForm.value.title\r\n      }\r\n      this.apiService.saveChecksheetDetails('apis/sm/addChecksheet', checksheetData).subscribe((response: any) => {\r\n        if (response.result) {\r\n          this.savedChecksheetDet = response.responseData;\r\n          localStorage.removeItem('setChecksheetId');\r\n          localStorage.removeItem('savedChecksheetDet');\r\n          this.savedChecksheetDet.isEditable = true;\r\n          this.savedChecksheetDet.isEditPoint = false;\r\n          this.savedChecksheetDet.isEditParameter = false;\r\n          localStorage.setItem('setChecksheetId', JSON.stringify(this.savedChecksheetDet));\r\n          this.alertService.success(\"OJT checksheet details added successfully.\")\r\n          this.isCheckSheetAvailable = true;\r\n          this.getLocalStorageChecksheetData();\r\n        } else {\r\n          if (response.statusCode == 100) {\r\n            this.alertService.error(response.reason);\r\n          } else {\r\n            this.alertService.error('Error occurred while submitting data. Please try again');\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      let checksheetData = {\r\n        branchId: checksheetForm.value.plant[0].branchId,\r\n        deptId: checksheetForm.value.deptId[0].id,\r\n        lineId: checksheetForm.value.cellLineId[0].id,\r\n        workstationId: checksheetForm.value.workstationId[0].id,\r\n        noOfDays: checksheetForm.value.noOfDays,\r\n        skillLvlId: checksheetForm.value.level[0].id,\r\n        title: checksheetForm.value.title,\r\n        updatedBy: this.userDet.empId,\r\n        checkSheetId: this.checksheetDetails.checkSheetId\r\n      }\r\n      this.apiService.updateChecksheet('apis/sm/updateChecksheet', checksheetData).subscribe((response: any) => {\r\n        if (response.result) {\r\n          localStorage.removeItem('savedChecksheetDet');\r\n          this.savedChecksheetDet.isEditable = true;\r\n          this.savedChecksheetDet.isEditPoint = false;\r\n          this.savedChecksheetDet.isEditParameter = false;\r\n          this.savedChecksheetDet.checkSheetId = this.setChecksheetId.checkSheetId;\r\n          localStorage.setItem('setChecksheetId', JSON.stringify(this.savedChecksheetDet));\r\n          this.getLocalStorageChecksheetData();\r\n          this.alertService.success(\"OJT checksheet details updated successfully.\")\r\n          this.isCheckSheetAvailable = true;\r\n        } else {\r\n          if (response.statusCode == 100) {\r\n            this.alertService.error(response.reason);\r\n          } else {\r\n            this.alertService.error('Error occurred while submitting data. Please try again');\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  /* Open Add Checksheet Points Modal\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  openAddChecksheetPointsModal(modal) {\r\n    localStorage.removeItem('selectedPointsDet');\r\n    localStorage.removeItem('selectedParameterDet');\r\n    let data: any = {};\r\n    data = this.checksheetDetails;\r\n    console.log(this.checksheetDetails);\r\n\r\n    data.isEditPoint = false;\r\n    data.checkSheetId = this.checksheetDetails.id;\r\n    localStorage.setItem('setChecksheetId', JSON.stringify(data));\r\n    var modalRef = this.modalService.open(modal, {\r\n      windowClass: 'right',\r\n    });\r\n    modalRef.result.then(\r\n      (result) => {\r\n        // if (result === \"success\") {\r\n        this.getChecksheetDetails(data);\r\n        // }\r\n      },\r\n      (reason) => {\r\n        this.getChecksheetDetails(data);\r\n      }\r\n    );\r\n  }\r\n  /* Open Update Point Modal\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  updatePoint(modal, data) {\r\n    data.isEditPoint = true;\r\n    data.checkSheetId = this.checksheetDetails.id\r\n    localStorage.setItem('selectedPointsDet', JSON.stringify(data));\r\n    let Obj = JSON.parse(localStorage.getItem('setChecksheetId'));\r\n    var modalRef = this.modalService.open(modal, {\r\n      windowClass: 'right',\r\n    });\r\n    modalRef.result.then(\r\n      (result) => {\r\n        // if (result === \"success\") {\r\n        this.getChecksheetDetails(Obj);\r\n        // }\r\n      },\r\n      (reason) => {\r\n        this.getChecksheetDetails(Obj);\r\n      }\r\n    );\r\n  }\r\n\r\n  isActionTakenInParam() {\r\n    let flag = false;\r\n    if (this.checksheetDetails.parameterList != null && this.checksheetDetails.parameterList.length > 0) {\r\n      for (let index = 0; index < this.checksheetDetails.parameterList.length; index++) {\r\n        if (this.checksheetDetails.parameterList[index].isActionTaken) {\r\n          flag = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n  getParameterTypeList() {\r\n    if (this.parameterTypeList != null && this.parameterTypeList.length > 0) {\r\n      if (this.checksheetDetails.parameterList != null && this.checksheetDetails.parameterList.length > 0) {\r\n        for (let index = 0; index < this.checksheetDetails.parameterList.length; index++) {\r\n          this.checksheetDetails.parameterList[index].paramObj = this.parameterTypeList != null && this.parameterTypeList.filter(x => x.id == this.checksheetDetails.parameterList[index].parameterTypeId).length > 0 ? this.parameterTypeList.filter(x => x.id == this.checksheetDetails.parameterList[index].parameterTypeId)[0] : '';\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    this.apiService.getParameterTypeList('apis/sm/getParameterTypeList').subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.parameterTypeList = response.dataList;\r\n          if (this.checksheetDetails.parameterList != null && this.checksheetDetails.parameterList.length > 0) {\r\n            for (let index = 0; index < this.checksheetDetails.parameterList.length; index++) {\r\n              this.checksheetDetails.parameterList[index].paramObj = this.parameterTypeList != null && this.parameterTypeList.filter(x => x.id == this.checksheetDetails.parameterList[index].parameterTypeId).length > 0 ? this.parameterTypeList.filter(x => x.id == this.checksheetDetails.parameterList[index].parameterTypeId)[0] : '';\r\n            }\r\n          }\r\n        } else {\r\n          this.parameterTypeList = [];\r\n        }\r\n      } else {\r\n        this.parameterTypeList = [];\r\n      }\r\n    })\r\n  }\r\n  /* Open Update Parameter Modal\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  updateParameter(data, type) {\r\n    if (type == '') {\r\n      this.updateParameterData(data);\r\n    } else {\r\n      let flag = (type == 'cancel') ? false : true;\r\n      data.isActionTaken = flag;\r\n      data.editableCycleValue = data.cycleValue;\r\n      data.editableParameter = data.parameter;\r\n    }\r\n  }\r\n  updateParameterData(data) {\r\n    this.actionLoader = true;\r\n    if (!data.editableParameter) {\r\n      this.alertService.error('Please enter paramater');\r\n      this.actionLoader = false;\r\n      return\r\n    }\r\n    if (data.paramObj.typeCaption == 'CyclePlan' && !data.editableCycleValue) {\r\n      this.alertService.error('Please enter cycle value');\r\n      this.actionLoader = false;\r\n      return\r\n    }\r\n    let req: any = {\r\n      \"updatedBy\": this.userDet.empId,\r\n      \"parameter\": data.editableParameter,\r\n      \"checkSheetId\": this.checksheetDetails.checkSheetId,\r\n      \"parameterTypeId\": data.parameterTypeId,\r\n      \"parameterId\": data.id\r\n    }\r\n    if (data.paramObj.typeCaption == 'CyclePlan') {\r\n      req.cycleValue = data.editableCycleValue;\r\n    }\r\n    this.apiService.updateChecksheetParameter('apis/sm/updateChecksheetParameter', req).subscribe((response: any) => {\r\n      this.actionLoader = false;\r\n      if (response.result) {\r\n        // this.alertService.success(\"OJT checksheet parameter updated successfully.\");\r\n        this.alertService.success(\"OJT verification parameter updated successfully.\");\r\n        this.getChecksheetDetails(this.checksheetDetails);\r\n      } else {\r\n        if (response.statusCode == 100) {\r\n          this.alertService.error(response.reason);\r\n        } else {\r\n          this.alertService.error('Error occurred while updating data. Please try again');\r\n        }\r\n      }\r\n    }, (error: any) => {\r\n      this.actionLoader = false;\r\n    })\r\n  }\r\n  /* Delete Checksheet Point\r\n    @Author Jayshri Kolase\r\n    * @Date August 18, 2023\r\n  */\r\n  deleteChecksheetPoint(data) {\r\n    // console.log(data)\r\n    Swal.fire({\r\n      title: 'Are You Sure!',\r\n      text: 'Do you want to remove this point ?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#7044cd',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes remove it',\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      allowEnterKey: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let reqbody = {\r\n          \"checkSheetId\": this.checksheetDetails.checkSheetId,\r\n          \"dayNo\": data.dayNo\r\n        }\r\n        this.apiService.deleteChecksheetPoint('apis/sm/deleteChecksheetPoint', reqbody).subscribe((data: any) => {\r\n          if (data.result) {\r\n            // this.alertService.success(\"Checksheet point removed sucessfully\");\r\n            this.alertService.success(\"Key point removed sucessfully\");\r\n            this.getChecksheetDetails(this.setChecksheetId);\r\n          } else {\r\n            if (data.statusCode == 100) {\r\n              this.alertService.error(data.reason);\r\n            } else {\r\n              this.alertService.error('Error occurred while removing data. Please try again');\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n  /* Delete Checksheet Parameter\r\n   @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n  */\r\n  deleteChecksheetParameter(data) {\r\n    console.log(data)\r\n    Swal.fire({\r\n      title: 'Are You Sure!',\r\n      text: 'Do you want to remove this parameter?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#7044cd',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes remove it',\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      allowEnterKey: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let reqbody = {\r\n          \"parameterId\": data.id\r\n        }\r\n        this.apiService.deleteChecksheetPoint('apis/sm/deleteChecksheetParameter', reqbody).subscribe((data: any) => {\r\n          if (data.result) {\r\n            // this.alertService.success(\"Checksheet parameter removed successfully\");\r\n            this.alertService.success(\"Verification parameter removed successfully\");\r\n            this.getChecksheetDetails(this.setChecksheetId);\r\n          } else {\r\n            if (data.statusCode == 100) {\r\n              this.alertService.error(data.reason);\r\n            } else {\r\n              this.alertService.error('Error occurred while removing data. Please try again');\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n  getSortFunction(array, fieldToSort) {\r\n    // console.log(array, fieldToSort);\r\n    if (array && Array.isArray(array) && array.length > 0) {\r\n      if (fieldToSort === \"dept\" || fieldToSort === \"level\") {\r\n        array.sort(function (a, b) {\r\n          var nameA = a.branchName ? a.branchName.toUpperCase() : \"\";\r\n          var nameB = b.branchName ? b.branchName.toUpperCase() : \"\";\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n  sortFunction(array, key) {\r\n    if (array != null && array.length > 0) {\r\n      array.sort(function (a, b) {\r\n        var nameA = !Number(a[key]) ? a[key].toUpperCase() : a[key];\r\n        var nameB = !Number(b[key]) ? b[key].toUpperCase() : b[key];\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n  /* get Department List\r\n     @Author Simran \r\n     * @Date 27/10/2023\r\n    */\r\n  getDepartmentList(branch) {\r\n    this.apiService\r\n      .getDepartmentByBranch(\"getdepartmentlistbybranchid/\" + branch)\r\n      .subscribe((res: any) => {\r\n        if (res.result) {\r\n          if (res.deptList != null && res.deptList.length > 0) {\r\n            /* Use For Add Screen */\r\n            this.departmentList = this.setArray(\r\n              res.deptList,\r\n              \"deptId\",\r\n              \"deptName\"\r\n            );\r\n            this.departmentList = this.sortFunction(this.departmentList, \"deptName\");\r\n            this.searchDet.dept = [this.departmentList[0]];\r\n            if (!this.searchDet.addForm) {\r\n              /* Use For Filter */\r\n              this.searchDet.departmentList = this.setArray(\r\n                res.deptList,\r\n                \"deptId\",\r\n                \"deptName\"\r\n              );\r\n              // this.searchDet.deptIds = this.searchDet.departmentList;\r\n            }\r\n\r\n          } else {\r\n\r\n            this.searchDet.departmentList = [];\r\n          }\r\n        } else {\r\n\r\n          this.searchDet.departmentList = [];\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  /* get Cell/Line List\r\n  @Author Simran \r\n  * @Date 27/10/2023\r\n */\r\n  getCellList(ev) {\r\n    console.log(ev);\r\n    this.reportBodyCell = {\r\n      branchId: this.branchId,\r\n      deptId: ev,\r\n    };\r\n    this.apiService\r\n      .getCellList(\"apis/sm/getCellList\", this.reportBodyCell)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        if (res.result) {\r\n          if (res.dataList != null && res.dataList.length > 0) {\r\n            /* Use For Add Screen */\r\n            this.cellList = this.setArray(res.dataList, \"lineId\", \"lineName\");\r\n            console.log(this.cellList);\r\n            this.cellList = this.sortFunction(this.cellList, \"lineName\");\r\n            this.searchDet.dept = [this.cellList[0]];\r\n            /* Use For Filter */\r\n            this.searchDet.cellList = this.setArray(\r\n              res.dataList,\r\n              \"lineId\",\r\n              \"lineName\"\r\n            );\r\n\r\n          } else {\r\n            this.cellList = [];\r\n            this.searchDet.cellList = [];\r\n          }\r\n        } else {\r\n          // this.cellList = [];\r\n          // this.searchDet.cellList = [];\r\n        }\r\n        // this.branchId = [this.searchDet.cellList[0]];\r\n        // // this.getDepartmentList(this.branchId[0]);\r\n      });\r\n  }\r\n\r\n  /* get Workstation List List\r\n   @Author Simran \r\n   * @Date 27/10/2023\r\n  */\r\n  getWorkforceList(data) {\r\n    // this.workforceList = [];\r\n    // this.listLoader = true;\r\n    console.log(data);\r\n    let req: any = {\r\n      branchId: this.branchId,\r\n      orgId: this.userDet.organization.orgId,\r\n      deptId: this.deptId,\r\n      lineIds: [data]\r\n    };\r\n    console.log(req);\r\n    // if (this.searchDet.dept != null && this.searchDet.dept.length > 0) {\r\n    //   req.deptId = this.searchDet.dept[0].id;\r\n    // }\r\n    // if (this.searchDet.cell != null && this.searchDet.cell.length > 0) {\r\n    //   req.lineId = this.searchDet.cell[0].id;\r\n    // }\r\n    this.apiService\r\n      .getWorkforceDeploymentData(\"apis/sm/getWorkstationList\", req)\r\n      .subscribe((res: any) => {\r\n        if (res.result) {\r\n          console.log(res);\r\n          if (res.dataList != null && res.dataList.length > 0) {\r\n            this.workforceList = this.setArray(res.dataList, \"id\", \"workstation\");\r\n            this.workforceList = this.sortFunction(this.workforceList, \"workstation\");\r\n            this.searchDet.workforceList = [this.workforceList[0]];\r\n            console.log(this.workforceList);\r\n          } else {\r\n            this.workforceList = [];\r\n          }\r\n        } else {\r\n          this.workforceList = [];\r\n        }\r\n      });\r\n  }\r\n  /*\r\n   Common function for set an array for dropdown\r\n   Author: Simran\r\n   Date : 27/10/2023\r\n */\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n  /*\r\n    Common function For get Ids from array\r\n    Author: Simran\r\n    Date : 27/10/2023\r\n  */\r\n  getIDsArray(array) {\r\n    let tmp: any = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        tmp.push(element.id);\r\n      }\r\n    }\r\n    return tmp;\r\n  }\r\n\r\n  /*\r\n  Single Select Dropdown onChange function\r\n  Author: Mahesh W\r\n  Date : 21 Aug 2023\r\n*/\r\n  onChange(ev: any, type) {\r\n    if (ev) {\r\n      console.log(ev);\r\n\r\n      if (type == \"dept\") {\r\n        this.cellList = [];\r\n\r\n        this.deptId = ev.id;\r\n        this.searchDet.lineId = [];\r\n        this.resetFormField(this.checksheetForm, \"cellLineId\");\r\n        this.resetFormField(this.checksheetForm, \"workstationId\");\r\n        this.getCellList(this.deptId);\r\n\r\n        // this.resetFormField(this.checksheetForm, 'lineId')\r\n      }\r\n      if (type == \"plant\") {\r\n        console.log(ev)\r\n        this.branchId = ev.branchId;\r\n        this.searchDet.deptIds = [];\r\n        this.resetFormField(this.checksheetForm, \"deptId\");\r\n        this.resetFormField(this.checksheetForm, \"cellLineId\");\r\n        this.resetFormField(this.checksheetForm, \"workstationId\");\r\n        this.getDepartmentList(this.branchId);\r\n        if (this.searchDet.addForm) {\r\n          console.log(\"inside\");\r\n          // this.resetFormField(this.checksheetForm, \"deptId\");\r\n        }\r\n      }\r\n      if (type == \"cell\") {\r\n        console.log(ev);\r\n        this.lineId = ev.id;\r\n        this.searchDet.work = [];\r\n        this.resetFormField(this.checksheetForm, \"workstationId\");\r\n        this.getWorkforceList(this.lineId);\r\n      }\r\n    } else {\r\n      if (type == \"plant\") {\r\n        if (this.searchDet) {\r\n          this.departmentList = [];\r\n          this.searchDet.departmentList = [];\r\n          this.cellList = [];\r\n          this.searchDet.cellList = [];\r\n          // this.resetFormField(this.filterData, \"deptIds\");\r\n          // this.resetFormField(this.stakeholderForm, \"deptId\");\r\n          // this.resetFormField(this.stakeholderForm, 'lineId');\r\n          this.searchDet.lineId = [];\r\n        } else {\r\n          // this.resetFormField(this.stakeholderForm, \"empId\");\r\n        }\r\n      } else if (type == 'dept') {\r\n        // this.resetFormField(this.stakeholderForm, 'lineId');\r\n        this.cellList = [];\r\n        this.searchDet.cellList = [];\r\n        this.searchDet.lineId = [];\r\n      }\r\n    }\r\n  }\r\n  resetFormField(form, keyName) {\r\n    Object.keys(form.controls).forEach((key) => {\r\n      if (key == keyName) {\r\n        form.get(keyName).reset();\r\n        form.get(keyName).markAsPristine();\r\n        form.get(keyName).markAsUntouched();\r\n      }\r\n    });\r\n  }\r\n  updateLevelOptions(workstationId: number) {\r\n    console.log(workstationId)\r\n    this.checksheetForm.get('level').setValue(''); // Clear the selection\r\n    const filteredLevels = this.levelList.filter(level => level.workstationId === workstationId);\r\n    this.levelList = [...filteredLevels];\r\n  }\r\n\r\n  /*\r\n  Single Select Dropdown onChange function\r\n  Author: Mahesh W\r\n  Date : 21 Aug 2023\r\n*/\r\n  onPlantChange(ev: any, type) {\r\n    if (ev) {\r\n      console.log(ev);\r\n      if (type == \"dept\") {\r\n        this.cellList = [];\r\n        this.copyChecksheetDetails.deptId = ev.id;\r\n        this.deptId = ev.id;\r\n        this.searchDet.lineId = [];\r\n        this.copyChecksheetDetails.level = [];\r\n        this.resetFormField(this.copyChecksheetForm, \"level\");\r\n        this.checksheetList = [];\r\n        this.resetFormField(this.copyChecksheetForm, \"cellLineId\");\r\n        this.resetFormField(this.copyChecksheetForm, \"workstationId\");\r\n        this.getCellList(this.deptId);\r\n        // this.getChecksheetList();\r\n      }\r\n      if (type == \"plant\") {\r\n        console.log(ev)\r\n        this.isDirty = true;\r\n        this.copyChecksheetDetails.branchId = ev.branchId;\r\n        this.branchId = ev.branchId;\r\n        this.searchDet.deptIds = [];\r\n        this.copyChecksheetDetails.level = [];\r\n        this.resetFormField(this.copyChecksheetForm, \"level\");\r\n        this.checksheetList = [];\r\n        this.resetFormField(this.copyChecksheetForm, \"deptId\");\r\n        this.resetFormField(this.copyChecksheetForm, \"cellLineId\");\r\n        this.resetFormField(this.copyChecksheetForm, \"workstationId\");\r\n        this.getDepartmentList(this.branchId);\r\n        this.checksheetList = [];\r\n        // this.getChecksheetList();\r\n        if (this.searchDet.addForm) {\r\n          console.log(\"inside\");\r\n        }\r\n      }\r\n      if (type == \"cell\") {\r\n        console.log(ev);\r\n        this.copyChecksheetDetails.lineId = ev.id;\r\n        this.lineId = ev.id;\r\n        this.searchDet.work = [];\r\n        this.copyChecksheetDetails.level = [];\r\n        this.resetFormField(this.copyChecksheetForm, \"level\");\r\n        this.checksheetList = [];\r\n        this.resetFormField(this.copyChecksheetForm, \"workstationId\");\r\n        this.getWorkforceList(this.lineId);\r\n        this.checksheetList = [];\r\n        // this.getChecksheetList();\r\n      }\r\n      if (type == \"level\") {\r\n        console.log(ev);\r\n        this.copyChecksheetDetails.skillLevelId = ev.id;\r\n        this.getChecksheetList();\r\n      }\r\n    } else {\r\n      if (type == \"plant\") {\r\n        if (this.searchDet) {\r\n          this.departmentList = [];\r\n          this.searchDet.departmentList = [];\r\n          this.cellList = [];\r\n          this.searchDet.cellList = [];\r\n          this.searchDet.lineId = [];\r\n          this.checksheetList = [];\r\n        } else {\r\n        }\r\n      } else if (type == 'dept') {\r\n        this.cellList = [];\r\n        this.searchDet.cellList = [];\r\n        this.searchDet.lineId = [];\r\n        this.checksheetList = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Get Checksheet List\r\n @Author - Jayshri Kolase\r\n @Date January 30, 2024 */\r\n  getChecksheetList() {\r\n    this.checksheetList = [];\r\n    let reqData: any = {\r\n      createdBy: this.userDet.empId,\r\n      orgId: this.userDet.organization.orgId,\r\n      updatedBy: this.userDet.empId\r\n    };\r\n    if (this.copyChecksheetDetails.branchId != undefined && this.copyChecksheetDetails.branchId != '') {\r\n      reqData.branchId = this.copyChecksheetDetails.branchId;\r\n    }\r\n    if (this.copyChecksheetDetails.deptId != undefined && this.copyChecksheetDetails.deptId != '') {\r\n      reqData.deptId = this.copyChecksheetDetails.deptId;\r\n    }\r\n    if (this.copyChecksheetDetails.lineId != undefined && this.copyChecksheetDetails.lineId != '') {\r\n      reqData.lineId = this.copyChecksheetDetails.lineId;\r\n    }\r\n    if (this.copyChecksheetDetails.skillLevelId != undefined && this.copyChecksheetDetails.skillLevelId != '') {\r\n      reqData.skillLvlId = this.copyChecksheetDetails.skillLevelId;\r\n    }\r\n    console.log(reqData);\r\n\r\n    this.apiService.getChecksheetList('apis/sm/getChecksheetList', reqData).subscribe((response: any) => {\r\n      if (response.result) {\r\n        this.checksheetList = response.dataList;\r\n        var filteredChecksheetList = this.checksheetList.filter(item => {\r\n          return item.title !== this.searchDet.title;\r\n        });\r\n        if (filteredChecksheetList != null && filteredChecksheetList.length > 0) {\r\n          if (this.checksheetList.length === 1 && this.checksheetList[0].title === this.searchDet.title) {\r\n            this.checksheetList = [];\r\n          } else {\r\n            filteredChecksheetList = this.sortFunction(filteredChecksheetList, \"title\");\r\n            this.checksheetList = filteredChecksheetList;\r\n          }\r\n        } else {\r\n          this.checksheetList = [];\r\n          this.searchDet.checksheetList = [];\r\n        }\r\n      } else {\r\n        if (response.statusCode == 100) {\r\n        } else {\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /* Get Checksheet Details Onchange function\r\n  @Author - Jayshri Kolase\r\n  @Date Feb 20, 2024 */\r\n  getSelectedChecksheetDetails(checkSheetId: any): void {\r\n    this.isCopyChecksheetDetailsAvail = false;\r\n    // Clear parameterDet.rec before populating with new data\r\n    this.parameterDet.rec = [];\r\n\r\n    // Clear daysList before populating with new data\r\n    const daysList = this.daysList();\r\n    if (daysList) {\r\n      daysList.clear();\r\n    }\r\n    this.apiService.getChecksheetDetails('apis/sm/getChecksheetDetails/' + checkSheetId).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.data.hasOwnProperty('pointList') && (response.data.pointList != null && response.data.pointList.length > 0)) {\r\n          var resGroups = response.data.pointList.reduce(function (obj, item) {\r\n            obj[item.dayNo] = obj[item.dayNo] || [];\r\n            obj[item.dayNo].push(item);\r\n            return obj;\r\n          }, {});\r\n          response.data.groupPointList = Object.keys(resGroups)\r\n            .map(function (key) {\r\n              return {\r\n                dayNo: key,\r\n                pointList: resGroups[key],\r\n              };\r\n            });\r\n        }\r\n        if (response.data.groupPointList != null && response.data.groupPointList.length > 0) {\r\n          for (let index = 0; index < response.data.groupPointList.length; index++) {\r\n            if (index < response.data.groupPointList.length) {\r\n              this.addcopyDaysRow(index);\r\n            }\r\n            this.daysList().controls[index].get('dayNo').setValue(response.data.groupPointList[index].dayNo);\r\n            if (response.data.groupPointList[index].pointList != null && response.data.groupPointList[index].pointList.length > 0) {\r\n              for (let x = 0; x < response.data.groupPointList[index].pointList.length; x++) {\r\n                // Add a new FormGroup to pointList\r\n                this.pointList(index).push(this.pointsForm());\r\n\r\n                // Now you can set values for the newly added FormGroup\r\n                const lastIndex = this.pointList(index).length - 1;\r\n                this.pointList(index).controls[lastIndex].get('id').setValue('0');\r\n                this.pointList(index).controls[lastIndex].get('action').setValue('ADD');\r\n                this.pointList(index).controls[lastIndex].get('itemName').setValue(response.data.groupPointList[index].pointList[x].itemName);\r\n                this.pointList(index).controls[lastIndex].get('reference').setValue(response.data.groupPointList[index].pointList[x].reference);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (response.data.parameterList != null && response.data.parameterList.length > 0) {\r\n          this.checksheetDetails.copyCheckSheetId = response.data.id;\r\n          for (let index = 0; index < response.data.parameterList.length; index++) {\r\n            let obj: any = Object.assign({}, { parameterData: { typeName: response.data.parameterList[index].parameterType, typeCaption: response.data.parameterList[index].parameterType, id: response.data.parameterList[index].parameterTypeId }, parameterTypeId: response.data.parameterList[index].parameterTypeId, parameter: response.data.parameterList[index].parameter });\r\n            const hasCyclePlanParameter = response.data.parameterList[index].parameterType === \"cyclePlan\";\r\n            obj.cycleValue = response.data.parameterList[index].cycleValue\r\n            if (obj.parameterData.typeName === \"cyclePlan\") {\r\n              obj.cycleValue = response.data.parameterList[index].cycleValue;\r\n            }\r\n            this.parameterDet.rec.push(obj);\r\n            // }\r\n          }\r\n        }\r\n        this.filteredChecksheetDetails = response.data;\r\n        if (this.filteredChecksheetDetails.groupPointList || this.filteredChecksheetDetails.parameterList) {\r\n          this.isCopyChecksheetDetailsAvail = true;\r\n        }\r\n        this.setMainTab(1);\r\n      }\r\n    })\r\n  }\r\n\r\n  setChecksheet(data: any) {\r\n    console.log(data)\r\n    this.selectedchecksheet.id = data.id;\r\n    this.getSelectedChecksheetDetails(this.selectedchecksheet.id);\r\n  }\r\n\r\n  /* Get Parameter Type List for copy functionality\r\n  @Author Jayshri Kolase\r\n  * @Date Feb 03, 2024\r\n*/\r\n  getCopyParameterTypeList() {\r\n    this.apiService.getParameterTypeList('apis/sm/getParameterTypeList').subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.paraTypeList = response.dataList;\r\n          this.copyChecksheetDetails.parameterType = [this.paraTypeList[0]]\r\n          console.log(this.copyChecksheetDetails.parameterType);\r\n          if (this.copyChecksheetDetails.parameterType[0].typeName == 'Text') {\r\n            this.copyChecksheetForm.get('parameter').setValidators([Validators.required]);\r\n            if (this.copyChecksheetForm.get('cycleValue')) {\r\n              this.copyChecksheetForm.get('cycleValue').clearValidators();\r\n            }\r\n            this.isAddButtonClicked = false;\r\n            this.isNumberParameter = false;\r\n            this.isTextParameter = true;\r\n            this.isDateTimeParameter = false;\r\n            this.isModelParameter = false;\r\n            this.isGapParameter = false;\r\n          }\r\n\r\n        } else {\r\n          this.paraTypeList = [];\r\n        }\r\n      } else {\r\n        this.paraTypeList = [];\r\n      }\r\n    })\r\n  }\r\n  /* get Parameter Sort Function copy Checksheet Parameter\r\n   @Author Jayshri Kolase\r\n   * @Date Feb 03, 2024\r\n */\r\n  getParaSortFunction(array, fieldToSort) {\r\n    if (array && Array.isArray(array) && array.length > 0) {\r\n      if (fieldToSort === \"paraType\") {\r\n        array.sort(function (a, b) {\r\n          var nameA = a.typeName ? a.typeName.toUpperCase() : \"\";\r\n          var nameB = b.typeName ? b.typeName.toUpperCase() : \"\";\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /* to change input fields in parameterTye\r\n  @Author Jayshri Kolase\r\n  * @Date Feb 03, 2024\r\n*/\r\n  onParameterTypeSelect(event: any) {\r\n    // this.copyChecksheetForm.get('parameter').reset();\r\n    console.log(event);\r\n    this.disableReferModel = true;\r\n    const selectedParameterType = event.typeName;\r\n    this.isSelectedParaType = event.typeName;\r\n\r\n\r\n    if (selectedParameterType === 'Text') {\r\n      this.copyChecksheetForm.get('parameter').setValidators([Validators.required]);\r\n      this.copyChecksheetForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isNumberParameter = false;\r\n      this.isTextParameter = true;\r\n      this.isCyclePlan = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = false;\r\n    } else if (selectedParameterType === 'Number') {\r\n      this.copyChecksheetForm.get('parameter').setValidators([Validators.required]);\r\n      this.copyChecksheetForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isTextParameter = false;\r\n      this.isNumberParameter = true;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = false;\r\n    } else if (selectedParameterType === 'cyclePlan') {\r\n      this.copyChecksheetForm.get('cycleValue').setValidators([Validators.required, Validators.pattern('^[0-9]*$')]);\r\n      this.isTextParameter = false;\r\n      this.isCyclePlan = true;\r\n      this.isAddButtonClicked = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = false;\r\n    } else if (selectedParameterType === 'Datetime') {\r\n      this.copyChecksheetForm.get('parameter').setValidators([Validators.required]);\r\n      this.copyChecksheetForm.get('cycleValue').clearValidators();\r\n      this.isTextParameter = false;\r\n      this.isAddButtonClicked = false;\r\n      this.isGapParameter = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = true;\r\n      this.isModelParameter = false;\r\n\r\n    } else if (selectedParameterType === 'Gap') {\r\n      this.copyChecksheetForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isTextParameter = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isModelParameter = false;\r\n      this.isGapParameter = true;\r\n    } else if (selectedParameterType === 'Model') {\r\n      this.copyChecksheetForm.get('cycleValue').clearValidators();\r\n      this.isAddButtonClicked = false;\r\n      this.isTextParameter = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isGapParameter = false;\r\n      this.isModelParameter = true;\r\n    } else {\r\n      // Handle other parameter types if necessary\r\n      this.isTextParameter = false;\r\n      this.isAddButtonClicked = false;\r\n      this.isNumberParameter = false;\r\n      this.isDateTimeParameter = false;\r\n      this.isGapParameter = false;\r\n      this.isModelParameter = false;\r\n      this.disableReferModel = false;\r\n    }\r\n\r\n    this.copyChecksheetForm.get('parameter').updateValueAndValidity();\r\n    this.copyChecksheetForm.get('cycleValue').updateValueAndValidity();\r\n  }\r\n\r\n  /* Save or Update copy Checksheet Parameter\r\n   @Author Jayshri Kolase\r\n   * @Date Feb 03, 2024\r\n  */\r\n  addChecksheetParameter() {\r\n    console.log(\"form\");\r\n    this.isAddButtonClicked = true;\r\n    this.addLoader = true;\r\n\r\n    if (this.copyChecksheetDetails.parameterType == null || this.copyChecksheetDetails.parameterType.length == 0) {\r\n      this.addLoader = false;\r\n      return;\r\n    }\r\n    if (this.copyChecksheetDetails.parameter == undefined || this.copyChecksheetDetails.parameter == '') {\r\n      this.addLoader = false;\r\n      return;\r\n    }\r\n    let obj: any = Object.assign({}, { parameterData: this.copyChecksheetDetails.parameterType[0], parameterTypeId: this.copyChecksheetDetails.parameterType[0].id, parameter: this.copyChecksheetDetails.parameter });\r\n    const hasCyclePlanParameter = this.copyChecksheetDetails.parameterType.some(\r\n      param => param.parameterType === \"cyclePlan\"\r\n    );\r\n    obj.cycleValue = this.copyChecksheetDetails.cycleValue\r\n    if (obj.parameterData.typeName === \"cyclePlan\") {\r\n      obj.cycleValue = this.copyChecksheetDetails.cycleValue;\r\n    }\r\n    if (hasCyclePlanParameter && obj.parameterData.typeName === \"cyclePlan\") {\r\n      this.alertService.error('Only one cycle plan can be added for this checksheet.');\r\n      this.addLoader = false;\r\n    } else {\r\n      this.parameterDet.rec.push(obj);\r\n      this.addLoader = false;\r\n    }\r\n  }\r\n  /* remove or Update copy Checksheet Parameter\r\n @Author Jayshri Kolase\r\n * @Date Feb 03, 2024\r\n*/\r\n  removeParameter(paramIndex) {\r\n    this.parameterDet.rec.splice(paramIndex, 1);\r\n  }\r\n  /* on Parameter Input Change copy Checksheet Parameter\r\n @Author Jayshri Kolase\r\n * @Date Feb 03, 2024\r\n*/\r\n  onParameterInputChange(event: any, type: any) {\r\n    let newValue = event.target.value;\r\n    if (type === 'Number') {\r\n      newValue = newValue.replace(/[^0-9]/g, \"\");\r\n      newValue = newValue.replace(/^0+/g, \"\");\r\n      if (newValue === \"\" || parseInt(newValue) < 1) {\r\n        newValue = \" \";\r\n      }\r\n    }\r\n    else if (type === 'Text') {\r\n      newValue = newValue.replace(/[^a-zA-Z0-9]/g, \"\");\r\n    }\r\n    event.target.value = newValue;\r\n  }\r\n\r\n\r\n  pointList(dayNumIndex: number): FormArray {\r\n    return this.daysList().at(dayNumIndex).get(\"pointList\") as FormArray;\r\n  }\r\n  addPointsRow(dayNumIndex: number) {\r\n    this.pointList(dayNumIndex).push(this.pointsForm());\r\n  }\r\n\r\n  addDaysRow(dayNumIndex: number) {\r\n    this.daysList().push(this.fb.group({\r\n      dayNo: dayNumIndex + 1,\r\n      pointList: this.fb.array([])\r\n    }));\r\n    this.addPointsRow(dayNumIndex);\r\n    const totalDays = this.copyChecksheetDetails.noOfDays;\r\n    const currentDays = this.daysList().length;\r\n\r\n    if (currentDays >= totalDays) {\r\n      this.alertService.error('Cannot add more days. Maximum number of days reached.');\r\n      return;\r\n    }\r\n  }\r\n  addcopyDaysRow(dayNumIndex: number) {\r\n    this.daysList().push(this.fb.group({\r\n      dayNo: dayNumIndex + 1,\r\n      pointList: this.fb.array([])\r\n    }));\r\n    // this.addPointsRow(dayNumIndex);\r\n    const totalDays = this.copyChecksheetDetails.noOfDays;\r\n    const currentDays = this.daysList().length;\r\n\r\n    if (currentDays >= totalDays) {\r\n      this.alertService.error('Cannot add more days. Maximum number of days reached.');\r\n      return;\r\n    }\r\n  }\r\n\r\n  removePointRow(empNumIndex: number, pointIndex: number) {\r\n    this.pointList(empNumIndex).removeAt(pointIndex);\r\n  }\r\n\r\n  updateDayField() {\r\n    if (this.daysList().controls != null && this.daysList().controls.length > 0) {\r\n      for (let index = 0; index < this.daysList().controls.length; index++) {\r\n        this.daysList().at(index).get(\"dayNo\").setValue(index + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeDayNumRow(dayNumIndex: number) {\r\n    this.daysList().removeAt(dayNumIndex);\r\n    this.updateDayField();\r\n  }\r\n\r\n  saveCopyChecksheetDetails(form) {\r\n    // this.submitLoader = true\r\n    this.isDirty = true;\r\n    // Create a new form group containing only the desired fields\r\n    const requiredFields = this.fb.group({\r\n      plant: form.controls['plant'],\r\n      deptId: form.controls['deptId'],\r\n      cellLineId: form.controls['cellLineId'],\r\n      workstationId: form.controls['workstationId'],\r\n      level: form.controls['level'],\r\n      title: form.controls['title'],\r\n      noOfDays: form.controls['noOfDays']\r\n    });\r\n\r\n    // Check if the required fields are valid\r\n    if (requiredFields.invalid) {\r\n      Object.keys(requiredFields.controls).forEach(key => {\r\n        requiredFields.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    console.log(form);\r\n    if (form.value.daysList.length > form.value.noOfDays) {\r\n      this.alertService.error('Cannot add more days. Maximum number of days reached.');\r\n      return;\r\n    }\r\n    if (form.value.daysList.length < form.value.noOfDays) {\r\n      this.alertService.error('It is mandatory to add checksheet points for all days.');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n\r\n    const req = {\r\n      \"branchId\": parseInt(form.value.plant[0].branchId),\r\n      \"deptId\": parseInt(form.value.deptId[0].id),\r\n      \"lineId\": parseInt(form.value.cellLineId[0].id),\r\n      \"workstationId\": parseInt(form.value.workstationId[0].id),\r\n      \"noOfDays\": form.value.noOfDays,\r\n      \"skillLvlId\": parseInt(form.value.level[0].id),\r\n      \"title\": form.value.title,\r\n      \"updatedBy\": this.userDet.empId,\r\n      \"createdBy\": this.userDet.empId,\r\n      \"daysList\": form.value.daysList,\r\n      \"parameterList\": this.parameterDet.rec\r\n    }\r\n    this.apiService.saveCopyChecksheet('apis/sm/saveCopyChecksheet', req).subscribe((response: any) => {\r\n      console.log(response);\r\n      if (response.result) {\r\n        // this.alertService.success(\"OJT checksheet details added successfully.\");\r\n        this.parameterDet.rec = [];\r\n        const daysList = this.daysList();\r\n        if (daysList) {\r\n          daysList.clear();\r\n        }\r\n        localStorage.removeItem('setChecksheetId');\r\n        localStorage.removeItem('savedChecksheetDet');\r\n        this.savedChecksheetDet.isEditable = true;\r\n        this.savedChecksheetDet.isEditPoint = false;\r\n        this.savedChecksheetDet.isEditParameter = false;\r\n        localStorage.setItem('setChecksheetId', JSON.stringify(response.responseData));\r\n        this.alertService.success(\"OJT checksheet details added successfully.\")\r\n        this.isCheckSheetAvailable = true;\r\n        this.getLocalStorageChecksheetData();\r\n        this.mainChecksheetTab = 3;\r\n        // this.getChecksheetDetails(response.responseData);\r\n      } else {\r\n        if (response.statusCode == 100) {\r\n          this.alertService.error(response.reason);\r\n        } else {\r\n          this.alertService.error('Error occurred while submitting data. Please try again');\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n}\r\n"]}