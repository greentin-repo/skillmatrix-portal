{"version":3,"sources":["webpack:///src/app/modules/skill-matrix/skill-matrix.module.ts","webpack:///src/app/modules/skill-matrix/skill-matrix.component.ts","webpack:///src/app/modules/skill-matrix/assessments/assessments.component.html","webpack:///src/app/modules/skill-matrix/workforce-deployment/add-view-workforce/add-view-workforce.component.scss","webpack:///src/app/modules/skill-matrix/certificates/certificates.component.scss","webpack:///src/app/modules/skill-matrix/skill-matrix-routing.module.ts","webpack:///src/app/modules/skill-matrix/workforce-deployment/workforce-deployment.component.html","webpack:///src/app/modules/skill-matrix/workforce-deployment/workforce-deployment.component.ts","webpack:///src/app/modules/skill-matrix/workforce-deployment/add-view-workforce/add-view-workforce.component.ts","webpack:///src/app/modules/skill-matrix/skilling.service.ts","webpack:///src/app/modules/skill-matrix/assessments/assessments.component.ts","webpack:///src/app/modules/skill-matrix/workforce-deployment/workforce-deployment.component.scss","webpack:///src/app/modules/skill-matrix/skill-matrix.constant.ts","webpack:///src/app/modules/skill-matrix/skill-matrix.component.scss","webpack:///src/app/modules/skill-matrix/certificates/certificates.component.html","webpack:///src/app/modules/skill-matrix/assessments/assessments.component.scss","webpack:///src/app/modules/skill-matrix/actions/actions.component.scss","webpack:///src/app/modules/skill-matrix/skill-matrix.component.html","webpack:///src/app/modules/skill-matrix/certificates/certificates.component.ts","webpack:///src/app/modules/skill-matrix/workforce-deployment/add-view-workforce/add-view-workforce.component.html","webpack:///src/app/modules/skill-matrix/actions/actions.component.ts","webpack:///src/app/modules/skill-matrix/actions/actions.component.html"],"names":["MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","SkillMatrixModule","declarations","imports","providers","provide","useValue","SkillMatrixComponent","apiService","modalService","fb","Constant","listLoader","exportLoader","skillMatrixDetails","searchDet","SingleDropdownSettings","SingleCellDropdownSettings","branchAccessList","userDet","selectedBranch","deptList","cellList","constant","filterFlag","isAppliedFilter","hasSkillMatrixData","revNo","shiftList","id","name","filteredSkillMatrixTLData","sheetColumns","JSON","localStorage","getItem","shift","branch","branchId","getBranchAccessList","isDefaultWorking","singleSelection","idField","textField","allowSearchFilter","closeDropDownOnSelection","filterData","group","required","deptId","lineIds","organization","orgId","empId","subscribe","res","result","length","setArray","sortFunction","getDeptList","event","dept","cell","getdepartmentlistbybranchid","getCellList","req","response","dataList","getSkillMatixData","objectName","Object","keys","skillMatrixDocument","cellObj","filter","x","shiftNo","lineId","getSkillMatrixListForExport","multiskillingPercentage","getSkillMatrixData","data","hasOwnProperty","levelSummary","count","requiredCount","Math","round","actualCount","tableData","tableEmpData","filteredEmpData","i","empLevel","push","skillingPer","documentName","row","error","key","empLevelColumn","columns","find","column","field","heading","obj","isObjectEmpty","index","array","key1","key2","tmpArray","element","item","currentSkillLevelId","EQUAL","level","currentSkillLevel","ELIGIBLE","NOT_ELIGIBLE","OTHER","skillLevel","headers","workbook","worksheet","addWorksheet","header","width","machineIndex","mergeCells","levelName","xlsx","writeBuffer","then","blob","Blob","type","exportData","titleSheet","machineIndexColCount","columnCount","undefined","date","Date","currentDate","formattedDate","formatDate","options","day","month","year","toLocaleDateString","titleRow","lineName","docName","j","requiredWorkforce","console","log","tempWorkstationList","sheetColWidths","checkedIndexes","isNotTE","empName","experience","checked","isChecked","status","col","marks","workstationLvlCount","totalCount","rows","rowslist","assign","forEach","addRows","rowNumber","getRow","font","bold","colNumber","cellCount","getCell","alignment","vertical","horizontal","lvlTblRowIndex","eachCell","border","top","style","color","argb","left","bottom","right","levelId","fill","pattern","fgColor","nonTlEmployees","tlEmployees","cellValue","value","colorMapping","highlightValues","startColumn","eachRow","toString","includes","columnIndex","minWidth","currentWidth","getColumn","excelName","sort","a","b","nameA","Number","toUpperCase","nameB","flag","employee","workstationId","workstation","workstations","getLevelNameForWorkstation","highestWorkstation","reduce","highest","current","reqSkillLevelId","highestLevelName","getHighestWorkstationLevel","modal","open","windowClass","backdrop","keyboard","form","invalid","controls","markAsDirty","dismissAll","reset","fromDate","toDate","ev","searchValue","searchInput","trim","toLowerCase","values","some","selector","template","routes","path","component","loadChildren","m","OjtPlanModule","OjtRegistrationModule","SkillMatrixRoutingModule","forChild","exports","WorkforceDeploymentComponent","modalConfig","submitAttempted","cellLineList","selectedDet","workforceList","staticPagination","total","page","maxSize","itemsPerPage","totalPages","listLength","headings","WorkForceDetails","empListArray","columnsArray","headingName","today","format","getWorkforceList","keyName","get","markAsPristine","markAsUntouched","resetFormField","clearPagination","searchData","selectedBranchId","selectedDeptId","searchFilter","offset","limit","sorting","direction","colName","active","orderType","getIDsArray","fromDt","search","getWorkforceDeploymentData","ceil","isStage1","stageId","dayNo","deptName","branchName","shiftName","shiftId","getWorkForceDeploymentDetails","empList","exportToExcel","title","modalRef","reason","tmp","greenFill","yellowFill","commonColumnWidth","mainHeading","Array","centerIndex","floor","height","wrapText","addRow","companyEmpId","workstationName","url","window","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","AddViewWorkforceComponent","alertService","submitLoader","minDate","selectedWorkForceData","maxDate","getWFDetails","getShiftData","getWFDetailsList","isSelected","tableDataCopy","changes","currentLevel","requiredLevel","requireSkillLevelId","isEligibleCheck","splice","toDt","createdBy","saveWorkforceData","success","close","statusCode","SkillingService","httpService","getMethod","reqData","postMethod","getReq","providedIn","AssessmentsComponent","skillingService","multipleDropdownSettings","isUpload","loggedInEmpDet","masterWork","deptLvlId","selectAllText","unSelectAllText","itemsShowLimit","getMasterSkillLevelList","getAccessiblePlantList","getAssessmentList","searchfilter","assessmentData","deptIds","masterWorkList","workstationIds","getAssessmentDisplay","listLoading","plantList","getMasterLevelList","masterLevelList","getMasterDepartmentList","masterDeptList","departmentList","getWorkstationList","worksatationData","masterWorkStationList","selectedRecForModal","patchValue","filterModalOpen","fieldToSort","isArray","CONSTANT","CertificatesComponent","submitSpinner","getMasterCertificateList","getbranchId","getDepartmentByBranch","certificateList","getDepartmentList","filterPopupOpen","getCertificateList","previewCertModal","ActionsComponent","actionList","getSkillMatrixOjtList","skillLvlId","skillLevelId","getSkillMatrixActionList","smActionList","filterFormData"],"mappings":"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","file":"modules-skill-matrix-skill-matrix-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SkillMatrixRoutingModule } from './skill-matrix-routing.module';\r\nimport { SkillMatrixComponent } from './skill-matrix.component';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { AssessmentsComponent } from './assessments/assessments.component';\r\nimport { CertificatesComponent } from './certificates/certificates.component';\r\nimport { WorkforceDeploymentComponent } from './workforce-deployment/workforce-deployment.component';\r\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { CustomPipeModule } from 'src/app/shared/pipe/custom-pipe.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CONSTANT } from './skill-matrix.constant';\r\nimport { AddViewWorkforceComponent } from './workforce-deployment/add-view-workforce/add-view-workforce.component';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MomentDateModule } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\n// import { AssessessmentDetailModalComponent } from 'src/app/theme/shared/components/assessessment-detail-modal/assessessment-detail-modal.component';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'YYYY-MM-DD',\r\n  },\r\n  display: {\r\n    dateInput: 'YYYY-MM-DD',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n}\r\n@NgModule({\r\n  declarations: [SkillMatrixComponent, ActionsComponent, AssessmentsComponent, CertificatesComponent, WorkforceDeploymentComponent, AddViewWorkforceComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SkillMatrixRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    NgMultiSelectDropDownModule,\r\n    ReactiveFormsModule,\r\n    CustomPipeModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MomentDateModule\r\n  ],\r\n  providers: [\r\n    { provide: 'Constant', useValue: CONSTANT },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class SkillMatrixModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { SkillingService } from './skilling.service';\r\n\r\nimport { Workbook } from \"exceljs\";\r\nimport * as moment from 'moment';\r\nimport * as fs from \"file-saver\";\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-skill-matrix',\r\n  templateUrl: './skill-matrix.component.html',\r\n  styleUrls: ['./skill-matrix.component.scss']\r\n})\r\nexport class SkillMatrixComponent implements OnInit {\r\n  listLoader: boolean = false;\r\n  exportLoader: boolean = false;\r\n  skillMatrixDetails: any = {};\r\n  searchDet: any = {};\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  SingleCellDropdownSettings = {};\r\n  branchAccessList: any = [];\r\n  userDet: any = {};\r\n  selectedBranch: any = {};\r\n  deptList: any = [];\r\n  cellList: any = [];\r\n  constant: any = {};\r\n  filterFlag: boolean = false;\r\n  isAppliedFilter: boolean = false;\r\n  hasSkillMatrixData: boolean = false;\r\n  filterData: FormGroup;\r\n  revNo: any = [];\r\n  skillMatrixDocument: any;\r\n  filteredEmpData:any;\r\n  searchInput:any;\r\n  shiftList: any = [\r\n    { id: 1, name: 1 },\r\n    { id: 2, name: 2 },\r\n    { id: 3, name: 3 },\r\n  ];\r\n  filteredSkillMatrixTLData: any[] = [];\r\n  getSkillMatrixListForExport : any;\r\n  multiskillingPercentage :  any;\r\n  constructor(\r\n    public apiService: SkillingService,\r\n    private modalService: NgbModal,\r\n    public fb: FormBuilder,\r\n    @Inject('Constant') Constant: any) {\r\n    this.constant = Constant;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userDet = JSON.parse(localStorage.getItem('userDet'));\r\n    // console.log(this.userDet)\r\n    this.searchDet.shift = [this.shiftList[0]];\r\n    this.searchDet.branch = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n    // this.searchDet.dept = [{ id: this.userDet.dept.deptId, name: this.userDet.dept.deptName }];\r\n    // this.searchDet.cell = [{ id: this.userDet.line.id, name: this.userDet.line.name }];\r\n    this.getBranchAccessList();\r\n    this.searchDet.isDefaultWorking = true;\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.filterData = this.fb.group({\r\n      branchId: new FormControl(\"\", Validators.required),\r\n      deptId: new FormControl(\"\"),\r\n      lineIds: new FormControl(\"\")\r\n    });\r\n    // this.getSkillMatixData();\r\n  }\r\n\r\n  /* get branch access list on organization and logged in employee\r\n      @Author Jayshri Kolase\r\n     * @Date August 18, 2023\r\n   */\r\n  getBranchAccessList() {\r\n    this.apiService.getBranchAccessList('getBranchAccessSetupByEmpId/' + this.userDet.organization.orgId + \"/\" + this.userDet.empId).subscribe((res: any) => {\r\n      if (res.result) {\r\n        if (res.branchAccessList != null && res.branchAccessList.length > 0) {\r\n          /* Use For Add Screen */\r\n          this.branchAccessList = this.setArray(res.branchAccessList, 'branchId', 'branchName');\r\n        } else {\r\n          /* Use For Add Screen */\r\n          this.branchAccessList = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n        }\r\n      } else {\r\n        /* Use For Add Screen */\r\n        this.branchAccessList = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n      }\r\n      this.branchAccessList = this.sortFunction(this.branchAccessList, 'name');\r\n      // this.searchDet.branch = [this.branchAccessList[0]];\r\n      // this.onChangeBranch(this.searchDet.branch[0]);\r\n      this.getDeptList();\r\n    })\r\n  }\r\n  /* change branch on branch selection and call stage list and Workflow Config List\r\n    @Author Jayshri Kolase\r\n   * @Date August 18, 2023\r\n */\r\n  onChangeBranch(event: any) {\r\n    // console.log(event)\r\n    this.searchDet.isDefaultWorking = false;\r\n    if (event) {\r\n      this.deptList = [];\r\n      this.searchDet.dept = [];\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n      // this.skillMatrixDetails = {};\r\n      this.searchDet.branch = [{ id: event.id, name: event.name }];\r\n      this.getDeptList();\r\n      // this.getCellList();\r\n    } else {\r\n      this.deptList = [];\r\n      this.searchDet.dept = [];\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n      // this.skillMatrixDetails = {};\r\n    }\r\n  }\r\n\r\n  /* get department list on branch selection\r\n     @Author Jayshri Kolase\r\n    * @Date August 18, 2023\r\n  */\r\n  getDeptList() {\r\n    if (this.searchDet.branch != null && this.searchDet.branch.length > 0) {\r\n      this.apiService.getdepartmentlistbybranchid('getdepartmentlistbybranchid/' + this.searchDet.branch[0].id).subscribe((res: any) => {\r\n        if (res.result) {\r\n          if (res.deptList != null && res.deptList.length > 0) {\r\n            /* Use For Add Screen */\r\n            this.deptList = this.setArray(res.deptList, 'deptId', 'deptName');\r\n            this.deptList = this.sortFunction(this.deptList, 'deptName');\r\n            if (this.searchDet.isDefaultWorking) {\r\n              this.searchDet.dept = [this.deptList[0]];\r\n              this.getCellList();\r\n              // this.getSkillMatixData();\r\n            }\r\n          } else {\r\n            this.deptList = [];\r\n          }\r\n        } else {\r\n          this.deptList = [];\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /* get Cell list on branch selection\r\n    @Author Mahesh\r\n   * @Date Oct 05, 2023\r\n */\r\n  getCellList() {\r\n    var req: any = {\r\n      branchId: this.searchDet.branch[0].id\r\n    }\r\n    if (this.searchDet.dept != null && this.searchDet.dept.length > 0) {\r\n      req.deptId = this.searchDet.dept[0].id;\r\n    }\r\n    this.apiService.getCellList('apis/sm/getCellList', req).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          response.dataList = this.sortFunction(response.dataList, 'lineName');\r\n          this.cellList = this.setArray(response.dataList, 'lineId', 'lineName');\r\n          this.searchDet.cell = [this.cellList[0]];\r\n          if (!this.searchDet.filterFlag) {\r\n            this.getSkillMatixData();\r\n          }\r\n        } else {\r\n          this.cellList = [];\r\n        }\r\n      } else {\r\n        this.cellList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeCell(event: any) {\r\n    this.searchDet.isDefaultWorking = false;\r\n    // if (event) {\r\n    //   this.getSkillMatixData();\r\n    // } else {\r\n    //   // this.deptList = [];\r\n    // this.skillMatrixDetails = {};\r\n    // }\r\n  }\r\n  onChangeDept(event: any) {\r\n    this.searchDet.isDefaultWorking = false;\r\n    if (event) {\r\n      this.getCellList();\r\n      // this.getSkillMatixData();\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n      // this.skillMatrixDetails = {};\r\n    } else {\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n      this.searchDet.dept = [];\r\n      // this.skillMatrixDetails = {};\r\n    }\r\n  }\r\n\r\n  isObjectEmpty(objectName) {\r\n    return Object.keys(objectName).length == 0\r\n  }\r\n \r\n\r\n  getSkillMatixData() {\r\n    this.skillMatrixDetails = {};\r\n    this.skillMatrixDocument = {};\r\n    this.filteredSkillMatrixTLData = [];\r\n    this.listLoader = true;\r\n    let cellObj: any;\r\n    if (this.searchDet.cell != null && this.searchDet.cell.length > 0) {\r\n      cellObj = this.cellList.filter(x => x.id == this.searchDet.cell[0].id);\r\n    }\r\n    let req: any = {\r\n      \"orgId\": this.userDet.organization.orgId,\r\n      // \"branchId\": this.searchDet.branch[0].id,\r\n      // \"deptId\": this.searchDet.dept[0].id\r\n    }\r\n    if (this.searchDet.shift != null && this.searchDet.shift.length > 0) {\r\n      req.shiftNo = this.searchDet.shift[0].id;\r\n    }\r\n    if (this.searchDet.branch != null && this.searchDet.branch.length > 0) {\r\n      req.branchId = this.searchDet.branch[0].id;\r\n    }\r\n    if (this.searchDet.dept != null && this.searchDet.dept.length > 0) {\r\n      req.deptId = this.searchDet.dept[0].id;\r\n    }\r\n    if (this.searchDet.cell != null && this.searchDet.cell.length > 0) {\r\n      req.lineId = this.searchDet.cell[0].id;\r\n    }\r\n    this.getSkillMatrixListForExport = {};\r\n    this.hasSkillMatrixData = false;\r\n    this.multiskillingPercentage = 0;\r\n    this.apiService.getSkillMatrixData('apis/sm/getSkillMatrixList', req).subscribe((res: any) => {\r\n      // console.log(res);\r\n      this.listLoader = false;\r\n      if (res.result) {\r\n        this.getSkillMatrixListForExport = res.data.skillMatrixDetails ?? {};\r\n        this.hasSkillMatrixData = res.data.skillMatrixDetails != null ? true : false;\r\n\r\n        if (res.data.hasOwnProperty('levelSummary') && res.data.levelSummary != null && res.data.levelSummary.length > 0) {\r\n          for (let count = 0; count < res.data.levelSummary.length; count++) {\r\n            res.data.levelSummary[count].requiredCount = (res.data.levelSummary[count].requiredCount) ? Math.round(res.data.levelSummary[count].requiredCount) : 0;\r\n            res.data.levelSummary[count].actualCount = (res.data.levelSummary[count].actualCount) ? Math.round(res.data.levelSummary[count].actualCount) : 0;\r\n          }\r\n          res.data.levelSummary = this.sortFunction(res.data.levelSummary, 'levelId');\r\n        }\r\n        this.skillMatrixDetails = res.data;\r\n        if (res.data.tableData != null && res.data.tableData.length > 0) {\r\n          // First, initialize the array if it doesn't exist\r\n          // if (!this.skillMatrixDetails.tableEmpData) {\r\n          this.skillMatrixDetails.tableEmpData = [];\r\n          this.filteredEmpData = [];\r\n          // }\r\n\r\n\r\n          for (let i = 0; i < res.data.tableData.length; i++) {\r\n            if (res.data.tableData[i].empLevel != 'TL') {\r\n              this.skillMatrixDetails.tableEmpData.push(res.data.tableData[i]);\r\n             this.multiskillingPercentage += res.data.tableData[i].skillingPer; \r\n            }\r\n          }\r\n\r\n          this.multiskillingPercentage = Math.round(\r\n            this.multiskillingPercentage / this.skillMatrixDetails.tableEmpData.length\r\n          );\r\n          \r\n\r\n          // for (let i = 0; i < res.data.tableData.length; i++) {\r\n          //   if (res.data.tableData[i].empLevel == 'TL') {\r\n          //     this.skillMatrixDetails.tableEmpData.push(res.data.tableData[i]);\r\n          //   }\r\n          // }\r\n          this.filteredEmpData = this.skillMatrixDetails.tableEmpData;\r\n        }\r\n\r\n        //     Aniket :- Store document value in skillMatrixDocument\r\n        this.skillMatrixDocument = res.data.documentName\r\n      } else {\r\n        this.skillMatrixDetails = {};\r\n      }\r\n\r\n      this.filteredSkillMatrixTLData = this.skillMatrixDetails.tableData.filter(row => row.empLevel == 'TL');\r\n    }, (error: any) => {\r\n      this.listLoader = false;\r\n    })\r\n  }\r\n\r\n  getCombinedHeader(key) {\r\n    const empLevelColumn = this.skillMatrixDetails.columns.find(column => column.field == key);\r\n    return `${empLevelColumn.heading}`;\r\n  }\r\n  getHeadingWithLevel(obj) {\r\n    return ` ${obj.heading}`;\r\n  }\r\n  getWorkStationLength() {\r\n    let length = 0;\r\n    if (!this.isObjectEmpty(this.skillMatrixDetails) && this.skillMatrixDetails.columns != null && this.skillMatrixDetails.columns.length != 0) {\r\n      for (let index = 0; index < this.skillMatrixDetails.columns.length; index++) {\r\n        if (this.skillMatrixDetails.columns[index].field != 'empId' && this.skillMatrixDetails.columns[index].field != 'empName' && this.skillMatrixDetails.columns[index].field != 'gender' && this.skillMatrixDetails.columns[index].field != 'experience' && this.skillMatrixDetails.columns[index].field != 'empLevel') {\r\n          length++;\r\n        }\r\n      }\r\n    }\r\n    return length;\r\n  }\r\n\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n  isChecked(row: any, field: string) {\r\n    let obj: any = {};\r\n    for (let item in row) {\r\n      if (field == item) {\r\n        // Condition 1\r\n        if (!this.isObjectEmpty(row) && row[item].hasOwnProperty(\"currentSkillLevelId\")) {\r\n          if (row[item].currentSkillLevelId == 1) {\r\n            return { 'status': this.constant.EQUAL, level: row[item].currentSkillLevel };\r\n          } else if (row[item].currentSkillLevelId == 2) {\r\n            return { 'status': this.constant.ELIGIBLE, level: row[item].currentSkillLevel };\r\n          } else if (row[item].currentSkillLevelId == 3) {\r\n            return { 'status': this.constant.NOT_ELIGIBLE, level: row[item].currentSkillLevel };\r\n          } else if (row[item].currentSkillLevelId == 4) {\r\n            return { 'status': this.constant.NOT_ELIGIBLE, level: row[item].currentSkillLevel };\r\n          }\r\n          else {\r\n            return { 'status': this.constant.OTHER, level: ' ' };\r\n          }\r\n        } else {\r\n          return { 'status': this.constant.OTHER, level: ' ' };\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n  getSkillLevelClass(skillLevel: string): string {\r\n    switch (skillLevel) {\r\n      case 'L1':\r\n        return 'red-background';\r\n      case 'L2':\r\n        return 'gray-background';\r\n      case 'L3':\r\n        return 'green-background';\r\n      case 'L4':\r\n        return 'green-background';\r\n      default:\r\n        return 'white-background';\r\n    }\r\n  }\r\n\r\n  sheetColumns: any = [];\r\n  exportSkillMatrix() {\r\n    this.exportLoader = true;\r\n    let headers: any = [];\r\n    let workbook = new Workbook();\r\n    let worksheet = workbook.addWorksheet(\"Skill Matrix\", {});\r\n    this.sheetColumns = [\r\n      { header: '', key: 'sr', width: 30 },\r\n      { header: '', key: 'empName', width: 30 },\r\n      { header: '', key: 'empName', width: 30 },\r\n      // { header: '', key: 'experience', width: 30 },\r\n      // { header: '', key: 'empLevel', width: 30 },\r\n      { header: 'MACHINE INDEX RATING', key: 'MACHINE_INDEX_RATING', width: 30 },\r\n    ]\r\n    for (let i = 0; i < this.skillMatrixDetails.columns.length; i++) {\r\n      if (this.skillMatrixDetails.columns[i].field != 'empId' && this.skillMatrixDetails.columns[i].field != 'empName' && this.skillMatrixDetails.columns[i].field != 'gender' && this.skillMatrixDetails.columns[i].field != 'experience' && this.skillMatrixDetails.columns[i].field != 'empLevel') {\r\n        this.sheetColumns.push(\r\n          { header: this.skillMatrixDetails.columns[i].machineIndex, key: this.skillMatrixDetails.columns[i].machineIndex, width: 30 },\r\n        )\r\n      }\r\n    };\r\n    worksheet.columns = this.sheetColumns;\r\n    this.sheetColumns = [];\r\n    worksheet.mergeCells('A1', 'C1');\r\n\r\n    this.sheetColumns = [\r\n      { header: '', key: 'sr', width: 30 },\r\n      { header: '', key: 'empName', width: 30 },\r\n      { header: '', key: 'empName', width: 30 },\r\n      // { header: '', key: 'experience', width: 30 },\r\n      // { header: '', key: 'empLevel', width: 30 },\r\n      { header: 'MIN. SKILL LEVEL REQ.', key: 'MIN_SKILL_LEVEL_REQ', width: 30 },\r\n    ]\r\n    for (let i = 0; i < this.skillMatrixDetails.columns.length; i++) {\r\n      if (this.skillMatrixDetails.columns[i].field != 'empId' && this.skillMatrixDetails.columns[i].field != 'empName' && this.skillMatrixDetails.columns[i].field != 'gender' && this.skillMatrixDetails.columns[i].field != 'experience' && this.skillMatrixDetails.columns[i].field != 'empLevel') {\r\n        this.sheetColumns.push(\r\n          { header: this.skillMatrixDetails.columns[i].levelName, key: this.skillMatrixDetails.columns[i].levelName, width: 30 },\r\n        )\r\n      }\r\n    };\r\n    worksheet.columns = this.sheetColumns;\r\n    workbook.xlsx.writeBuffer().then((data) => {\r\n      let blob = new Blob([data], { type: 'xlsx' });\r\n      fs.saveAs(blob, 'Skill_Matrix.xlsx');\r\n    })\r\n    this.exportLoader = false;\r\n  }\r\n\r\n  // exportReportOld() {\r\n\r\n  //   let exportData: any = [];\r\n  //   let machineIndexColCount = this.skillMatrixDetails.columns.filter(x => x[\"machineIndex\"]).length;\r\n  //   let columnCount = 5 + machineIndexColCount;\r\n  //   if (this.skillMatrixDocument != null && this.skillMatrixDocument != undefined) {\r\n  //     var date = new Date(this.skillMatrixDocument.currentDate);\r\n  //     var formattedDate = formatDate(date);\r\n  //   }\r\n  //   function formatDate(date) {\r\n  //     var options = { day: '2-digit', month: 'short', year: 'numeric' };\r\n  //     return date.toLocaleDateString('en-US', options);\r\n  //   }\r\n  //   //SECTION 1\r\n  //   for (let i = 0; i < 3; i++) {\r\n  //     let row = {};\r\n  //     // Aniket :- Show doc-no,rev-date,rev-no\r\n  //     if (i === 0) {\r\n  //       if (this.skillMatrixDocument !== undefined && this.skillMatrixDocument !== null) {\r\n  //         row[\"c0\"] = \"Doc No:-\" + this.skillMatrixDocument.docName;\r\n  //       } else {\r\n  //         row[\"c0\"] = \"Doc No:-\";\r\n  //       }\r\n  //     } else if (i === 1) {\r\n  //       if (formattedDate !== undefined && formattedDate !== null) {\r\n  //         row[\"c0\"] = \"Rev Date:-\" + formattedDate;\r\n  //       } else {\r\n  //         row[\"c0\"] = \"Rev Date:-\";\r\n  //       }\r\n  //     } else if (i === 2) {\r\n  //       if (this.revNo !== undefined && this.revNo !== null && this.revNo != '') {\r\n  //         row[\"c0\"] = \"Rev No:- \" + this.revNo;\r\n  //       } else {\r\n  //         row[\"c0\"] = \"Rev No:- \";\r\n  //       }\r\n  //     }\r\n  //     if (i == 0) {\r\n  //       row[\"c\" + 3] = \"MACHINE INDEX RATING\";\r\n  //     } else if (i == 1) {\r\n  //       row[\"c\" + 3] = \"MIN. SKILL LEVEL REQ.\";\r\n  //     } else if (i == 2) {\r\n  //       row[\"c\" + 3] = \"REQUIRED NUMBER TRAINED\";\r\n  //     }\r\n\r\n  //     if (i == 0) {\r\n  //       for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n  //         row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].machineIndex;\r\n  //       }\r\n  //       row[\"c\" + (machineIndexColCount + 5)] = \"NO. OF SHIFTS\";\r\n  //       columnCount++;\r\n  //       row[\"c\" + (machineIndexColCount + 6)] = this.searchDet.shift[0].id;\r\n  //       columnCount++;\r\n  //     }\r\n  //     else if (i == 1) {\r\n  //       for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n  //         row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].levelName;\r\n  //       }\r\n  //     }\r\n  //     else if (i == 2) {\r\n  //       for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n  //         row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].requiredWorkforce;\r\n  //       }\r\n  //       row[\"c\" + (machineIndexColCount + 5)] = \"SKILL LEVEL\";\r\n  //       columnCount++;\r\n  //       row[\"c\" + (machineIndexColCount + 6)] = \"MULTI SKILL %\";\r\n  //       columnCount++;\r\n  //       row[\"c\" + (machineIndexColCount + 7)] = \"MARKS\";\r\n  //       columnCount++;\r\n  //     }\r\n  //     console.log(row)\r\n  //     exportData.push(row);\r\n  //   }\r\n\r\n  //   let tempWorkstationList = [];\r\n  //   //SECTION 2\r\n  //   let row = {};\r\n  //   row[\"c\" + 0] = \"Sr No\";\r\n  //   row[\"c\" + 1] = \"Emp Id\";\r\n  //   row[\"c\" + 2] = \"Name\";\r\n  //   row[\"c\" + 3] = \"Exp\";\r\n  //   row[\"c\" + 4] = \"Employee Level\";\r\n\r\n  //   for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n  //     row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].field;\r\n  //     tempWorkstationList.push(this.skillMatrixDetails.columns[j].field);\r\n  //   }\r\n  //   exportData.push(row);\r\n\r\n  //   let sheetColWidths = [];\r\n  //   sheetColWidths.push(10);\r\n  //   sheetColWidths.push(10);\r\n  //   sheetColWidths.push(20);\r\n  //   sheetColWidths.push(10);\r\n  //   sheetColWidths.push(20);\r\n  //   let checkedIndexes: any = [];\r\n  //   //SECTION 3\r\n  //   let isNotTE = 0;\r\n  //   for (let i = 0; i < this.skillMatrixDetails.tableEmpData.length; i++) {\r\n  //     if (this.skillMatrixDetails.tableEmpData[i].empLevel != 'TL') {\r\n  //       let row = {};\r\n  //       row[\"c\" + 0] = i + 1;\r\n  //       row[\"c\" + 1] = this.skillMatrixDetails.tableEmpData[i].empId;\r\n  //       row[\"c\" + 2] = this.skillMatrixDetails.tableEmpData[i].empName;\r\n  //       row[\"c\" + 3] = this.skillMatrixDetails.tableEmpData[i].experience;\r\n  //       row[\"c\" + 4] = this.skillMatrixDetails.tableEmpData[i].empLevel;\r\n\r\n\r\n  //       for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n  //         sheetColWidths.push(20);\r\n  //         for (var key in this.skillMatrixDetails.tableEmpData[i]) {\r\n  //           if (key == tempWorkstationList[j - 5]) {\r\n  //             let checked = this.isChecked(this.skillMatrixDetails.tableEmpData[i], key);\r\n  //             row[\"c\" + j] = checked.level;\r\n  //             if (checked.status == this.constant.EQUAL) {\r\n  //               checkedIndexes.push({\r\n  //                 row: i + 5,\r\n  //                 col: j + 1\r\n  //               });\r\n  //             }\r\n  //             break;\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //       row[\"c\" + (machineIndexColCount + 5)] = this.skillMatrixDetails.tableEmpData[i].skillLevel;\r\n  //       row[\"c\" + (machineIndexColCount + 6)] = this.skillMatrixDetails.tableEmpData[i].skillingPer + '%';\r\n  //       row[\"c\" + (machineIndexColCount + 7)] = this.skillMatrixDetails.tableEmpData[i].marks;\r\n  //       exportData.push(row);\r\n  //       isNotTE++;\r\n  //     }\r\n\r\n  //   }\r\n  //   // console.log(exportData)\r\n  //   exportData.push({});\r\n\r\n    // if (this.skillMatrixDetails.workstationLvlCount != null) {\r\n    //   let row = {};\r\n    //   row[\"c\" + 0] = 'Actual No Trained';\r\n    //   row[\"c\" + 1] = '';\r\n    //   row[\"c\" + 2] = '';\r\n    //   row[\"c\" + 3] = '';\r\n    //   row[\"c\" + 4] = '';\r\n    //   let index = 5\r\n    //   for (let j = 0; j < this.skillMatrixDetails.workstationLvlCount.length; j++) {\r\n    //     row[\"c\" + (index)] = this.skillMatrixDetails.workstationLvlCount[j].totalCount;\r\n    //     index++;\r\n    //   }\r\n    //   exportData.push(row);\r\n    // }\r\n    // if (this.skillMatrixDetails.tableEmpData != null) {\r\n    //   let row = {};\r\n    //   row[\"c\" + 0] = 'Team Leader Skill Level';\r\n    //   row[\"c\" + 1] = '';\r\n    //   row[\"c\" + 2] = '';\r\n    //   row[\"c\" + 3] = '';\r\n    //   row[\"c\" + 4] = '';\r\n    //   let index = 5\r\n    //   for (let j = 0; j < this.skillMatrixDetails.workstationLvlCount.length + 5; j++) {\r\n    //     row[\"c\" + (index)] = '';\r\n    //     index++;\r\n    //   }\r\n    //   exportData.push(row);\r\n    // }\r\n    // // console.log(exportData)\r\n    // exportData.push({});\r\n    // for (let i = 0; i < this.skillMatrixDetails.tableEmpData.length; i++) {\r\n    //   if (this.skillMatrixDetails.tableEmpData[i].empLevel === 'TL') {\r\n    //     let row = {};\r\n    //     row[\"c\" + 0] = i + 1;\r\n    //     row[\"c\" + 1] = this.skillMatrixDetails.tableEmpData[i].empId;\r\n    //     row[\"c\" + 2] = this.skillMatrixDetails.tableEmpData[i].empName;\r\n    //     row[\"c\" + 3] = this.skillMatrixDetails.tableEmpData[i].experience;\r\n    //     row[\"c\" + 4] = this.skillMatrixDetails.tableEmpData[i].empLevel;\r\n    //     for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n    //       sheetColWidths.push(20);\r\n    //       for (var key in this.skillMatrixDetails.tableEmpData[i]) {\r\n    //         if (key == tempWorkstationList[j - 5]) {\r\n    //           let checked = this.isChecked(this.skillMatrixDetails.tableEmpData[i], key);\r\n    //           row[\"c\" + j] = checked.level;\r\n    //           if (checked.status == this.constant.EQUAL) {\r\n    //             checkedIndexes.push({\r\n    //               row: i + 5,\r\n    //               col: j + 1\r\n    //             });\r\n    //           }\r\n    //           break;\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //     row[\"c\" + (machineIndexColCount + 5)] = this.skillMatrixDetails.tableEmpData[i].skillLevel;\r\n    //     row[\"c\" + (machineIndexColCount + 6)] = this.skillMatrixDetails.tableEmpData[i].skillingPer + '%';\r\n    //     row[\"c\" + (machineIndexColCount + 7)] = this.skillMatrixDetails.tableEmpData[i].marks;\r\n    //     exportData.push(row);\r\n    //   }\r\n    // }\r\n    // // console.log(exportData)\r\n    // exportData.push({});\r\n\r\n\r\n  //   //SECTION 6 - Bottom small level tables - Data\r\n  //   row = {};\r\n  //   row[\"c\" + 0] = \"Skill Level\";\r\n  //   row[\"c\" + 1] = \"REQD.\";\r\n  //   row[\"c\" + 2] = \"ACT.\";\r\n  //   row[\"c\" + 3] = \"GAP\";\r\n  //   exportData.push(row);\r\n\r\n  //   for (let i = 0; i < this.skillMatrixDetails.levelSummary.length; i++) {\r\n  //     if (this.skillMatrixDetails.levelSummary[i].levelName != 'L4') {\r\n  //       row = {};\r\n  //       row[\"c\" + 0] = \"L\" + (i + 1);\r\n  //       row[\"c\" + 1] = this.skillMatrixDetails.levelSummary[i].requiredCount;\r\n  //       row[\"c\" + 2] = this.skillMatrixDetails.levelSummary[i].actualCount;\r\n  //       if ((this.skillMatrixDetails.levelSummary[i].requiredCount && this.skillMatrixDetails.levelSummary[i].requiredCount > 0)\r\n  //         && (this.skillMatrixDetails.levelSummary[i].requiredCount > this.skillMatrixDetails.levelSummary[i].actualCount)) {\r\n  //         row[\"c\" + 3] = this.skillMatrixDetails.levelSummary[i].requiredCount - this.skillMatrixDetails.levelSummary[i].actualCount;\r\n  //       } else {\r\n  //         row[\"c\" + 3] = 0;\r\n  //       }\r\n  //       exportData.push(row);\r\n  //     }\r\n  //   }\r\n\r\n  //   // console.log(exportData);\r\n\r\n  //   let headers: any = [];\r\n  //   let workbook = new Workbook();\r\n  //   let worksheet = workbook.addWorksheet(\"Skill Matrix\", {});\r\n\r\n  //   for (let index = 0; index < columnCount; index++) {\r\n  //     headers.push({\r\n  //       key: [\"c\" + index], width: sheetColWidths[index]\r\n  //     });\r\n  //   }\r\n\r\n  //   worksheet.columns = headers;\r\n\r\n  //   var rows = [];\r\n  //   var rowslist: any = {};\r\n  //   Object.assign({}, rowslist);\r\n\r\n  //   exportData.forEach((element) => {\r\n  //     rowslist = {};\r\n  //     for (var x in element) {\r\n  //       rowslist[x] = element[x]\r\n  //     }\r\n  //     rows.push(rowslist);\r\n  //   });\r\n\r\n  //   worksheet.addRows(rows, \"n\");\r\n\r\n  //   //Merging cells for MACHINE INDEX RATING, MIN.SKILL LEVL REQ. & REQUIRED NUMBER TRAINED cells\r\n  //   for (let rowNumber = 1; rowNumber < 4; rowNumber++) {\r\n  //     worksheet.mergeCells(rowNumber, 4, rowNumber, 5);\r\n  //   }\r\n\r\n  //   /* worksheet.mergeCells(1, 51, 2, 51); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n  //    const areCellsMerged = worksheet.getCell(1, 51).isMerged || worksheet.getCell(1, 52).isMerged;\r\n \r\n  //    if (!areCellsMerged) {\r\n  //      // Merge cells for rows 1 and 2 in columns 51 and 52 (\"c51\" and \"c52\")\r\n  //      worksheet.mergeCells(1, 52, 1, 53);\r\n  //      worksheet.mergeCells(2, 53, 2, 53);\r\n  //    }\r\n  //    worksheet.mergeCells(3, 51, 4, 51); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n  //    worksheet.mergeCells(3, 52, 4, 52); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n  //    worksheet.mergeCells(3, 53, 4, 53); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n  //    //Setting bold font to all cells first 4 rows*/\r\n\r\n\r\n  //   // console.log(isNotTE)\r\n  //   worksheet.mergeCells((isNotTE + 6), 1, (isNotTE + 6), 5);\r\n  //   worksheet.mergeCells((isNotTE + 7), 1, (isNotTE + 7), (this.skillMatrixDetails.workstationLvlCount.length + 5 + 3));\r\n  //   for (let rowNumber = 1; rowNumber < 5; rowNumber++) {\r\n  //     let row = worksheet.getRow(rowNumber);\r\n  //     row.font = {\r\n  //       bold: true\r\n  //     }\r\n  //   }\r\n\r\n  //   for (let rowNumber = 1; rowNumber < 4; rowNumber++) {\r\n  //     let row = worksheet.getRow(rowNumber);\r\n\r\n  //     // Loop through all columns starting from F (index 6 in Excel)\r\n  //     for (let colNumber = 6; colNumber <= row.cellCount; colNumber++) {\r\n  //       // Get the current cell\r\n  //       let cell = row.getCell(colNumber);\r\n\r\n  //       // Apply center alignment if the column is F or beyond\r\n  //       cell.alignment = {\r\n  //         vertical: 'middle',\r\n  //         horizontal: 'center'\r\n  //       };\r\n  //     }\r\n  //   }\r\n  //   //Setting bold font to headers of bottom level table\r\n  //   let lvlTblRowIndex = 3 + 1 + 2 + this.skillMatrixDetails.tableEmpData.length;\r\n  //   {\r\n  //     let row = worksheet.getRow(lvlTblRowIndex);\r\n  //     row.font = {\r\n  //       bold: true\r\n  //     }\r\n  //   }\r\n\r\n  //   //Setting borders to cells from tableData which shows level(L0,L1,L2) in RED & GREEN color\r\n  //   for (let i = 5; i < this.skillMatrixDetails.tableEmpData.length + 5; i++) {\r\n  //     let row = worksheet.getRow(i);\r\n  //     row.eachCell((cell, colNumber) => {\r\n  //       if (colNumber > 5) {\r\n  //         cell.border = {\r\n  //           top: { style: 'double', color: { argb: 'f6f6f6' } },\r\n  //           left: { style: 'double', color: { argb: 'f6f6f6' } },\r\n  //           bottom: { style: 'double', color: { argb: 'f6f6f6' } },\r\n  //           right: { style: 'double', color: { argb: 'f6f6f6' } }\r\n  //         };\r\n  //         cell.alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       }\r\n  //     });\r\n  //   }\r\n\r\n  //   //Setting text center to cells of bottom lelve table\r\n  //   lvlTblRowIndex = 3 + 1 + 2 + this.skillMatrixDetails.tableEmpData.length + 4;\r\n  //   // console.log('lvlTblRowIndex:', lvlTblRowIndex);\r\n  //   // console.log('Total Rows:', worksheet.rowCount);\r\n\r\n  //   for (let i = 0; i < this.skillMatrixDetails.levelSummary.length; i++) {\r\n  //     let row = worksheet.getRow(lvlTblRowIndex + i + 1);\r\n  //     row.alignment = {\r\n  //       horizontal: 'center'\r\n  //     }\r\n  //     if (this.skillMatrixDetails.levelSummary[i].levelId == 1) {\r\n  //       //RED color to L1 cell\r\n  //       row.getCell(1).fill = {\r\n  //         type: 'pattern',\r\n  //         pattern: 'solid',\r\n  //         fgColor: { argb: 'FF0000' }\r\n  //       }\r\n  //     } else if (this.skillMatrixDetails.levelSummary[i].levelId == 2) {\r\n  //       //GREEN color to L2 cell\r\n  //       row.getCell(1).fill = {\r\n  //         type: 'pattern',\r\n  //         pattern: 'solid',\r\n  //         fgColor: { argb: 'D9D9D9' }\r\n  //       }\r\n  //     } else if (this.skillMatrixDetails.levelSummary[i].levelId == 3) {\r\n  //       //YELLOW color to L3 cell\r\n  //       row.getCell(1).fill = {\r\n  //         type: 'pattern',\r\n  //         pattern: 'solid',\r\n  //         fgColor: { argb: '99cd3a' }\r\n  //       }\r\n  //     }\r\n  //     /* else if (this.skillMatrixDetails.levelSummary[i].levelId == 4) {\r\n  //       //YELLOW color to L4 cell\r\n  //       row.getCell(1).fill = {\r\n  //         type: 'pattern',\r\n  //         pattern: 'solid',\r\n  //         fgColor: { argb: '99cd3a' }\r\n  //       }\r\n  //     } */\r\n  //   }\r\n\r\n  //   //Highlighting EQUAL, NOT EQUAL Cells with RED and GREEN color\r\n  //   let nonTlEmployees = [];\r\n  //   let tlEmployees = [];\r\n\r\n  //   for (let i = 0; i < this.skillMatrixDetails.tableEmpData.length; i++) {\r\n  //     if (this.skillMatrixDetails.tableEmpData[i].empLevel !== 'TL') {\r\n  //       nonTlEmployees.push(this.skillMatrixDetails.tableEmpData[i]);\r\n  //     } else {\r\n  //       tlEmployees.push(this.skillMatrixDetails.tableEmpData[i]);\r\n  //     }\r\n  //   }\r\n  //   for (let rowNumber = 5; rowNumber < nonTlEmployees.length + 5; rowNumber++) {\r\n  //     let row = worksheet.getRow(rowNumber);\r\n  //     for (let colNumber = 6; colNumber < machineIndexColCount + 5 + 4; colNumber++) {\r\n  //       let isChecked = false;\r\n  //       checkedIndexes.forEach(element => {\r\n  //         if (element.row === rowNumber && element.col === colNumber) {\r\n  //           isChecked = true;\r\n  //         }\r\n  //       });\r\n\r\n  //       // Get the value of the current cell\r\n  //       let cellValue = row.getCell(colNumber).value;\r\n\r\n  //       // Check if the cell value is \"L1\", \"L2\", or \"L3\"\r\n  //       if (cellValue === \"L1\") {\r\n  //         // Set the fill color for \"L1\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: 'FF0000' } // Yellow\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L2\") {\r\n  //         // Set the fill color for \"L2\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: 'D9D9D9' } // Orange\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L3\") {\r\n  //         // Set the fill color for \"L3\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: '99cd3a' } // Red\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       }\r\n  //       else if (cellValue === \"L4\") {\r\n  //         // Set the fill color for \"L3\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: '99cd3a' } // Red\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else {\r\n  //         // Handle other cases if needed\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       }\r\n\r\n  //     }\r\n  //   }\r\n  //   for (let rowNumber = 5 + nonTlEmployees.length; rowNumber < this.skillMatrixDetails.tableEmpData.length + 5 + 4; rowNumber++) {\r\n  //     let row = worksheet.getRow(rowNumber);\r\n  //     for (let colNumber = 6; colNumber < machineIndexColCount + 5 + 4; colNumber++) {\r\n  //       let isChecked = false;\r\n  //       checkedIndexes.forEach(element => {\r\n  //         if (element.row === rowNumber && element.col === colNumber) {\r\n  //           isChecked = true;\r\n  //         }\r\n  //       });\r\n\r\n  //       // Get the value of the current cell\r\n  //       let cellValue = row.getCell(colNumber).value;\r\n\r\n  //       // Check if the cell value is \"L1\", \"L2\", or \"L3\"\r\n  //       if (cellValue === \"L1\") {\r\n  //         // Set the fill color for \"L1\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: 'FF0000' } // Yellow\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L2\") {\r\n  //         // Set the fill color for \"L2\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: 'D9D9D9' } // Orange\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L3\") {\r\n  //         // Set the fill color for \"L3\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: '99cd3a' } // Red\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       }\r\n  //       else if (cellValue === \"L4\") {\r\n  //         // Set the fill color for \"L3\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: '99cd3a' } // Red\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else {\r\n  //         // Handle other cases if needed\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       }\r\n\r\n  //     }\r\n  //   }\r\n  //   for (let rowNumber = 5; rowNumber < this.skillMatrixDetails.workstationLvlCount.length + 5; rowNumber++) {\r\n  //     let row = worksheet.getRow(rowNumber);\r\n  //     for (let colNumber = 6; colNumber < machineIndexColCount + 5 + 1 + 1; colNumber++) {\r\n  //       let isChecked = false;\r\n  //       checkedIndexes.forEach(element => {\r\n  //         if (element.row === rowNumber && element.col === colNumber) {\r\n  //           isChecked = true;\r\n  //         }\r\n  //       });\r\n\r\n  //       // Get the value of the current cell\r\n  //       let cellValue = row.getCell(colNumber).value;\r\n\r\n  //       // Check if the cell value is \"L1\", \"L2\", or \"L3\"\r\n  //       if (cellValue === \"L1\") {\r\n  //         // Set the fill color for \"L1\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: 'FF0000' } // Yellow\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L2\") {\r\n  //         // Set the fill color for \"L2\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: 'D9D9D9' } // Orange\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L3\") {\r\n  //         // Set the fill color for \"L3\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: '99cd3a' } // Red\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else if (cellValue === \"L4\") {\r\n  //         // Set the fill color for \"L3\"\r\n  //         row.getCell(colNumber).fill = {\r\n  //           type: 'pattern',\r\n  //           pattern: 'solid',\r\n  //           fgColor: { argb: '99cd3a' } // Red\r\n  //         };\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       } else {\r\n  //         // Handle other cases if needed\r\n  //         row.getCell(colNumber).alignment = {\r\n  //           vertical: 'middle',\r\n  //           horizontal: 'center'\r\n  //         };\r\n  //       }\r\n\r\n  //     }\r\n  //   }\r\n  //   for (let rowNumber = 1; rowNumber < 4; rowNumber++) {\r\n  //     worksheet.mergeCells(rowNumber, 1, rowNumber, 3);\r\n  //   }\r\n  //   workbook.xlsx.writeBuffer().then((data) => {\r\n  //     var excelName = \"Skill Matrix\";\r\n  //     let blob = new Blob([data], { type: \"xlsx\" });\r\n  //     fs.saveAs(blob, excelName + \".xlsx\");\r\n  //   });\r\n\r\n  // }\r\n  exportReport() {\r\n    let exportData: any = [];\r\n    let titleSheet: string ='';\r\n    let machineIndexColCount = this.skillMatrixDetails.columns.filter(x => x[\"machineIndex\"]).length;\r\n    let columnCount = 5 + machineIndexColCount;\r\n    if (this.skillMatrixDocument != null && this.skillMatrixDocument != undefined) {\r\n      var date = new Date(this.skillMatrixDocument.currentDate);\r\n      var formattedDate = formatDate(date);\r\n    }\r\n    function formatDate(date) {\r\n      var options = { day: '2-digit', month: 'short', year: 'numeric' };\r\n      return date.toLocaleDateString('en-US', options);\r\n    }\r\n\r\n    if (this.hasSkillMatrixData) {\r\n      let titleRow = {};\r\n      titleRow[\"c0\"] = \"Cell Name\" +\":-\"+ this.getSkillMatrixListForExport.lineName ;\r\n      exportData.push(titleRow);\r\n  }\r\n\r\n\r\n    //SECTION 1\r\n    for (let i = 0; i < 3; i++) {\r\n      let row = {};\r\n      // Aniket :- Show doc-no,rev-date,rev-no\r\n      if (i === 0) {\r\n        if (this.skillMatrixDocument !== undefined && this.skillMatrixDocument !== null) {\r\n          row[\"c0\"] = \"Doc No:-\" + this.skillMatrixDocument.docName;\r\n        } else {\r\n          row[\"c0\"] = \"Doc No:-\";\r\n        }\r\n      } else if (i === 1) {\r\n        if (formattedDate !== undefined && formattedDate !== null) {\r\n          row[\"c0\"] = \"Rev Date:-\" + formattedDate;\r\n        } else {\r\n          row[\"c0\"] = \"Rev Date:-\";\r\n        }\r\n      } else if (i === 2) {\r\n        if (this.revNo !== undefined && this.revNo !== null && this.revNo != '') {\r\n          row[\"c0\"] = \"Rev No:- \" + this.revNo;\r\n        } else {\r\n          row[\"c0\"] = \"Rev No:- \";\r\n        }\r\n      }\r\n      if (i == 0) {\r\n        row[\"c\" + 3] = \"MACHINE INDEX RATING\";\r\n      } else if (i == 1) {\r\n        row[\"c\" + 3] = \"MIN. SKILL LEVEL REQ.\";\r\n      } else if (i == 2) {\r\n        row[\"c\" + 3] = \"REQUIRED NUMBER TRAINED\";\r\n      }\r\n\r\n      if (i == 0) {\r\n        for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n          row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].machineIndex;\r\n        }\r\n        row[\"c\" + (machineIndexColCount + 5)] = \"NO. OF SHIFTS\";\r\n        columnCount++;\r\n        row[\"c\" + (machineIndexColCount + 6)] = this.searchDet.shift[0].id;\r\n        columnCount++;\r\n      }\r\n      else if (i == 1) {\r\n        for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n          row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].levelName;\r\n        }\r\n      }\r\n      else if (i == 2) {\r\n        for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n          row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].requiredWorkforce;\r\n        }\r\n        row[\"c\" + (machineIndexColCount + 5)] = \"SKILL LEVEL\";\r\n        columnCount++;\r\n        row[\"c\" + (machineIndexColCount + 6)] = \"MULTI SKILL %\";\r\n        columnCount++;\r\n        row[\"c\" + (machineIndexColCount + 7)] = \"MARKS\";\r\n        columnCount++;\r\n      }\r\n      console.log(row)\r\n      exportData.push(row);\r\n    }\r\n    let tempWorkstationList = [];\r\n    //SECTION 2\r\n    let row = {};\r\n    row[\"c\" + 0] = \"Sr No\";\r\n    row[\"c\" + 1] = \"Emp Id\";\r\n    row[\"c\" + 2] = \"Name\";\r\n    row[\"c\" + 3] = \"Exp\";\r\n    row[\"c\" + 4] = \"Employee Level\";\r\n\r\n    for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n      row[\"c\" + (j)] = this.skillMatrixDetails.columns[j].field;\r\n      tempWorkstationList.push(this.skillMatrixDetails.columns[j].field);\r\n    }\r\n    exportData.push(row);\r\n\r\n    let sheetColWidths = [];\r\n    sheetColWidths.push(10);\r\n    sheetColWidths.push(10);\r\n    sheetColWidths.push(20);\r\n    sheetColWidths.push(10);\r\n    sheetColWidths.push(20);\r\n    let checkedIndexes: any = [];\r\n    //SECTION 3\r\n    let isNotTE = 0;\r\n    for (let i = 0; i < this.skillMatrixDetails.tableEmpData.length; i++) {\r\n      if (this.skillMatrixDetails.tableEmpData[i].empLevel != 'TL') {\r\n        let row = {};\r\n        row[\"c\" + 0] = i + 1;\r\n        row[\"c\" + 1] = this.skillMatrixDetails.tableEmpData[i].empId;\r\n        row[\"c\" + 2] = this.skillMatrixDetails.tableEmpData[i].empName;\r\n        row[\"c\" + 3] = this.skillMatrixDetails.tableEmpData[i].experience;\r\n        row[\"c\" + 4] = this.skillMatrixDetails.tableEmpData[i].empLevel;\r\n\r\n\r\n        for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n          sheetColWidths.push(20);\r\n          for (var key in this.skillMatrixDetails.tableEmpData[i]) {\r\n            if (key == tempWorkstationList[j - 5]) {\r\n              let checked = this.isChecked(this.skillMatrixDetails.tableEmpData[i], key);\r\n              row[\"c\" + j] = checked.level;\r\n              if (checked.status == this.constant.EQUAL) {\r\n                checkedIndexes.push({\r\n                  row: i + 5,\r\n                  col: j + 1\r\n                });\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        row[\"c\" + (machineIndexColCount + 5)] = this.skillMatrixDetails.tableEmpData[i].skillLevel;\r\n        row[\"c\" + (machineIndexColCount + 6)] = this.skillMatrixDetails.tableEmpData[i].skillingPer + '%';\r\n        row[\"c\" + (machineIndexColCount + 7)] = this.skillMatrixDetails.tableEmpData[i].marks;\r\n        exportData.push(row);\r\n        isNotTE++;\r\n      }\r\n    }\r\n\r\n\r\n    \r\n    \r\n    if (this.skillMatrixDetails.workstationLvlCount != null) {\r\n      let row = {};\r\n      row[\"c\" + 0] = 'Actual No Trained';\r\n      row[\"c\" + 1] = '';\r\n      row[\"c\" + 2] = '';\r\n      row[\"c\" + 3] = '';\r\n      row[\"c\" + 4] = '';\r\n      let index = 5\r\n      for (let j = 0; j < this.skillMatrixDetails.workstationLvlCount.length; j++) {\r\n        row[\"c\" + (index)] = this.skillMatrixDetails.workstationLvlCount[j].totalCount;\r\n        index++;\r\n      }\r\n      exportData.push(row);\r\n    }\r\n    // console.log(exportData)\r\n    exportData.push({});\r\n    if (this.filteredSkillMatrixTLData != null) {\r\n      let row = {};\r\n      row[\"c\" + 0] = 'Team Leader Skill Level';\r\n      row[\"c\" + 1] = '';\r\n      row[\"c\" + 2] = '';\r\n      row[\"c\" + 3] = '';\r\n      row[\"c\" + 4] = '';\r\n      let index = 5\r\n      for (let j = 0; j < this.skillMatrixDetails.workstationLvlCount.length + 5; j++) {\r\n        row[\"c\" + (index)] = '';\r\n        index++;\r\n      }\r\n      exportData.push(row);\r\n    }\r\n    exportData.push({});\r\n    for (let i = 0; i < this.filteredSkillMatrixTLData.length; i++) {\r\n      if (this.filteredSkillMatrixTLData[i].empLevel === 'TL') {\r\n        let row = {};\r\n        row[\"c\" + 0] = i + 1;\r\n        row[\"c\" + 1] = this.filteredSkillMatrixTLData[i].empId;\r\n        row[\"c\" + 2] = this.filteredSkillMatrixTLData[i].empName;\r\n        row[\"c\" + 3] = this.filteredSkillMatrixTLData[i].experience;\r\n        row[\"c\" + 4] = this.filteredSkillMatrixTLData[i].empLevel;\r\n        for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n          sheetColWidths.push(20);\r\n          for (var key in this.filteredSkillMatrixTLData[i]) {\r\n            if (key == tempWorkstationList[j - 5]) {\r\n              let checked = this.isChecked(this.filteredSkillMatrixTLData[i], key);\r\n              row[\"c\" + j] = checked.level;\r\n              if (checked.status == this.constant.EQUAL) {\r\n                checkedIndexes.push({\r\n                  row: i + 5,\r\n                  col: j + 1\r\n                });\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        row[\"c\" + (machineIndexColCount + 5)] = this.filteredSkillMatrixTLData[i].skillLevel;\r\n        row[\"c\" + (machineIndexColCount + 6)] = this.filteredSkillMatrixTLData[i].skillingPer + '%';\r\n        row[\"c\" + (machineIndexColCount + 7)] = this.filteredSkillMatrixTLData[i].marks;\r\n        exportData.push(row);\r\n      }\r\n    }\r\n    exportData.push({});\r\n    for (let i = 0; i < this.skillMatrixDetails.tableEmpData.length; i++) {\r\n      if (this.skillMatrixDetails.tableEmpData[i].empLevel === 'TL') {\r\n        let row = {};\r\n        row[\"c\" + 0] = i + 1;\r\n        row[\"c\" + 1] = this.skillMatrixDetails.tableEmpData[i].empId;\r\n        row[\"c\" + 2] = this.skillMatrixDetails.tableEmpData[i].empName;\r\n        row[\"c\" + 3] = this.skillMatrixDetails.tableEmpData[i].experience;\r\n        row[\"c\" + 4] = this.skillMatrixDetails.tableEmpData[i].empLevel;\r\n        for (let j = 5; j < machineIndexColCount + 5; j++) {\r\n          sheetColWidths.push(20);\r\n          for (var key in this.skillMatrixDetails.tableEmpData[i]) {\r\n            if (key == tempWorkstationList[j - 5]) {\r\n              let checked = this.isChecked(this.skillMatrixDetails.tableEmpData[i], key);\r\n              row[\"c\" + j] = checked.level;\r\n              if (checked.status == this.constant.EQUAL) {\r\n                checkedIndexes.push({\r\n                  row: i + 5,\r\n                  col: j + 1\r\n                });\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        row[\"c\" + (machineIndexColCount + 5)] = this.skillMatrixDetails.tableEmpData[i].skillLevel;\r\n        row[\"c\" + (machineIndexColCount + 6)] = this.skillMatrixDetails.tableEmpData[i].skillingPer + '%';\r\n        row[\"c\" + (machineIndexColCount + 7)] = this.skillMatrixDetails.tableEmpData[i].marks;\r\n        exportData.push(row);\r\n      }\r\n    }\r\n    // console.log(exportData)\r\n\r\n\r\n\r\n    //SECTION 6 - Bottom small level tables - Data\r\n    row = {};\r\n    row[\"c\" + 0] = \"Skill Level\";\r\n    row[\"c\" + 1] = \"REQD.\";\r\n    row[\"c\" + 2] = \"ACT.\";\r\n    row[\"c\" + 3] = \"GAP\";\r\n    exportData.push(row);\r\n\r\n    for (let i = 0; i < this.skillMatrixDetails.levelSummary.length; i++) {\r\n      if (this.skillMatrixDetails.levelSummary[i].levelName != 'L4') {\r\n        row = {};\r\n        row[\"c\" + 0] = \"L\" + (i + 1);\r\n        row[\"c\" + 1] = this.skillMatrixDetails.levelSummary[i].requiredCount;\r\n        row[\"c\" + 2] = this.skillMatrixDetails.levelSummary[i].actualCount;\r\n        if ((this.skillMatrixDetails.levelSummary[i].requiredCount && this.skillMatrixDetails.levelSummary[i].requiredCount > 0)\r\n          && (this.skillMatrixDetails.levelSummary[i].requiredCount > this.skillMatrixDetails.levelSummary[i].actualCount)) {\r\n          row[\"c\" + 3] = this.skillMatrixDetails.levelSummary[i].requiredCount - this.skillMatrixDetails.levelSummary[i].actualCount;\r\n        } else {\r\n          row[\"c\" + 3] = 0;\r\n        }\r\n        exportData.push(row);\r\n      }\r\n    }\r\n\r\n\r\n    exportData.push({});\r\n    row = {};\r\n    row[\"c\" + 0] = \"Average Multiskilling %\";\r\n    row[\"c\" + 1] = this.multiskillingPercentage + \" %\";\r\n    exportData.push(row);\r\n\r\n  \r\n    // console.log(exportData);\r\n\r\n    let headers: any = [];\r\n    let workbook = new Workbook();\r\n    let worksheet = workbook.addWorksheet(\"Skill Matrix\", {});\r\n\r\n    for (let index = 0; index < columnCount; index++) {\r\n      headers.push({\r\n        key: [\"c\" + index], width: sheetColWidths[index]\r\n      });\r\n    }\r\n\r\n    worksheet.columns = headers;\r\n\r\n    var rows = [];\r\n    var rowslist: any = {};\r\n    Object.assign({}, rowslist);\r\n\r\n    exportData.forEach((element) => {\r\n      rowslist = {};\r\n      for (var x in element) {\r\n        rowslist[x] = element[x]\r\n      }\r\n      rows.push(rowslist);\r\n    });\r\n\r\n    worksheet.addRows(rows, \"n\");\r\n\r\n    //Merging cells for MACHINE INDEX RATING, MIN.SKILL LEVL REQ. & REQUIRED NUMBER TRAINED cells\r\n    for (let rowNumber = 1; rowNumber < 4; rowNumber++) {\r\n      worksheet.mergeCells(rowNumber, 4, rowNumber, 5);\r\n    }\r\n\r\n    /* worksheet.mergeCells(1, 51, 2, 51); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n     const areCellsMerged = worksheet.getCell(1, 51).isMerged || worksheet.getCell(1, 52).isMerged;\r\n \r\n     if (!areCellsMerged) {\r\n       // Merge cells for rows 1 and 2 in columns 51 and 52 (\"c51\" and \"c52\")\r\n       worksheet.mergeCells(1, 52, 1, 53);\r\n       worksheet.mergeCells(2, 53, 2, 53);\r\n     }\r\n     worksheet.mergeCells(3, 51, 4, 51); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n     worksheet.mergeCells(3, 52, 4, 52); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n     worksheet.mergeCells(3, 53, 4, 53); // Merge cells for rows 1 and 2 in column 51 (\"c51\")\r\n     //Setting bold font to all cells first 4 rows*/\r\n\r\n\r\n    // console.log(isNotTE)\r\n    worksheet.mergeCells((isNotTE + 6), 1, (isNotTE + 6), 5);\r\n    worksheet.mergeCells((isNotTE + 7), 1, (isNotTE + 7), (this.skillMatrixDetails.workstationLvlCount.length + 5 + 3));\r\n    for (let rowNumber = 1; rowNumber < 5; rowNumber++) {\r\n      let row = worksheet.getRow(rowNumber);\r\n      row.font = {\r\n        bold: true\r\n      }\r\n    }\r\n\r\n    for (let rowNumber = 1; rowNumber < 4; rowNumber++) {\r\n      let row = worksheet.getRow(rowNumber);\r\n\r\n      // Loop through all columns starting from F (index 6 in Excel)\r\n      for (let colNumber = 6; colNumber <= row.cellCount; colNumber++) {\r\n        // Get the current cell\r\n        let cell = row.getCell(colNumber);\r\n\r\n        // Apply center alignment if the column is F or beyond\r\n        cell.alignment = {\r\n          vertical: 'middle',\r\n          horizontal: 'center'\r\n        };\r\n      }\r\n    }\r\n    //Setting bold font to headers of bottom level table\r\n    let lvlTblRowIndex = 3 + 1 + 2 + this.skillMatrixDetails.tableEmpData.length;\r\n    {\r\n      let row = worksheet.getRow(lvlTblRowIndex);\r\n      row.font = {\r\n        bold: true\r\n      }\r\n    }\r\n\r\n    //Setting borders to cells from tableData which shows level(L0,L1,L2) in RED & GREEN color\r\n    for (let i = 5; i < this.skillMatrixDetails.tableEmpData.length + 5; i++) {\r\n      let row = worksheet.getRow(i);\r\n      row.eachCell((cell, colNumber) => {\r\n        if (colNumber > 5) {\r\n          cell.border = {\r\n            top: { style: 'double', color: { argb: 'f6f6f6' } },\r\n            left: { style: 'double', color: { argb: 'f6f6f6' } },\r\n            bottom: { style: 'double', color: { argb: 'f6f6f6' } },\r\n            right: { style: 'double', color: { argb: 'f6f6f6' } }\r\n          };\r\n          cell.alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        }\r\n      });\r\n    }\r\n\r\n    //Setting text center to cells of bottom lelve table\r\n    if (this.hasSkillMatrixData) {\r\n      lvlTblRowIndex = 3 + 1 + 2 + this.skillMatrixDetails.tableEmpData.length + this.filteredSkillMatrixTLData.length + 5;\r\n    }\r\n    else{\r\n      lvlTblRowIndex = 3 + 1 + 2 + this.skillMatrixDetails.tableEmpData.length + this.filteredSkillMatrixTLData.length + 4;\r\n    }\r\n  \r\n    // console.log('lvlTblRowIndex:', lvlTblRowIndex);\r\n    // console.log('Total Rows:', worksheet.rowCount);\r\n\r\n    for (let i = 0; i < this.skillMatrixDetails.levelSummary.length; i++) {\r\n      let row = worksheet.getRow(lvlTblRowIndex + i + 1);\r\n      row.alignment = {\r\n        horizontal: 'center'\r\n      }\r\n      if (this.skillMatrixDetails.levelSummary[i].levelId == 1) {\r\n        //RED color to L1 cell\r\n        row.getCell(1).fill = {\r\n          type: 'pattern',\r\n          pattern: 'solid',\r\n          fgColor: { argb: 'FF0000' }\r\n        }\r\n      } else if (this.skillMatrixDetails.levelSummary[i].levelId == 2) {\r\n        //GREEN color to L2 cell\r\n        row.getCell(1).fill = {\r\n          type: 'pattern',\r\n          pattern: 'solid',\r\n          fgColor: { argb: 'D9D9D9' }\r\n        }\r\n      } else if (this.skillMatrixDetails.levelSummary[i].levelId == 3) {\r\n        //YELLOW color to L3 cell\r\n        row.getCell(1).fill = {\r\n          type: 'pattern',\r\n          pattern: 'solid',\r\n          fgColor: { argb: '99cd3a' }\r\n        }\r\n      }\r\n      /* else if (this.skillMatrixDetails.levelSummary[i].levelId == 4) {\r\n        //YELLOW color to L4 cell\r\n        row.getCell(1).fill = {\r\n          type: 'pattern',\r\n          pattern: 'solid',\r\n          fgColor: { argb: '99cd3a' }\r\n        }\r\n      } */\r\n    }\r\n\r\n    //Highlighting EQUAL, NOT EQUAL Cells with RED and GREEN color\r\n    let nonTlEmployees = [];\r\n    let tlEmployees = [];\r\n\r\n    for (let i = 0; i < this.skillMatrixDetails.tableEmpData.length; i++) {\r\n      if (this.skillMatrixDetails.tableEmpData[i].empLevel !== 'TL') {\r\n        nonTlEmployees.push(this.skillMatrixDetails.tableEmpData[i]);\r\n      } else {\r\n        tlEmployees.push(this.skillMatrixDetails.tableEmpData[i]);\r\n      }\r\n    }\r\n    for (let rowNumber = 5; rowNumber < nonTlEmployees.length + 5; rowNumber++) {\r\n      let row = worksheet.getRow(rowNumber);\r\n      for (let colNumber = 6; colNumber < machineIndexColCount + 5 + 4; colNumber++) {\r\n        let isChecked = false;\r\n        checkedIndexes.forEach(element => {\r\n          if (element.row === rowNumber && element.col === colNumber) {\r\n            isChecked = true;\r\n          }\r\n        });\r\n\r\n        // Get the value of the current cell\r\n        let cellValue = row.getCell(colNumber).value;\r\n\r\n        // Check if the cell value is \"L1\", \"L2\", or \"L3\"\r\n        if (cellValue === \"L1\") {\r\n          // Set the fill color for \"L1\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: 'FF0000' } // Yellow\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L2\") {\r\n          // Set the fill color for \"L2\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: 'D9D9D9' } // Orange\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L3\") {\r\n          // Set the fill color for \"L3\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: '99cd3a' } // Red\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        }\r\n        else if (cellValue === \"L4\") {\r\n          // Set the fill color for \"L3\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: '99cd3a' } // Red\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else {\r\n          // Handle other cases if needed\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        }\r\n\r\n      }\r\n    }\r\n    for (let rowNumber = 5 + nonTlEmployees.length; rowNumber < this.skillMatrixDetails.tableEmpData.length + 5 + 4; rowNumber++) {\r\n      let row = worksheet.getRow(rowNumber);\r\n      for (let colNumber = 6; colNumber < machineIndexColCount + 5 + 4; colNumber++) {\r\n        let isChecked = false;\r\n        checkedIndexes.forEach(element => {\r\n          if (element.row === rowNumber && element.col === colNumber) {\r\n            isChecked = true;\r\n          }\r\n        });\r\n\r\n        // Get the value of the current cell\r\n        let cellValue = row.getCell(colNumber).value;\r\n\r\n        // Check if the cell value is \"L1\", \"L2\", or \"L3\"\r\n        if (cellValue === \"L1\") {\r\n          // Set the fill color for \"L1\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: 'FF0000' } // Yellow\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L2\") {\r\n          // Set the fill color for \"L2\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: 'D9D9D9' } // Orange\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L3\") {\r\n          // Set the fill color for \"L3\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: '99cd3a' } // Red\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        }\r\n        else if (cellValue === \"L4\") {\r\n          // Set the fill color for \"L3\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: '99cd3a' } // Red\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else {\r\n          // Handle other cases if needed\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        }\r\n\r\n      }\r\n    }\r\n    for (let rowNumber = 5; rowNumber < this.skillMatrixDetails.workstationLvlCount.length + 5 ; rowNumber++) {\r\n      let row = worksheet.getRow(rowNumber);\r\n      for (let colNumber = 6; colNumber < machineIndexColCount + 5 + 1 + 1 ; colNumber++) {\r\n        let isChecked = false;\r\n        checkedIndexes.forEach(element => {\r\n          if (element.row === rowNumber && element.col === colNumber) {\r\n            isChecked = true;\r\n          }\r\n        });\r\n\r\n        // Get the value of the current cell\r\n        let cellValue = row.getCell(colNumber).value;\r\n\r\n        // Check if the cell value is \"L1\", \"L2\", or \"L3\"\r\n        if (cellValue === \"L1\") {\r\n          // Set the fill color for \"L1\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: 'FF0000' } // Yellow\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L2\") {\r\n          // Set the fill color for \"L2\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: 'D9D9D9' } // Orange\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L3\") {\r\n          // Set the fill color for \"L3\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: '99cd3a' } // Red\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else if (cellValue === \"L4\") {\r\n          // Set the fill color for \"L3\"\r\n          row.getCell(colNumber).fill = {\r\n            type: 'pattern',\r\n            pattern: 'solid',\r\n            fgColor: { argb: '99cd3a' } // Red\r\n          };\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        } else {\r\n          // Handle other cases if needed\r\n          row.getCell(colNumber).alignment = {\r\n            vertical: 'middle',\r\n            horizontal: 'center'\r\n          };\r\n        }\r\n\r\n      }\r\n    }\r\n    for (let rowNumber = 1; rowNumber < 4; rowNumber++) {\r\n      worksheet.mergeCells(rowNumber, 1, rowNumber, 3);\r\n    }\r\n\r\n    \r\n\r\n\r\n      // Common Function to Define colors for L1, L2, L3, L4 and implement it\r\n      const colorMapping = {\r\n        \"L1\": \"FF0000\",  // Red\r\n        \"L2\": \"D9D9D9\",  // Light Gray\r\n        \"L3\": \"99CD3A\",  // Greenish\r\n        \"L4\": \"99CD3A\", \r\n       \r\n    };\r\n    const highlightValues = [\"Actual No Trained\", \"Team Leader Skill Level\",\"Skill Level\",\"Average Multiskilling %\"];\r\n    const startColumn = \"A\";\r\n    worksheet.eachRow((row, rowNumber) => {\r\n      if (rowNumber > 3) { // Skip first 3 rows\r\n          row.eachCell((cell) => {\r\n              let cellValue = cell.value ? cell.value.toString() : \"\"; // Convert value to string\r\n              if (colorMapping[cellValue]) {\r\n                  cell.fill = {\r\n                      type: \"pattern\",\r\n                      pattern: \"solid\",\r\n                      fgColor: { argb: colorMapping[cellValue] }, // Apply background color\r\n                  };\r\n                  cell.alignment = {\r\n                      vertical: \"middle\", // Center vertically\r\n                      horizontal: \"center\", // Center horizontally\r\n                  };\r\n                  cell.font = {\r\n                      bold: true, // Make text bold\r\n                  };\r\n                  cell.border = {\r\n                    top: { style: \"thin\", color: { argb: \"808080\" } }, // Gray border\r\n                    bottom: { style: \"thin\", color: { argb: \"808080\" } },\r\n                    left: { style: \"thin\", color: { argb: \"808080\" } },\r\n                    right: { style: \"thin\", color: { argb: \"808080\" } },\r\n                  };\r\n              }\r\n               // Array of values to check\r\n\r\n              if (highlightValues.includes(cellValue)) {\r\n                cell.alignment = {\r\n                  vertical: \"middle\", //  vertically\r\n                  horizontal: \"left\", //  horizontally\r\n              };\r\n              cell.font = {\r\n                  bold: true, // Make text bold\r\n              };\r\n              }\r\n          \r\n        const columnIndex = cell.col; \r\n\r\n        const minWidth = 20; \r\n        const currentWidth = worksheet.getColumn(columnIndex).width || 10; \r\n        if (currentWidth < minWidth) {\r\n            worksheet.getColumn(columnIndex).width = minWidth;\r\n        }\r\n          });\r\n      }\r\n      // if (rowNumber === (this.hasSkillMatrixData ? 5 : 4)) {\r\n      //   row.alignment = {\r\n      //     vertical: \"middle\",\r\n      //     horizontal: \"center\",\r\n      //   };\r\n        \r\n      // }\r\n      if (rowNumber === (this.hasSkillMatrixData ? 4 : 3)) {\r\n        row.eachCell((cell, colNumber) => {\r\n          if (colNumber > 5) { // Exclude columns A to E (1 to 5)\r\n            cell.alignment = {\r\n              vertical: \"middle\",\r\n              horizontal: \"center\",\r\n            };\r\n          }\r\n        });\r\n      }\r\n      \r\n      // if (rowNumber === (this.hasSkillMatrixData ? 4 : 3)) {\r\n      //   row.alignment = {\r\n      //     vertical: \"middle\",\r\n      //     horizontal: \"center\",\r\n      //   };\r\n    \r\n      // }\r\n   });\r\n   // Apply center alignment for all cells in columns M (13) and N (14)\r\n    worksheet.getColumn(13).alignment = { vertical: \"middle\", horizontal: \"center\" };\r\n    worksheet.getColumn(14).alignment = { vertical: \"middle\", horizontal: \"center\" };\r\n\r\n    workbook.xlsx.writeBuffer().then((data) => {\r\n      var excelName = \"Skill Matrix\";\r\n      let blob = new Blob([data], { type: \"xlsx\" });\r\n      fs.saveAs(blob, excelName + \".xlsx\");\r\n    });\r\n\r\n  }\r\n  testCell() {\r\n\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  sortFunction(array, key) {\r\n    if (array != null && array.length > 0) {\r\n      array.sort(function (a, b) {\r\n        var nameA = (!Number(a[key])) ? a[key].toUpperCase() : a[key];\r\n        var nameB = (!Number(b[key])) ? b[key].toUpperCase() : b[key];\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  getSearchList(flag: any) {\r\n\r\n  }\r\n  getSkillMatrixDetails() {\r\n\r\n  }\r\n  getBCForfReqSkillLvl(levelName: string): string {\r\n    switch (levelName) {\r\n      case 'Level 1':\r\n        return 'white';\r\n      case 'Level 2':\r\n        return 'yellow';\r\n      case 'Level 3':\r\n        return '#acc906';\r\n      case 'Level 4':\r\n        return '#acc906';\r\n      default:\r\n        return ''; // You can set a default color here if needed\r\n    }\r\n  }\r\n  getLevelNameForWorkstation(employee, workstationId) {\r\n    const workstation = employee.workstations.find(data => data.id === workstationId);\r\n    return workstation ? workstation.levelName : '';\r\n  }\r\n  getBackgroundColorForLevel(employee: any, workstationId: number): string {\r\n    const levelName = this.getLevelNameForWorkstation(employee, workstationId);\r\n    switch (levelName) {\r\n      case 'Level 1':\r\n        return 'white';\r\n      case 'Level 2':\r\n        return 'yellow';\r\n      case 'Level 3':\r\n        return '#acc906';\r\n      case 'Level 4':\r\n        return '#acc906';\r\n      default:\r\n        return ''; // You can set a default color here if needed\r\n    }\r\n  }\r\n  getHighestWorkstationLevel(workstations) {\r\n    const highestWorkstation = workstations.reduce((highest, current) => {\r\n      if (!highest || current.reqSkillLevelId > highest.reqSkillLevelId) {\r\n        return current;\r\n      }\r\n      return highest;\r\n    }, null);\r\n\r\n    return highestWorkstation ? highestWorkstation.levelName : '';\r\n  }\r\n  getBackgroundColorForHighestLevel(workstations: any[]): string {\r\n    const highestLevelName = this.getHighestWorkstationLevel(workstations);\r\n\r\n    switch (highestLevelName) {\r\n      case 'Level 1':\r\n        return 'white';\r\n      case 'Level 2':\r\n        return 'yellow';\r\n      case 'Level 3':\r\n        return '#acc906';\r\n      case 'Level 4':\r\n        return '#acc906';\r\n      default:\r\n        return ''; // You can set a default color here if needed\r\n    }\r\n  }\r\n  filterModalOpen(modal) {\r\n    this.searchDet.filterFlag = true;\r\n    this.modalService.open(modal, {\r\n      windowClass: 'filterPopup',\r\n      backdrop: 'static',\r\n      keyboard: false\r\n    });\r\n  }\r\n  submitFilterForm(form) {\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    this.isAppliedFilter = true;\r\n    this.searchDet.filterFlag = false;\r\n    this.modalService.dismissAll();\r\n    this.getSkillMatixData();\r\n  }\r\n  removeFilter() {\r\n    this.isAppliedFilter = false;\r\n    this.filterData.reset();\r\n    this.searchDet.branch = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n    this.searchDet.branchId = [];\r\n    this.searchDet.deptId = [];\r\n    this.searchDet.lineIds = [];\r\n    this.searchDet.dept = [];\r\n    this.searchDet.cell = [];\r\n    this.searchDet.fromDate = null;\r\n    this.searchDet.toDate = null;\r\n    //this.searchDet.statusId = [];\r\n    this.getSkillMatixData();\r\n  }\r\n\r\n  onChangeShift(ev: any) {\r\n    // console.log(ev);\r\n    this.getSkillMatixData();\r\n  }\r\n\r\n  filterList(): void {\r\n    const searchValue = this.searchInput.trim().toLowerCase();\r\n  \r\n    this.filteredEmpData = this.skillMatrixDetails.tableEmpData.filter(row => \r\n      Object.values(row).some(value =>\r\n        value.toString().toLowerCase().includes(searchValue)\r\n      )\r\n    );\r\n  }\r\n  \r\n  clearSearch(): void {\r\n     this.searchInput = '';\r\n     this.filteredEmpData = [...this.skillMatrixDetails.tableEmpData];\r\n  }\r\n}\r\n","export default \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"col-8 m-auto\\\">\\r\\n        <app-topBar title=\\\"Assessments\\\"></app-topBar>\\r\\n    </div>\\r\\n    <div class=\\\"col-3 m-auto\\\">\\r\\n        <!-- <app-loginInfo></app-loginInfo> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-1 p-0 m-auto text-center\\\">\\r\\n        <!-- <button class=\\\"btn btn-default filter-btn\\\" title=\\\"Filter\\\" (click)=\\\"filterModalOpen(FilterModal)\\\">\\r\\n            <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button> -->\\r\\n        <div class=\\\"btn-filter-wrap\\\">\\r\\n            <button class=\\\"btn btn-default filter-btn\\\" [ngClass]=\\\"{'applied' : searchDet.filterFlag}\\\" title=\\\"Filter\\\"\\r\\n                (click)=\\\"filterModalOpen(FilterModal)\\\">\\r\\n                <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n            <div class=\\\"btn-clear-filter\\\" *ngIf=\\\"searchDet.filterFlag\\\" (click)=\\\"removeFilter();\\\">x</div>\\r\\n            <div class=\\\"lbl-filter-applied\\\" *ngIf=\\\"searchDet.filterFlag\\\">Filter Applied</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"homepage-block bg-Transperant p-l-15 p-r-15\\\">\\r\\n\\r\\n    <div class=\\\" extraContent row m-0\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <!-- <div class=\\\"p-l-0 p-r-5\\\" [ngClass]=\\\"(searchDet.filterFlag)? 'col-6':'col-12'\\\"> -->\\r\\n            <div class=\\\"form-group has-search\\\">\\r\\n                <span *ngIf=\\\"!searchDet.searchData\\\" class=\\\"fa fa-search form-control-feedback\\\"\\r\\n                    (click)=\\\"getSearchList(true)\\\"></span>\\r\\n                <span *ngIf=\\\"searchDet.searchData\\\" class=\\\"fa fa-times-circle form-control-clear\\\"\\r\\n                    (click)=\\\"getSearchList(false)\\\"></span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"searchInput\\\" placeholder=\\\"Search By Name\\\"\\r\\n                    [(ngModel)]=\\\"searchDet.searchInput\\\" (keyup)=\\\"$event.keyCode == 13 ? getSearchList(true) : ''\\\"\\r\\n                    autocomplete=\\\"off\\\" />\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-6 p-r-5 p-l-5\\\" *ngIf=\\\"searchDet.filterFlag\\\">\\r\\n                        <div class=\\\"filterDiv\\\">\\r\\n                            <button class=\\\"clearFilter\\\" (click)=\\\"removeFilter()\\\">Clear filter</button> &nbsp; <span\\r\\n                                style=\\\"color: green;font-size: 12px; font-weight: 500;\\\">Filter applied</span>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-4 p-0\\\"></div>\\r\\n        <div class=\\\"col-4 p-0\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <!-- TABLE BLOCK -->\\r\\n    <div class=\\\"table-block\\\">\\r\\n        <div class=\\\"table-responsive tableFixHead\\\">\\r\\n            <table datatable class=\\\"table\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <!-- <th class=\\\"fixedColumn\\\">SR NO</th> -->\\r\\n                        <th class=\\\"fixedColumn\\\" mat-sort-header=\\\"BranchName\\\">Plant</th>\\r\\n                        <th>OJT Start Date</th>\\r\\n                        <th>Emp ID</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"EmpName\\\">Emp Name</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"AssessmentTitle\\\">Assessment Title</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"DeptName\\\">Department</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"Workstation\\\">Workstation</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"SkillLevel\\\">Level</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"AssessmentType\\\">Assessment Type</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"AssessmentDate\\\">Assessment Date</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"Score\\\">Score</th>\\r\\n                        <th class=\\\"fixedColumn\\\" mat-sort-header=\\\"Status\\\">Status</th>\\r\\n                        <th class=\\\"actionTh fixedColumn\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of assessmentData\\\">\\r\\n                        <td class=\\\"actionTd fixedColumn text-left\\\">{{item.branchName || 'N/A'}}</td>\\r\\n                        <td>{{item.ojtStartDate | date: 'dd-MM-yyyy'}}</td>\\r\\n                        <td>{{item.cmpEmpId}}</td>\\r\\n                        <td>{{item.empName}}</td>\\r\\n                        <td>{{item.title}}</td>\\r\\n                        <td>{{item.deptName}}</td>\\r\\n                        <td>{{item.workstationName}}</td>\\r\\n                        <td>{{item.levelName || 'N/A'}}</td>\\r\\n                        <td>{{item.assessmentType || 'N/A'}}</td>\\r\\n                        <td>{{(item.assessmentDate) ? (item.assessmentDate | date:'dd-MM-yyyy') : 'N/A'}}</td>\\r\\n                        <td>{{item.score}}</td>\\r\\n                        <td class=\\\"actionTd fixedColumn\\\"\\r\\n                            [ngClass]=\\\"{'completed':item.status == 'PASS','pending':item.status == 'FAIL'}\\\">\\r\\n                            {{item.status || 'N/A'}}</td>\\r\\n                        <td class=\\\"actionTd fixedColumn\\\">\\r\\n                            <!-- <button type=\\\"button\\\" class=\\\"btn btn-sm actionBtn\\\">Action</button> -->\\r\\n                            <i class=\\\"fa fa-eye viewIcon\\\" (click)=\\\"openViewModal(assessmentDetail,item)\\\"\\r\\n                                style=\\\"cursor: pointer;\\\"></i>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"(assessmentData == null || assessmentData.length == 0)\\\">\\r\\n                        <td colspan=\\\"8\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoading\\\">\\r\\n                            <!-- *ngIf=\\\"!listLoading\\\" -->\\r\\n                            Data not found\\r\\n                        </td>\\r\\n                        <td colspan=\\\"8\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoading\\\">\\r\\n                            <app-loading></app-loading>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <app-pagination [staticPagination]=\\\"staticPagination\\\" (paginationData)=\\\"loadMore($event)\\\"></app-pagination>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Filter Popup  -->\\r\\n<ng-template #FilterModal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title popup-header-txt\\\" id=\\\"myModalLabel2\\\">Filter</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"filterData\\\" (ngSubmit)=\\\"submitFilterForm(filterData)\\\" autocomplete=\\\"off\\\"\\r\\n        class=\\\"needs-validation\\\">\\r\\n        <div class=\\\"modal-body p-2\\\" style=\\\"height: calc(100vh - 14vh);\\\">\\r\\n            <perfect-scrollbar>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"branchId\\\" class=\\\"col-sm-12 col-form-label filter-label p-b-0\\\">Plant</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"branchId\\\" id=\\\"branchId\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                            [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                            [data]=\\\"getSortFunction(plantList,'plant')\\\" formControlName=\\\"branchId\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.branchId\\\" (onSelect)=\\\"onChange($event,'plant')\\\"\\r\\n                            (onDeSelect)=\\\"onDeSelectPlant(false,'plant')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"submitAttempted && filterData.controls['branchId'].invalid && (filterData.controls['branchId'].touched || filterData.controls['branchId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['branchId'].errors.required\\\">\\r\\n                                Please select plant\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"deptLvlId\\\" class=\\\"col-sm-12 col-form-label filter-label p-b-0\\\">Department</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"deptLvlId\\\" id=\\\"deptLvlId\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"multipleDropdownSettings\\\"\\r\\n                            [data]=\\\"getSortFunction(masterDeptList,'cell')\\\" formControlName=\\\"deptLvlId\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.deptIds \\\" (onSelect)=\\\"onChange($event,'plant')\\\"\\r\\n                            (onDeSelect)=\\\"onChange(false,'plant')\\\" (onSelectAll)=\\\"onChangeAll($event,'userType')\\\"\\r\\n                            (onDeSelectAll)=\\\"onChangeAll($event,'userType')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"submitAttempted && filterData.controls['deptLvlId'].invalid && (filterData.controls['deptLvlId'].touched || filterData.controls['deptLvlId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['deptLvlId'].errors.required\\\">\\r\\n                                Please select department\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"opt\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Workstation</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"masterWorkList\\\" id=\\\"masterWorkList\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Workstation'\\\" [settings]=\\\"multipleDropdownSettings\\\"\\r\\n                            formControlName=\\\"masterWork\\\" [data]=\\\"getSortFunction(masterWorkList,'work')\\\"\\r\\n                            [disabled]=\\\"false\\\" [(ngModel)]=\\\"searchDet.masterWorkList\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"filterData.controls['masterWork'].invalid && (filterData.controls['masterWork'].touched || filterData.controls['masterWork'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"submitAttempted && filterData.controls['masterWork'].errors.required\\\">\\r\\n                                Please select workstation\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </perfect-scrollbar>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer footerBlock text-right\\\">\\r\\n            <button class=\\\"btn submitBtn event-btn\\\" type=\\\"submit\\\">\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                <span *ngIf=\\\"!submitSpinner\\\" class=\\\"btn-text\\\">Apply Filter</span>\\r\\n            </button>\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn cancelBtn\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">Cancel\\r\\n            </button> -->\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n<!-- Filter Popup  -->\\r\\n<ng-template #assessmentDetail let-c=\\\"close\\\">\\r\\n    <app-assessessment-detail-modal [selectedDetail]=\\\"selectedRecForModal\\\">\\r\\n    </app-assessessment-detail-modal>\\r\\n</ng-template>\";","export default \".tableFixHead {\\n  max-height: calc(100vh - 23vh) !important;\\n  min-height: calc(100vh - 23vh) !important;\\n  height: calc(100vh - 23vh) !important;\\n}\\n.tableFixHead.ViewTable {\\n  max-height: calc(100vh - 15vh) !important;\\n  min-height: calc(100vh - 15vh) !important;\\n  height: calc(100vh - 15vh) !important;\\n}\\n.formInputField {\\n  border-bottom: 1px solid #7044cd;\\n}\\n.formInputField .insideLabel {\\n  margin-bottom: 10px;\\n}\\n.formInputField .insideLabel .col-form-label {\\n  position: absolute;\\n  z-index: 999;\\n  top: 0px;\\n  font: normal normal bold 12px/1.5 Helvetica Neue;\\n  left: 1.5rem;\\n  color: #7044cd;\\n}\\n.formInputField .insideLabel.datePickerBlock .col-form-label {\\n  top: -10px;\\n  background: #fff;\\n  padding: 0px 5px;\\n  left: 15px;\\n}\\n.formInputField .insideLabel.datePickerBlock .custom-Input-Group .input-group-prepend .input-group-text {\\n  background-color: transparent;\\n}\\n.formInputField .insideLabel.datePickerBlock .custom-Input-Group .input-group-prepend .form-control:disabled {\\n  background-color: transparent;\\n}\\n.checkbox-block {\\n  padding: 8px 10px !important;\\n  border-bottom: 1px solid lightgray !important;\\n  cursor: pointer !important;\\n}\\n.checkbox-block:last-child {\\n  border-bottom: none !important;\\n}\\n.checkbox-block label {\\n  margin: 0px;\\n  cursor: pointer !important;\\n}\\n.checkbox-block label::before {\\n  margin-right: 5px !important;\\n}\\n.checkbox-block label:after {\\n  top: 0.9rem !important;\\n  left: 0.89rem !important;\\n}\\n/* .fixedColumn {\\n    z-index: 4;\\n    &:nth-child(1) {\\n        left: 0px;\\n    }\\n    &:nth-child(2) {\\n        left: 5.8%; // 67px;\\n    }\\n    &:nth-child(3) {\\n        left: 12.5%; // 142px;\\n    }\\n    &:nth-child(4) {\\n        left: 18.5%; // 211px; \\n    }\\n    &:nth-child(5) {\\n        left: 23%; // 266px\\n    }\\n} */\\n.red-text {\\n  color: red;\\n}\\n.footerBlock {\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  justify-content: flex-end;\\n  padding: 5px 25px !important;\\n  border-top: 1px solid #e3eaef;\\n  border-bottom-right-radius: calc(0.3rem - 1px);\\n  border-bottom-left-radius: calc(0.3rem - 1px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGFkZC12aWV3LXdvcmtmb3JjZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlDQUFBO0VBQ0EseUNBQUE7RUFDQSxxQ0FBQTtBQUNKO0FBQ0k7RUFDSSx5Q0FBQTtFQUNBLHlDQUFBO0VBQ0EscUNBQUE7QUFDUjtBQUdBO0VBQ0ksZ0NBQUE7QUFBSjtBQUVJO0VBQ0ksbUJBQUE7QUFBUjtBQUVRO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsUUFBQTtFQUNBLGdEQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBWjtBQUlZO0VBQ0ksVUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxVQUFBO0FBRmhCO0FBT29CO0VBQ0ksNkJBQUE7QUFMeEI7QUFRb0I7RUFDSSw2QkFBQTtBQU54QjtBQWNBO0VBQ0ksNEJBQUE7RUFDQSw2Q0FBQTtFQUNBLDBCQUFBO0FBWEo7QUFhSTtFQUNJLDhCQUFBO0FBWFI7QUFjSTtFQUNJLFdBQUE7RUFDQSwwQkFBQTtBQVpSO0FBY1E7RUFDSSw0QkFBQTtBQVpaO0FBZVE7RUFDSSxzQkFBQTtFQUNBLHdCQUFBO0FBYlo7QUFrQkE7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBQUE7QUFrQkE7RUFDSSxVQUFBO0FBZko7QUFrQkE7RUFDSSxhQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSw0QkFBQTtFQUNBLDZCQUFBO0VBQ0EsOENBQUE7RUFDQSw2Q0FBQTtBQWZKIiwiZmlsZSI6ImFkZC12aWV3LXdvcmtmb3JjZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZUZpeEhlYWQge1xyXG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDIzdmgpICFpbXBvcnRhbnQ7XHJcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gMjN2aCkgIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDIzdmgpICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgJi5WaWV3VGFibGUge1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxNXZoKSAhaW1wb3J0YW50O1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxNXZoKSAhaW1wb3J0YW50O1xyXG4gICAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDE1dmgpICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5mb3JtSW5wdXRGaWVsZCB7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzcwNDRjZDtcclxuXHJcbiAgICAuaW5zaWRlTGFiZWwge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gICAgICAgIC5jb2wtZm9ybS1sYWJlbCB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogOTk5O1xyXG4gICAgICAgICAgICB0b3A6IDBweDtcclxuICAgICAgICAgICAgZm9udDogbm9ybWFsIG5vcm1hbCBib2xkIDEycHgvMS41IEhlbHZldGljYSBOZXVlO1xyXG4gICAgICAgICAgICBsZWZ0OiAxLjVyZW07XHJcbiAgICAgICAgICAgIGNvbG9yOiAjNzA0NGNkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5kYXRlUGlja2VyQmxvY2sge1xyXG4gICAgICAgICAgICAuY29sLWZvcm0tbGFiZWwge1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMTBweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwcHggNXB4O1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMTVweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmN1c3RvbS1JbnB1dC1Hcm91cCB7XHJcbiAgICAgICAgICAgICAgICAuaW5wdXQtZ3JvdXAtcHJlcGVuZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgLmlucHV0LWdyb3VwLXRleHQge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5mb3JtLWNvbnRyb2w6ZGlzYWJsZWQge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jaGVja2JveC1ibG9jayB7XHJcbiAgICBwYWRkaW5nOiA4cHggMTBweCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0Z3JheSAhaW1wb3J0YW50O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgbGFiZWwge1xyXG4gICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlciAhaW1wb3J0YW50O1xyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIHRvcDogMC45cmVtICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIGxlZnQ6IDAuODlyZW0gIWltcG9ydGFudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qIC5maXhlZENvbHVtbiB7XHJcbiAgICB6LWluZGV4OiA0O1xyXG4gICAgJjpudGgtY2hpbGQoMSkge1xyXG4gICAgICAgIGxlZnQ6IDBweDtcclxuICAgIH1cclxuICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICBsZWZ0OiA1LjglOyAvLyA2N3B4O1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoMykge1xyXG4gICAgICAgIGxlZnQ6IDEyLjUlOyAvLyAxNDJweDtcclxuICAgIH1cclxuICAgICY6bnRoLWNoaWxkKDQpIHtcclxuICAgICAgICBsZWZ0OiAxOC41JTsgLy8gMjExcHg7IFxyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoNSkge1xyXG4gICAgICAgIGxlZnQ6IDIzJTsgLy8gMjY2cHhcclxuICAgIH1cclxufSAqL1xyXG4ucmVkLXRleHQge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmZvb3RlckJsb2NrIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgIHBhZGRpbmc6IDVweCAyNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2UzZWFlZjtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBjYWxjKDAuM3JlbSAtIDFweCk7XHJcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBjYWxjKDAuM3JlbSAtIDFweCk7XHJcbn1cclxuIl19 */\";","export default \".extraContent {\\n  padding: 0px;\\n}\\n.extraContent .has-search {\\n  margin-bottom: 0px;\\n}\\n.extraContent .has-search .form-control-feedback {\\n  color: #7044cd;\\n}\\n.extraContent .has-search .form-control-clear {\\n  color: #f95371;\\n  cursor: pointer;\\n}\\n.extraContent .has-search input,\\n.extraContent .has-search input:focus,\\n.extraContent .has-search input:hover {\\n  box-shadow: none;\\n  outline: none;\\n  border: none;\\n  border-radius: 0px;\\n  border-bottom: 1px solid #7044cd;\\n  background-color: transparent;\\n}\\n.extraContent .col-form-label {\\n  position: absolute;\\n  z-index: 999;\\n  top: 4px !important;\\n  font: normal normal bold 12px/1.5 Helvetica Neue !important;\\n  left: 1rem !important;\\n  color: #7044cd !important;\\n}\\n.input-group-append .fa {\\n  position: relative;\\n  top: 0.5em;\\n}\\n.form-group {\\n  padding: 0.7rem 0px;\\n  margin: 0px;\\n}\\n.form-group:last-child {\\n  border-bottom: none;\\n}\\n.form-group .col-form-label {\\n  text-align: left;\\n  font: normal normal normal 14px/1.5 Helvetica Neue;\\n  letter-spacing: 0px;\\n  color: #707070;\\n}\\n.custom-errorMsg {\\n  width: 100%;\\n  margin-top: 0.25rem;\\n  font-size: 80%;\\n  color: #ff5252;\\n}\\n.customInputField {\\n  margin-left: 15px;\\n  padding-top: 5px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  border: none;\\n  box-shadow: none;\\n}\\n.tableFixHead table {\\n  position: relative;\\n}\\n.tableFixHead table th.actionTh,\\n.tableFixHead table td.actionTd {\\n  width: 100px;\\n}\\n.tableFixHead table tbody td {\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcY2VydGlmaWNhdGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKO0FBQ0k7RUFDSSxrQkFBQTtBQUNSO0FBQ1E7RUFDSSxjQUFBO0FBQ1o7QUFFUTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FBQVo7QUFHUTs7O0VBR0ksZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0NBQUE7RUFDQSw2QkFBQTtBQURaO0FBS0k7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLDJEQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtBQUhSO0FBUUk7RUFDSSxrQkFBQTtFQUNBLFVBQUE7QUFMUjtBQVNBO0VBRUksbUJBQUE7RUFDQSxXQUFBO0FBUEo7QUFTSTtFQUNJLG1CQUFBO0FBUFI7QUFVSTtFQUNJLGdCQUFBO0VBQ0Esa0RBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFSUjtBQVlBO0VBQ0ksV0FBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUFUSjtBQVlBO0VBQ0ksaUJBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQVRKO0FBY0k7RUFDSSxrQkFBQTtBQVhSO0FBYVE7O0VBRUksWUFBQTtBQVhaO0FBY1E7RUFDSSxzQkFBQTtBQVpaIiwiZmlsZSI6ImNlcnRpZmljYXRlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leHRyYUNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG5cclxuICAgIC5oYXMtc2VhcmNoIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcblxyXG4gICAgICAgIC5mb3JtLWNvbnRyb2wtZmVlZGJhY2sge1xyXG4gICAgICAgICAgICBjb2xvcjogIzcwNDRjZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5mb3JtLWNvbnRyb2wtY2xlYXIge1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y5NTM3MTtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW5wdXQsXHJcbiAgICAgICAgaW5wdXQ6Zm9jdXMsXHJcbiAgICAgICAgaW5wdXQ6aG92ZXIge1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDBweDtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM3MDQ0Y2Q7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuY29sLWZvcm0tbGFiZWwge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB6LWluZGV4OiA5OTk7XHJcbiAgICAgICAgdG9wOiA0cHggIWltcG9ydGFudDtcclxuICAgICAgICBmb250OiBub3JtYWwgbm9ybWFsIGJvbGQgMTJweC8xLjUgSGVsdmV0aWNhIE5ldWUgIWltcG9ydGFudDtcclxuICAgICAgICBsZWZ0OiAxcmVtICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgY29sb3I6ICM3MDQ0Y2QgIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuLmlucHV0LWdyb3VwLWFwcGVuZCB7XHJcbiAgICAuZmEge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IDAuNWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgICAvLyBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgcGFkZGluZzogMC43cmVtIDBweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG5cclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAuY29sLWZvcm0tbGFiZWwge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgZm9udDogbm9ybWFsIG5vcm1hbCBub3JtYWwgMTRweC8xLjUgSGVsdmV0aWNhIE5ldWU7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDBweDtcclxuICAgICAgICBjb2xvcjogIzcwNzA3MDtcclxuICAgIH1cclxufVxyXG5cclxuLmN1c3RvbS1lcnJvck1zZyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IDAuMjVyZW07XHJcbiAgICBmb250LXNpemU6IDgwJTtcclxuICAgIGNvbG9yOiAjZmY1MjUyO1xyXG59XHJcblxyXG4uY3VzdG9tSW5wdXRGaWVsZCB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgLy8gYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcclxufVxyXG5cclxuLnRhYmxlRml4SGVhZCB7XHJcbiAgICB0YWJsZSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICB0aC5hY3Rpb25UaCxcclxuICAgICAgICB0ZC5hY3Rpb25UZCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRib2R5IHRkIHtcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SkillMatrixComponent } from './skill-matrix.component';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { AssessmentsComponent } from './assessments/assessments.component';\r\nimport { OjtPlanComponent } from './ojt-plan/ojt-plan.component';\r\nimport { WorkforceDeploymentComponent } from './workforce-deployment/workforce-deployment.component';\r\nimport { CertificatesComponent } from './certificates/certificates.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SkillMatrixComponent\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: SkillMatrixComponent\r\n  },\r\n  {\r\n    path: 'actions',\r\n    component: ActionsComponent\r\n  },\r\n  {\r\n    path: 'ojt_plan',\r\n    loadChildren: () => import('./ojt-plan/ojt-plan.module').then(m => m.OjtPlanModule)\r\n  },\r\n  {\r\n    path: 'ojt_registration',\r\n    loadChildren: () => import('./ojt-registration/ojt-registration.module').then(m => m.OjtRegistrationModule)\r\n  },\r\n  {\r\n    path: 'workforce_Deployment',\r\n    component: WorkforceDeploymentComponent\r\n  },\r\n  {\r\n    path: 'assessments',\r\n    component: AssessmentsComponent\r\n  },\r\n  {\r\n    path: 'certificates',\r\n    component: CertificatesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SkillMatrixRoutingModule { }\r\n","export default \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"col-8 m-auto\\\">\\r\\n        <app-topBar class=\\\"title\\\" title=\\\"Workforce Deployment\\\"></app-topBar>\\r\\n    </div>\\r\\n    <div class=\\\"col-3 m-auto\\\">\\r\\n        <!-- <app-loginInfo></app-loginInfo> -->\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-1 p-0 m-auto text-center\\\">\\r\\n        <button class=\\\"btn btn-default filter-btn\\\" title=\\\"Filter\\\" (click)=\\\"filterModalOpen(FilterModal)\\\">\\r\\n            <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-1 p-0 m-auto text-center\\\">\\r\\n        <div class=\\\"btn-filter-wrap\\\">\\r\\n            <button class=\\\"btn btn-default filter-btn\\\" [ngClass]=\\\"{'applied' : isAppliedFilter}\\\" title=\\\"Filter\\\"\\r\\n                (click)=\\\"filterModalOpen(filterPopup)\\\">\\r\\n                <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n            <div class=\\\"btn-clear-filter\\\" *ngIf=\\\"isAppliedFilter\\\" (click)=\\\"removeFilter();\\\">x</div>\\r\\n            <div class=\\\"lbl-filter-applied\\\" *ngIf=\\\"isAppliedFilter\\\">Filter Applied</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"homepage-block bg-Transperant p-l-15 p-r-15 \\\">\\r\\n    <div class=\\\"extraContent\\\">\\r\\n        <div class=\\\"row m-0\\\">\\r\\n            <div class=\\\"form-group has-search  col-4\\\">\\r\\n                <span *ngIf=\\\"!searchDet.searchData\\\" class=\\\"fa fa-search form-control-feedback\\\"\\r\\n                    (click)=\\\"getSearchList(true)\\\"></span>\\r\\n                <span *ngIf=\\\"searchDet.searchData\\\" class=\\\"fa fa-times-circle form-control-clear\\\"\\r\\n                    (click)=\\\"getSearchList(false)\\\"></span>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"searchInput\\\" placeholder=\\\"Search by palace holder\\\"\\r\\n                    [(ngModel)]=\\\"searchDet.searchInput\\\" autocomplete=\\\"off\\\"\\r\\n                    (keyup)=\\\"$event.keyCode == 13 ? getSearchList(true) : ''\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\"></div>\\r\\n\\r\\n            <div class=\\\"col-4 p-0\\\">\\r\\n                <div class=\\\"addRegDiv\\\">\\r\\n                    <button class=\\\"btn addRegBtn m-0\\\" type=\\\"button\\\" title=\\\"Add Workforce Deployment\\\"\\r\\n                        (click)=\\\"addWorkForce(addWorkForceModal,{},'Add')\\\"><i class=\\\"fa fa-plus m-r-10\\\" style=\\\"text-align: center;\\\"></i>Create</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"table-block skill-table\\\">\\r\\n        <div class=\\\"table-responsive tableFixHead\\\">\\r\\n            <table class=\\\"table\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\" mat-sort-header=\\\"Department\\\">Department</th>\\r\\n                        <th mat-sort-header=\\\"Line\\\" scope=\\\"col\\\">Cell / Line</th>\\r\\n                        <th scope=\\\"col\\\" mat-sort-header=\\\"Shift\\\">Shift</th>\\r\\n                        <th scope=\\\"col\\\" mat-sort-header=\\\"FromDate\\\">From Date</th>\\r\\n                        <th scope=\\\"col\\\" mat-sort-header=\\\"ToDate\\\">To Date</th>\\r\\n                        <th scope=\\\"col\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let x of workforceList;let workforceIndex = index\\\">\\r\\n                        <td>{{x.deptName || ''}}</td>\\r\\n                        <td>{{x.lineName || ''}}</td>\\r\\n                        <td>{{x.shiftName || ''}}</td>\\r\\n                        <td>{{((x.fromDate) ? (x.fromDate | date:'dd-MM-yyyy') : '')|| ''}}</td>\\r\\n                        <td>{{((x.toDate) ? (x.toDate | date:'dd-MM-yyyy') : '')|| ''}}</td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"addWorkForce(addWorkForceModal,x,'View')\\\"\\r\\n                                style=\\\"color:#7044CD;cursor: pointer\\\"><i class=\\\"fa fa-eye viewIcon\\\"></i></a>\\r\\n                            &nbsp; &nbsp;\\r\\n                            <i style=\\\"color:#7044CD;cursor: pointer\\\"> <img src=\\\"assets/images/ic_excel.png\\\" alt=\\\"\\\"\\r\\n                                    class=\\\"img-fluid\\\" (click)=\\\"getWorkForceDeploymentDetails(x)\\\">\\r\\n                            </i>\\r\\n                        </td>\\r\\n\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"(workforceList == null || workforceList.length == 0)\\\">\\r\\n                        <td colspan=\\\"6\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoader\\\">\\r\\n                            Data Not Found\\r\\n                        </td>\\r\\n                        <td colspan=\\\"6\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoader\\\">\\r\\n                            <app-loading></app-loading>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- Filter Popup  -->\\r\\n<ng-template #filterPopup let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title popup-header-txt\\\" id=\\\"myModalLabel2\\\">Filter</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click');\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"filterData\\\" (ngSubmit)=\\\"submitFilterForm(filterData)\\\" autocomplete=\\\"off\\\"\\r\\n        class=\\\"needs-validation\\\">\\r\\n        <div class=\\\"modal-body p-2\\\" style=\\\"height: calc(100vh - 14vh);\\\">\\r\\n            <perfect-scrollbar>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"moduleId\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Plant</label>\\r\\n                    <div class=\\\" col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"selectedModuleId\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"branchAccessList\\\"\\r\\n                            (onSelect)=\\\"onChange($event,'plant')\\\" (onDeSelect)=\\\"onChange(false,'dept')\\\" formControlName=\\\"branchId\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.branch\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"submitAttempted && formdata.controls['branchId'].invalid && (formdata.controls['branchId'].touched || filterData.controls['branchId'].dirty)\\\"\\r\\n                        class=\\\"custom-errorMsg\\\" style=\\\"padding-left: 15px;\\\">\\r\\n                        <div *ngIf=\\\"formdata.controls['branchId'].errors.required\\\">\\r\\n                            Please select plant\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"dept\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Department</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"dept\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"searchDet.deptList\\\" formControlName=\\\"deptId\\\" \\r\\n                            [(ngModel)]=\\\"searchDet.deptId\\\" (onSelect)=\\\"onChange($event,'dept')\\\"\\r\\n                            (onDeSelect)=\\\"onChange(false,'line')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"cell\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Cell / Line</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"cell\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Cell / Line'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"cellLineList\\\" formControlName=\\\"lineIds\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.lineIds\\\" (onSelect)=\\\"onChange($event,line)\\\"\\r\\n                            (onSelectAll)=\\\"onChange($event,'dept')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </perfect-scrollbar>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer footerBlock text-right\\\">\\r\\n            <button class=\\\"btn submitBtn event-btn\\\" type=\\\"submit\\\">\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"load-text\\\">Loading...</span>\\r\\n                <span *ngIf=\\\"!submitSpinner\\\" class=\\\"btn-text\\\">Apply Filter</span>\\r\\n            </button>\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn cancelBtn\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">Cancel</button> -->\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n<!-- Add WorkForce Deployment UI -->\\r\\n<ng-template #addWorkForceModal let-modal let-c=\\\"close\\\">\\r\\n    <app-add-view-workforce [close]=\\\"c\\\" [selectedDet]=\\\"selectedDet\\\"></app-add-view-workforce>\\r\\n</ng-template>\";","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { SkillingService } from \"../skilling.service\";\r\nimport { IDropdownSettings } from \"ng-multiselect-dropdown\";\r\nimport { NgbModal, NgbModalConfig } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport * as ExcelJS from \"exceljs\";\r\nimport * as moment from \"moment\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Sort } from '@angular/material/sort';\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"app-workforce-deployment\",\r\n  templateUrl: \"./workforce-deployment.component.html\",\r\n  styleUrls: [\"./workforce-deployment.component.scss\"],\r\n})\r\nexport class WorkforceDeploymentComponent implements OnInit {\r\n  submitAttempted: boolean = false;\r\n  userDet: any = {};\r\n  cellLineList: any = [];\r\n  filterData: FormGroup;\r\n  searchDet: any = {};\r\n  selectedDet: any = {};\r\n  branchAccessList: any = [];\r\n  workforceList: any = [];\r\n  deptList: any = [];\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  filterFlag: boolean = false;\r\n  listLoader: boolean = false;\r\n  staticPagination: any = {\r\n    total: 0,\r\n    page: 1,\r\n    maxSize: 5,\r\n    itemsPerPage: 10,\r\n    totalPages: 5,\r\n    listLength: 50,\r\n  };\r\n  headings: any = {};\r\n  WorkForceDetails: any = [];\r\n  empListArray: any = [];\r\n  columnsArray: any = [];\r\n  headingName: any = [];\r\n  date: string;\r\n  isAppliedFilter: boolean = false;\r\n  sorting: Sort;\r\n  selectedBranchId: any;\r\n  selectedDeptId: any;\r\n\r\n  constructor(\r\n    private apiService: SkillingService,\r\n    public modalConfig: NgbModalConfig,\r\n    public fb: FormBuilder,\r\n    public modalService: NgbModal\r\n  ) {\r\n    modalConfig.backdrop = \"static\";\r\n    modalConfig.keyboard = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userDet = JSON.parse(localStorage.getItem(\"userDet\"));\r\n    console.log(this.userDet);\r\n\r\n    const today = new Date();\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: \"id\",\r\n      textField: \"name\",\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n\r\n    this.getBranchAccessList();\r\n    this.date = moment(new Date()).format(\"YYYY-MM\");\r\n\r\n    this.filterData = this.fb.group({\r\n      branchId: new FormControl(\"\", Validators.required),\r\n      deptId: new FormControl(\"\"),\r\n      lineIds: new FormControl(\"\"),\r\n\r\n    });\r\n    this.getWorkforceList('');\r\n\r\n  }\r\n\r\n  /* gets Branch access list on employee\r\n     @Author Shashi\r\n     @Date Sept 12, 2023\r\n  */\r\n  getBranchAccessList() {\r\n    this.apiService\r\n      .getBranchAccessList(\r\n        \"getBranchAccessSetupByEmpId/\" +\r\n        this.userDet.organization.orgId +\r\n        \"/\" +\r\n        this.userDet.empId\r\n      )\r\n      .subscribe((res: any) => {\r\n        if (res.result) {\r\n          if (res.branchAccessList != null && res.branchAccessList.length > 0) {\r\n            this.branchAccessList = this.setArray(\r\n              res.branchAccessList,\r\n              \"branchId\",\r\n              \"branchName\"\r\n            );\r\n            this.branchAccessList = this.sortFunction(this.branchAccessList, \"branchName\");\r\n            console.log(this.branchAccessList);\r\n            // this.searchDet.branch = [this.branchAccessList[0]];\r\n            console.log(this.searchDet.branch);\r\n            // this.getDeptList();\r\n          } else {\r\n            this.branchAccessList = [\r\n              {\r\n                id: this.userDet.branch.branchId,\r\n                name: this.userDet.branch.name,\r\n              },\r\n            ];\r\n          }\r\n        } else {\r\n          this.branchAccessList = [\r\n            {\r\n              id: this.userDet.branch.branchId,\r\n              name: this.userDet.branch.name,\r\n            },\r\n          ];\r\n        }\r\n        this.branchAccessList = this.sortFunction(\r\n          this.branchAccessList,\r\n          \"name\"\r\n        );\r\n        // this.searchDet.branch = [this.branchAccessList[0]];\r\n        // this.getDeptList();\r\n        // this.getWorkforceList();\r\n      });\r\n  }\r\n\r\n  /* Change branch selction\r\n     @Author Shashi\r\n     @Date Sptember 12, 2023\r\n  */\r\n  // onChangeBranch(event: any) {\r\n  //   if (event) {\r\n  //     console.log(event);\r\n  //     this.searchDet.dept=[];\r\n  //     this.deptList=[];\r\n  //     this.getDeptList();\r\n  //   } else {\r\n  //     this.cellList = [];\r\n  //     this.searchDet.cell= [];\r\n  //     this.workforceList = [];\r\n  //   }\r\n  // }\r\n  resetFormField(form, keyName) {\r\n    Object.keys(form.controls).forEach((key) => {\r\n      if (key == keyName) {\r\n        form.get(keyName).reset();\r\n        form.get(keyName).markAsPristine();\r\n        form.get(keyName).markAsUntouched();\r\n      }\r\n    });\r\n  }\r\n  onChange(ev: any, type) {\r\n    if (ev) {\r\n      if (type == \"plant\") {\r\n        this.resetFormField(this.filterData, \"searchDet.branch\");\r\n        this.resetFormField(this.filterData, \"searchDet.deptId\");\r\n        this.resetFormField(this.filterData, \"searchDet.lineIds\");\r\n        this.getDeptList(ev);\r\n        //this.getLineNameList(ev);\r\n        this.searchDet.deptId = [];\r\n        this.searchDet.deptList = [];\r\n\r\n      }\r\n      else if (type == \"dept\") {\r\n        console.log(ev)\r\n        this.getCellList(this.searchDet.branch);\r\n        //this.getLineNameList(ev);\r\n        this.searchDet.lineIds = [];\r\n      }\r\n    } else {\r\n      if (type == \"plant\") {\r\n        if (this.searchDet) {\r\n          this.searchDet.deptList = [];\r\n          this.searchDet.lineIds = [];\r\n\r\n        }\r\n      }\r\n      else if (type == \"dept\") {\r\n        if (this.searchDet) {\r\n          this.searchDet.lineIds = [];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getSearchList(ev) {\r\n    this.clearPagination();\r\n    this.searchDet.searchData = ev;\r\n    if (!ev) {\r\n      this.searchDet.searchInput = '';\r\n    }\r\n    if (this.filterFlag) {\r\n      this.getWorkforceList('filter');\r\n    } else {\r\n      this.getWorkforceList('');\r\n    }\r\n  }\r\n  clearPagination() {\r\n    this.staticPagination = {\r\n      total: 0,\r\n      page: 1,\r\n      maxSize: 5,\r\n      itemsPerPage: 10,\r\n      totalPages: 0,\r\n      listLength: 0\r\n    }\r\n  }\r\n\r\n  /* Change dept selction\r\n     @Author Shashi\r\n     @Date Sptember 12, 2023\r\n  */\r\n  // onChangeDept(data: any) {\r\n  //   if (data) {\r\n  //     console.log(\"enter\");\r\n  //     this.searchDet.dept=[{id:data.id,name:data.id}];\r\n  //     this.searchDet.cell=[];\r\n  //     this.cellList=[];\r\n  //     this.getCellList();\r\n  //     // this.getWorkforceList();\r\n  //   } else {\r\n  //     this.cellList = [];\r\n  //     this.searchDet.cell = [];\r\n  //     this.workforceList = [];\r\n  //   }\r\n  // }\r\n  onChangeCell(data: any) {\r\n    if (data) {\r\n      // this.getWorkforceList();\r\n    } else {\r\n      this.workforceList = [];\r\n    }\r\n  }\r\n  removeFilter() {\r\n    this.isAppliedFilter = false;\r\n    this.filterData.reset();\r\n    this.searchDet.branch = [];\r\n    this.searchDet.deptId = [];\r\n    this.searchDet.lineIds = [];\r\n    this.searchDet.fromDate = null;\r\n    this.searchDet.toDate = null;\r\n    //this.searchDet.statusId = [];\r\n    this.getWorkforceList('');\r\n  }\r\n\r\n  submitFilterForm(form) {\r\n    this.submitAttempted = true;\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    this.clearPagination();\r\n    this.isAppliedFilter = true;\r\n    this.searchDet.filterFlag = true;\r\n    this.getWorkforceList('filter');\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  getDeptList(branch) {\r\n    if (this.searchDet.branch != null && this.searchDet.branch.length > 0) {\r\n      this.apiService\r\n        .getdepartmentlistbybranchid(\r\n          \"getdepartmentlistbybranchid/\" + branch.id\r\n        )\r\n        .subscribe((res: any) => {\r\n          if (res.result) {\r\n            console.log(res);\r\n            if (res.deptList != null && res.deptList.length > 0) {\r\n              /* Use For Add Screen */\r\n              console.log(res.deptList);\r\n              this.searchDet.deptList = this.setArray(res.deptList, \"deptId\", \"deptName\");\r\n              this.searchDet.deptList = this.sortFunction(this.searchDet.deptList, \"deptName\");\r\n              // this.searchDet.dept = [this.deptList[0]];\r\n              // this.getCellList();\r\n            } else {\r\n              this.searchDet.deptList = [];\r\n            }\r\n          } else {\r\n            this.searchDet.deptList = [];\r\n          }\r\n        });\r\n    } else {\r\n      // this.cellList = [];\r\n      // this.searchDet.cell = [];\r\n      // this.workforceList = [];\r\n    }\r\n  }\r\n\r\n  /* get department list on branch selection\r\n     @Author Shashi\r\n    * @Date August 12, 2023\r\n  */\r\n  getCellList(branchId) {\r\n    this.selectedBranchId = this.searchDet.branch[0].id;\r\n    console.log(this.selectedBranchId);\r\n    this.selectedDeptId = this.searchDet.deptId[0].id;\r\n    console.log(this.selectedDeptId)\r\n    const data = {\r\n      branchId: this.selectedBranchId,\r\n      deptId: this.selectedDeptId\r\n    };\r\n    // var req: any = {\r\n    //   branchId: this.searchDet.branch[0].id,\r\n    //   deptId : this.searchDet.dept[0].id\r\n    // };\r\n    // if (this.searchDet.dept != null && this.searchDet.dept.length > 0) {\r\n    //   req.deptId = this.searchDet.dept[0].id;\r\n    // }\r\n    console.log(data);\r\n    this.apiService\r\n      .getCellList(\"apis/sm/getCellList\", data)\r\n      .subscribe((response: any) => {\r\n        if (response.result) {\r\n          if (response.dataList != null && response.dataList.length > 0) {\r\n            console.log(response.dataList)\r\n            this.cellLineList = this.setArray(\r\n              response.dataList,\r\n              \"lineId\",\r\n              \"lineName\"\r\n            );\r\n            this.cellLineList = this.sortFunction(\r\n              this.cellLineList,\r\n              \"lineName\"\r\n            );\r\n            // this.searchDet.cell = [this.cellList[0]];\r\n            // this.getWorkforceList();\r\n          } else {\r\n            this.cellLineList = [];\r\n          }\r\n        } else {\r\n          this.cellLineList = [];\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  getWorkforceList(searchFilter) {\r\n    this.workforceList = [];\r\n    this.listLoader = true;\r\n    let req: any = {\r\n      branchId: this.userDet.branch.branchId,\r\n      orgId: this.userDet.organization.orgId,\r\n      offset: this.staticPagination.offset,\r\n      limit: this.staticPagination.itemsPerPage,\r\n    };\r\n    if (this.staticPagination.page == 1) {\r\n      this.staticPagination.offset = 0;\r\n    } else {\r\n      this.staticPagination.offset = (this.staticPagination.page - 1) * this.staticPagination.itemsPerPage;\r\n    }\r\n    if (this.sorting) {\r\n      if (this.sorting.direction != \"\") {\r\n        req.colName = this.sorting.active;\r\n        req.orderType = this.sorting.direction.toUpperCase();\r\n      } else {\r\n        //Default Sort\r\n        // req.colName = \"empName\";\r\n        // req.orderType = \"ASC\";\r\n      }\r\n    } else {\r\n      //Default Sort\r\n      // req.colName = \"empName\";\r\n      // req.orderType = \"DESC\";\r\n    }\r\n    if (searchFilter == 'filter') {\r\n      if (this.searchDet.branchId != null && this.searchDet.branchId.length > 0) {\r\n        req.branchId = this.searchDet.branchId[0].id;\r\n      }\r\n      if (this.searchDet.deptId != null && this.searchDet.deptId.length > 0) {\r\n        req.deptId = this.searchDet.deptId[0].id;\r\n      }\r\n      if (this.searchDet.lineIds != null && this.searchDet.lineIds.length > 0) {\r\n        req.lineIds = this.getIDsArray(this.searchDet.lineIds);\r\n      }\r\n      if (this.searchDet.fromDate != null) {\r\n        req.fromDt = moment(this.searchDet.fromDate).format(\"YYYY-MM-DD\");\r\n      }\r\n      if (this.searchDet.toDate != null) {\r\n        req.toDate = moment(this.searchDet.toDate).format(\"YYYY-MM-DD\");\r\n      }\r\n      // if (this.searchDet.statusId != null) {\r\n      //   req.status = this.searchDet.statusId[0].id;\r\n      // }\r\n    }\r\n    if (this.searchDet.searchData && this.searchDet.searchInput && this.searchDet.searchInput != '') {\r\n      req.search = this.searchDet.searchInput;\r\n    }\r\n    this.staticPagination.listLength = 10;\r\n\r\n    console.log(req);\r\n    this.apiService\r\n      .getWorkforceDeploymentData(\"apis/sm/getWorkForceDeploymentList\", req)\r\n      .subscribe((res: any) => {\r\n        this.listLoader = false;\r\n        if (res.result) {\r\n          if (res.dataList != null && res.dataList.length > 0) {\r\n            this.workforceList = res.dataList;\r\n            console.log(this.workforceList)\r\n            if (this.staticPagination.page == 1) {\r\n              this.staticPagination.total = res.totalCount;\r\n              this.staticPagination.totalPages = (this.staticPagination.total > 0) ? Math.ceil(this.staticPagination.total / this.staticPagination.itemsPerPage) : 0;\r\n            }\r\n            //If showing action list for stage 1 then sorting it day wise 1 to N\r\n            let isStage1 = true;\r\n            this.workforceList.forEach(element => {\r\n              if (element.stageId != 1) {\r\n                isStage1 = false;\r\n              }\r\n            });\r\n\r\n            if (isStage1) {\r\n              this.workforceList = this.workforceList.sort(function (a, b) {\r\n                return a.dayNo - b.dayNo;\r\n              });\r\n            }\r\n\r\n            this.staticPagination.listLength = this.workforceList.length;\r\n          } else {\r\n            this.workforceList = [];\r\n            this.staticPagination.listLength = this.workforceList.length;\r\n          }\r\n          this.staticPagination.listLength = this.workforceList.length;\r\n        } else {\r\n          this.workforceList = [];\r\n          this.staticPagination.listLength = this.workforceList.length;\r\n        }\r\n      })\r\n  }\r\n  //     } else {\r\n  //       this.actionList = [];\r\n  //       this.staticPagination.listLength = this.actionList.length;\r\n  //       //this.staticPagination.total = this.actionList.length;\r\n  //     }\r\n  //   }), (error: any) => {\r\n  //     this.listLoading = false;\r\n  //   });\r\n  // }\r\n  sortData(sort: Sort) {\r\n    this.sorting = sort;\r\n    console.log(this.sorting);\r\n    this.getWorkforceList('');\r\n  }\r\n  getWorkForceDeploymentDetails(data) {\r\n    this.headings.lineName = data.lineName;\r\n    this.headings.deptName = data.deptName;\r\n    this.headings.branchName = data.branchName;\r\n    this.headings.shiftName = data.shiftName;\r\n    console.log(data);\r\n    var req: any = {\r\n      deptId: data.deptId,\r\n      branchId: data.branchId,\r\n      lineId: data.lineId,\r\n      shiftId: data.shiftId,\r\n    };\r\n    data.toDate = moment(new Date()).format(\"YYYY-MM\");\r\n    // req.fromDt = moment(data.fromDate).format(\"YYYY-MM-DD\");\r\n    // req.toDt =  moment(data.toDate).format(\"YYYY-MM-DD\");\r\n\r\n    console.log(req);\r\n    this.apiService\r\n      .getWorkForceDeploymentDetails(\r\n        \"apis/sm/getWorkForceDeploymentDetails\",\r\n        req\r\n      )\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        if (res.result) {\r\n          this.WorkForceDetails = res.data;\r\n          this.columnsArray = this.WorkForceDetails.columns;\r\n          this.empListArray = this.WorkForceDetails.empList;\r\n          this.exportToExcel();\r\n          console.log(this.WorkForceDetails);\r\n        }\r\n      });\r\n  }\r\n\r\n  addWorkForce(modal, data, type) {\r\n    this.selectedDet = data;\r\n    this.selectedDet.title = type;\r\n    var modalRef = this.modalService.open(modal, {\r\n      windowClass: \"right\",\r\n    });\r\n    modalRef.result.then(\r\n      (result) => {\r\n        if (result === \"success\") {\r\n          this.getWorkforceList('');\r\n        }\r\n        else {\r\n          this.getWorkforceList('');\r\n        }\r\n      },\r\n      (reason) => {\r\n        console.log(reason);\r\n        this.getWorkforceList('');\r\n      }\r\n    );\r\n  }\r\n  filterModalOpen(modal) {\r\n    this.filterFlag = true\r\n    this.modalService.open(modal, {\r\n      windowClass: 'filterPopup',\r\n    });\r\n    this.getWorkforceList('filter');\r\n  }\r\n  sortFunction(array, key) {\r\n    if (array != null && array.length > 0) {\r\n      array.sort(function (a, b) {\r\n        var nameA = !Number(a[key]) ? a[key].toUpperCase() : a[key];\r\n        var nameB = !Number(b[key]) ? b[key].toUpperCase() : b[key];\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /*\r\n     Common function for set an array for dropdown\r\n     Author: Shashi\r\n     Date : 12 Aug 2023\r\n  */\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n  /*\r\n     Common function For get Ids from array\r\n     Author: Shashi\r\n     Date : 12 Sept, 2023\r\n  */\r\n  getIDsArray(array) {\r\n    let tmp: any = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        tmp.push(element.id);\r\n      }\r\n    }\r\n    return tmp;\r\n  }\r\n  exportToExcel(): void {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Skill Matrix\");\r\n\r\n    const greenFill: ExcelJS.Fill = {\r\n      type: \"pattern\",\r\n      pattern: \"solid\",\r\n      fgColor: { argb: \"99cd3a\" },\r\n    };\r\n\r\n    const yellowFill: ExcelJS.Fill = {\r\n      type: \"pattern\",\r\n      pattern: \"solid\",\r\n      fgColor: { argb: \"FFFFFF00\" },\r\n    };\r\n    const headers = [\r\n      \"Emp Id\",\r\n      \"Emp Name\",\r\n      // \"Cell/Name\",\r\n      \"Work Station\",\r\n      // \"Skill Level\",\r\n    ];\r\n\r\n    const commonColumnWidth = 15; // You can adjust this value as needed\r\n\r\n    for (let i = 1; i <= headers.length; i++) {\r\n      worksheet.getColumn(1).width = commonColumnWidth;\r\n    }\r\n    worksheet.getColumn(2).width = 25;\r\n    worksheet.getColumn(3).width = 25;\r\n    const mainHeading = Array(headers.length).fill(\"\");\r\n    const centerIndex = Math.floor(headers.length / 2);\r\n    mainHeading[centerIndex] = this.headingName;\r\n\r\n    // Set the height of the first row\r\n    worksheet.getRow(1).height = 30;\r\n    worksheet.getRow(2).height = 30;\r\n    worksheet.getRow(3).height = 30;\r\n    // Make the text in the first row bold\r\n    worksheet.getRow(1).font = {\r\n      bold: true,\r\n    };\r\n    worksheet.getRow(2).font = {\r\n      bold: true,\r\n    };\r\n    worksheet.getRow(3).font = {\r\n      bold: true,\r\n    };\r\n\r\n    worksheet.mergeCells(\"A1:C1\"); // Merge cells from A1 to K1\r\n    worksheet.getCell(\"A1\").value = \"Plant :\" + this.headings.branchName + \"     \" + \"Department :\" + this.headings.deptName + \"     \" + \"Shift :\" + this.headings.shiftName // Set the value for the merged cell\r\n    // worksheet.getCell(\"A1\").fill = greenFill; // Apply the fill color\r\n    worksheet.getCell(\"A1\").alignment = {\r\n      horizontal: \"center\",\r\n      vertical: \"middle\",\r\n      wrapText: true,\r\n    }; // Center the text\r\n\r\n    // Set the height of the merged cell\r\n    worksheet.getCell(\"A1\").border = {\r\n      top: { style: 'thin' }, // Add a thin border to the top\r\n      bottom: { style: 'thin' }, // Add a thin border to the bottom\r\n    };\r\n\r\n    worksheet.mergeCells(\"A2:C2\"); // Merge cells from A2 to K1\r\n    worksheet.getCell(\"A2\").value = this.headings.lineName // Set the value for the merged cell\r\n    worksheet.getCell(\"A2\").fill = greenFill; // Apply the fill color\r\n    worksheet.getCell(\"A2\").alignment = {\r\n      horizontal: \"center\",\r\n      vertical: \"middle\",\r\n      wrapText: true,\r\n    }; // Center the text\r\n\r\n    // Set the height of the merged cell\r\n    worksheet.getCell(\"A2\").border = {\r\n      top: { style: 'thin' }, // Add a thin border to the top\r\n      bottom: { style: 'thin' }, // Add a thin border to the bottom\r\n    };\r\n\r\n    worksheet.mergeCells(\"A3:C3\"); // Merge cells from A1 to K1\r\n    worksheet.getCell(\"A3\").value = \"Fron Date :\" + moment(this.WorkForceDetails.empList[0].fromDate).format(\"DD-MM-YYY\") + \"    To Date :\" + moment(this.WorkForceDetails.empList[0].toDate).format(\"DD-MM-YYYY\");\r\n    worksheet.getCell(\"A3\").fill = yellowFill; // Apply the fill color\r\n    worksheet.getCell(\"A3\").alignment = {\r\n      horizontal: \"center\",\r\n      vertical: \"middle\",\r\n      wrapText: true,\r\n    }; // Center the text\r\n\r\n    // Set the height of the merged cell\r\n    worksheet.getCell(\"A3\").border = {\r\n      top: { style: 'thin' }, // Add a thin border to the top\r\n      bottom: { style: 'thin' }, // Add a thin border to the bottom\r\n    };\r\n    worksheet.addRow(headers);\r\n\r\n    // Add data to the worksheet\r\n    this.WorkForceDetails.empList.forEach((item) => {\r\n      const row = [\r\n        // moment(item.fromDate).format(\"YYYY-MM-DD\"),\r\n        // moment(item.toDate).format(\"YYYY-MM-DD\"),\r\n        item.companyEmpId,\r\n        item.empName,\r\n        // item.line,\r\n        item.workstationName,\r\n        // item.currentSkillLevel,\r\n      ];\r\n      worksheet.addRow(row);\r\n    });\r\n\r\n    // Generate Excel file\r\n    workbook.xlsx.writeBuffer().then((data) => {\r\n      const blob = new Blob([data], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = \"skill-matrix.xlsx\";\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, SimpleChanges, Inject } from '@angular/core';\r\nimport { SkillingService } from '../../skilling.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { AlertService } from 'src/app/theme/shared/components';\r\nimport { MatDatepicker, MatDatepickerInputEvent, MatDatepickerModule } from '@angular/material/datepicker';\r\nimport * as moment from 'moment';\r\nimport { error } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-add-view-workforce',\r\n  templateUrl: './add-view-workforce.component.html',\r\n  styleUrls: ['./add-view-workforce.component.scss']\r\n})\r\nexport class AddViewWorkforceComponent implements OnInit {\r\n  @Input() close;\r\n  @Input() selectedDet;\r\n  searchDet: any = {};\r\n  shiftList: any = [];\r\n  branchAccessList: any = [];\r\n  deptList: any = [];\r\n  cellList: any = [];\r\n  userDet: any = {};\r\n  submitLoader: boolean = false;\r\n  listLoader: boolean = false;\r\n  skillMatrixDetails: any = {};\r\n  columns = [];\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  constant: any = {};\r\n  minDate: any = moment();\r\n  constructor(\r\n    public apiService: SkillingService,\r\n    public alertService: AlertService,\r\n    @Inject('Constant') Constant: any\r\n  ) {\r\n    this.constant = Constant;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userDet = JSON.parse(localStorage.getItem('userDet'));\r\n    this.minDate = new Date();\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    if (this.selectedDet.title == 'View') {\r\n      this.searchDet = {\r\n        branch: [{ id: this.selectedDet.branchId, name: this.selectedDet.branchName }],\r\n        dept: [{ id: this.selectedDet.deptId, name: this.selectedDet.deptName }],\r\n        cell: [{ id: this.selectedDet.lineId, name: this.selectedDet.lineName }],\r\n        shift: [{ id: this.selectedDet.shiftId, name: this.selectedDet.shiftName }],\r\n        maxDate: new Date(moment(new Date()).format(\"YYYY,MM,DD\")),\r\n        fromDate: new Date(moment(this.selectedDet.fromDate).format(\"YYYY,MM,DD\")),\r\n        toDate: new Date(moment(this.selectedDet.toDate).format(\"YYYY,MM,DD\"))\r\n      }\r\n      this.getWFDetails();\r\n    } else {\r\n      this.searchDet.maxDate = new Date(moment(new Date()).format(\"YYYY,MM,DD\"));\r\n      this.getBranchAccessList();\r\n    }\r\n  }\r\n  /* gets Branch access list on employee\r\n       @Author Mahesh\r\n       @Date Oct 05, 2023\r\n    */\r\n  getBranchAccessList() {\r\n    this.apiService.getBranchAccessList('getBranchAccessSetupByEmpId/' + this.userDet.organization.orgId + \"/\" + this.userDet.empId).subscribe((res: any) => {\r\n      if (res.result) {\r\n        if (res.branchAccessList != null && res.branchAccessList.length > 0) {\r\n          this.branchAccessList = this.setArray(res.branchAccessList, 'branchId', 'branchName');\r\n        } else {\r\n          this.branchAccessList = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n        }\r\n      } else {\r\n        this.branchAccessList = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n      }\r\n      this.branchAccessList = this.sortFunction(this.branchAccessList, 'branchName');\r\n      this.searchDet.branch = [this.branchAccessList[0]];\r\n      this.getDeptList();\r\n      this.getShiftData(this.searchDet.branch[0]);\r\n    })\r\n  }\r\n\r\n  /* Change branch selction\r\n     @Author Mahesh\r\n     @Date Oct 05, 2023\r\n  */\r\n  onChangeBranch(event: any) {\r\n    if (event) {\r\n      this.getDeptList();\r\n      // this.getCellList(event);\r\n      this.getShiftData(event);\r\n      this.shiftList = [];\r\n      this.searchDet.shift = [];\r\n    } else {\r\n      this.deptList = [];\r\n      this.searchDet.dept = [];\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n      this.shiftList = [];\r\n      this.searchDet.shift = [];\r\n    }\r\n  }\r\n\r\n  onChangeDept(data: any) {\r\n    if (data) {\r\n      this.getCellList();\r\n      // this.getSkillMatixData();\r\n      // this.getShiftData(data);\r\n    } else {\r\n      this.skillMatrixDetails = {};\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n    }\r\n  }\r\n  /* Change dept selction\r\n     @Author Mahesh\r\n     @Date Oct 05, 2023\r\n  */\r\n  onChangeCell(data: any) {\r\n    if (data) {\r\n      this.getSkillMatixData();\r\n    } else {\r\n      this.skillMatrixDetails = {};\r\n    }\r\n  }\r\n  /* Change dept selction\r\n     @Author Mahesh\r\n     @Date Oct 05, 2023\r\n  */\r\n  onChangeShift(data: any) {\r\n    if (data) {\r\n\r\n    } else {\r\n\r\n    }\r\n  }\r\n  getDeptList() {\r\n    if (this.searchDet.branch != null && this.searchDet.branch.length > 0) {\r\n      this.apiService.getdepartmentlistbybranchid('getdepartmentlistbybranchid/' + this.searchDet.branch[0].id).subscribe((res: any) => {\r\n        if (res.result) {\r\n          if (res.deptList != null && res.deptList.length > 0) {\r\n            /* Use For Add Screen */\r\n            this.deptList = this.setArray(res.deptList, 'deptId', 'deptName');\r\n            this.deptList = this.sortFunction(this.deptList, 'deptName');\r\n            this.searchDet.dept = [this.deptList[0]];\r\n            this.getCellList();\r\n            // this.getSkillMatixData();\r\n          } else {\r\n            this.deptList = [];\r\n          }\r\n        } else {\r\n          this.deptList = [];\r\n        }\r\n      })\r\n    } else {\r\n      this.cellList = [];\r\n      this.searchDet.cell = [];\r\n      this.skillMatrixDetails = {};\r\n    }\r\n  }\r\n\r\n  /* get department list on branch selection\r\n     @Author Mahesh\r\n    * @Date Oct 05, 2023\r\n  */\r\n  getCellList() {\r\n    var req: any = {\r\n      branchId: this.searchDet.branch[0].id\r\n    }\r\n    if (this.searchDet.dept != null && this.searchDet.dept.length > 0) {\r\n      req.deptId = this.searchDet.dept[0].id;\r\n    }\r\n    this.apiService.getCellList('apis/sm/getCellList', req).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          response.dataList = this.sortFunction(response.dataList, 'lineName');\r\n          this.cellList = this.setArray(response.dataList, 'lineId', 'lineName');\r\n          this.searchDet.cell = [this.cellList[0]];\r\n          this.getSkillMatixData();\r\n        } else {\r\n          this.cellList = [];\r\n        }\r\n      } else {\r\n        this.cellList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  getShiftData(branch) {\r\n    let req = {\r\n      branchId: branch.id\r\n    }\r\n    this.apiService.getShiftData('apis/sm/getShiftList', req).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          response.dataList = this.sortFunction(response.dataList, 'shiftName');\r\n          this.shiftList = this.setArray(response.dataList, 'id', 'shiftName');\r\n        } else {\r\n          this.shiftList = [];\r\n        }\r\n      } else {\r\n        this.shiftList = [];\r\n      }\r\n    })\r\n  }\r\n  selectDate(type, ev) {\r\n\r\n  }\r\n\r\n  getWFDetails() {\r\n    this.skillMatrixDetails = {};\r\n    this.listLoader = true;\r\n    let req: any = {\r\n      \"deptId\": this.selectedDet.deptId,\r\n      \"shiftId\": this.selectedDet.shiftId,\r\n      \"branchId\": this.selectedDet.branchId,\r\n      \"lineId\": this.selectedDet.lineId\r\n    }\r\n    this.apiService.getWFDetailsList('apis/sm/getWorkForceDeploymentDetails', req).subscribe((res: any) => {\r\n      this.listLoader = false;\r\n      if (res.result) {\r\n        this.skillMatrixDetails = res.data;\r\n        if (this.skillMatrixDetails.columns != null && this.skillMatrixDetails.columns.length > 0) {\r\n          for (let index = 0; index < this.skillMatrixDetails.columns.length; index++) {\r\n            this.skillMatrixDetails.columns[index].id = this.skillMatrixDetails.columns[index].workstationId;\r\n            this.skillMatrixDetails.columns[index].levelName = this.skillMatrixDetails.columns[index].level;\r\n          }\r\n        }\r\n        if (this.skillMatrixDetails.empList != null && this.skillMatrixDetails.empList.length > 0) {\r\n          this.selectedWorkForceData = [];\r\n          for (let index = 0; index < this.skillMatrixDetails.empList.length; index++) {\r\n            this.skillMatrixDetails.empList[index].isSelected = true;\r\n            this.selectedWorkForceData.push(this.skillMatrixDetails.empList[index]);\r\n          }\r\n        }\r\n\r\n      } else {\r\n        this.skillMatrixDetails = {};\r\n      }\r\n    }, (error: any) => {\r\n      this.skillMatrixDetails = {};\r\n      this.listLoader = false;\r\n    })\r\n  }\r\n  getSkillMatixData() {\r\n    this.skillMatrixDetails = {};\r\n    this.listLoader = true;\r\n    let req: any = {\r\n      \"orgId\": this.userDet.organization.orgId,\r\n      \"branchId\": this.searchDet.branch[0].id\r\n    }\r\n    if (this.searchDet.dept != null && this.searchDet.dept.length > 0) {\r\n      req.deptId = this.searchDet.dept[0].id;\r\n    }\r\n    if (this.searchDet.cell != null && this.searchDet.cell.length > 0) {\r\n      req.lineId = this.searchDet.cell[0].id;\r\n    }\r\n    // getSkillMatrixList\r\n    this.apiService.getSkillMatrixData('apis/sm/getSkillMatrixEmpList', req).subscribe((res: any) => {\r\n      console.log(res);\r\n      this.listLoader = false;\r\n      if (res.result) {\r\n        this.skillMatrixDetails = res.data;\r\n        if (this.skillMatrixDetails.tableData != null && this.skillMatrixDetails.tableData.length > 0) {\r\n          this.columns = [];\r\n          for (let i = 0; i < this.skillMatrixDetails.columns.length; i++) {\r\n            this.columns.push(this.skillMatrixDetails.columns[i].field);\r\n            // console.log(this.columns)\r\n          }\r\n          // for (let j = 0; j < this.skillMatrixDetails.tableData.length; j++) {\r\n          //   for (let i = 0; i < this.columns.length; i++) {\r\n          //     const result = this.isCheckedStatus(this.skillMatrixDetails.tableData[j], this.columns[i]);\r\n          //     // Check if the object exists before updating the property\r\n          //     if (this.skillMatrixDetails.tableData[j]) {\r\n          //       this.skillMatrixDetails.tableData[j].isEligible = result;\r\n          //     }\r\n          //   }\r\n          // }\r\n          console.log(this.skillMatrixDetails);\r\n\r\n          for (let index = 0; index < this.skillMatrixDetails.tableData.length; index++) {\r\n            this.skillMatrixDetails.tableData[index].isSelected = false;\r\n          }\r\n        }\r\n        this.skillMatrixDetails.tableDataCopy = this.setArray(this.skillMatrixDetails.tableData, 'empId', 'empName');\r\n        this.skillMatrixDetails.tableData = this.setArray(this.skillMatrixDetails.tableData, 'empId', 'empName');\r\n      } else {\r\n        this.skillMatrixDetails = {};\r\n      }\r\n    }, (error: any) => {\r\n      this.skillMatrixDetails = {};\r\n      this.listLoader = false;\r\n    })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log(changes);\r\n    if (this.selectedWorkForceData != null && this.selectedWorkForceData.length > 0) {\r\n      for (const element of this.selectedWorkForceData) {\r\n        let i = this.skillMatrixDetails.tableData.length;\r\n        while (i--) {\r\n          this.skillMatrixDetails.tableData[i].isSelected = false;\r\n          if (this.skillMatrixDetails.tableData[i].empId == element.empId) {\r\n            this.skillMatrixDetails.tableData[i].isSelected = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Comparison of Required skill level & Current skill level\r\n     @Author Sanket B. (Modifier)\r\n    * @Date Dec 28, 2023\r\n  */\r\n  isCheckedStatus(row: any, field: any) {\r\n    for (let item in row) {\r\n      if (field === item && row[item].hasOwnProperty(\"currentSkillLevelId\") && row[item].hasOwnProperty(\"requireSkillLevelId\")) {\r\n        const currentLevel = row[item].currentSkillLevelId;\r\n        const requiredLevel = row[item].requireSkillLevelId;\r\n        if (currentLevel >= requiredLevel) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  // return obj;\r\n  // }\r\n  isEligibleCheck(ev, row) {\r\n    let flag = false;\r\n    // console.log(row.levelId + '>' + ev[row.field].currentSkillLevelId)\r\n    if (ev[row.field].currentSkillLevelId >= row.levelId) {\r\n      flag = true;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  selectedWorkForceData: any = [];\r\n  onChangeEmp(ev, row, type) {\r\n    console.log(ev)\r\n    console.log(row)\r\n    if (type == 'add') {\r\n      let name = ev.name;\r\n      if (!this.isObjectEmpty(this.isChecked(ev, row.field))) {\r\n        name += ' (' + this.isChecked(ev, row.field).level + ')';\r\n      }\r\n      let obj = {\r\n        \"empId\": ev.id,\r\n        \"empName\": name,\r\n        \"workstationId\": row.id,\r\n        \"isSelected\": true,\r\n        \"isEligible\": this.isEligibleCheck(ev, row)\r\n      }\r\n      this.selectedWorkForceData.push(obj);\r\n      let j = this.skillMatrixDetails.tableData.length;\r\n      while (j--) {\r\n        if (this.skillMatrixDetails.tableData[j].empId == ev.empId)\r\n          this.skillMatrixDetails.tableData[j].isSelected = true;\r\n      }\r\n      console.log(this.selectedWorkForceData)\r\n    } else {\r\n      if (this.selectedWorkForceData != null && this.selectedWorkForceData.length > 0) {\r\n        let i = this.selectedWorkForceData.length;\r\n        while (i--) {\r\n          if (this.selectedWorkForceData[i].empId == ev.empId)\r\n            this.selectedWorkForceData.splice(i, 1);\r\n        }\r\n      }\r\n      let j = this.skillMatrixDetails.tableData.length;\r\n      while (j--) {\r\n        if (this.skillMatrixDetails.tableData[j].empId == ev.empId)\r\n          this.skillMatrixDetails.tableData[j].isSelected = false;\r\n      }\r\n    }\r\n  }\r\n  saveWorkForce() {\r\n    this.submitLoader = true;\r\n    let cellObj: any = {};\r\n    // if (this.searchDet.cell != null && this.searchDet.cell.length > 0) {\r\n    //   cellObj = this.cellList.filter(x => x.id == this.searchDet.cell[0].id);\r\n    // } else {\r\n    //   this.alertService.error('Please select cell / line');\r\n    //   this.submitLoader = false;\r\n    //   return;\r\n    // }\r\n    if (this.searchDet.dept == null || this.searchDet.dept.length == 0) {\r\n      this.alertService.error('Please select department');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n    if (this.searchDet.cell == null || this.searchDet.cell.length == 0) {\r\n      this.alertService.error('Please select cell / line');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n    if (this.searchDet.shift == null || this.searchDet.shift.length == 0) {\r\n      this.alertService.error('Please select shift');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n    if (!this.searchDet.fromDate || !this.searchDet.toDate) {\r\n      this.alertService.error('Please select from and to date');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n    if (this.selectedWorkForceData != null && this.selectedWorkForceData.length > 0) {\r\n      for (let index = 0; index < this.selectedWorkForceData.length; index++) {\r\n        this.selectedWorkForceData[index].deptId = this.searchDet.dept[0].id;\r\n        this.selectedWorkForceData[index].lineId = this.searchDet.cell[0].id;\r\n        this.selectedWorkForceData[index].shiftId = this.searchDet.shift[0].id;\r\n        this.selectedWorkForceData[index].fromDt = moment(this.searchDet.fromDate).format('YYYY-MM-DD');\r\n        this.selectedWorkForceData[index].toDt = moment(this.searchDet.toDate).format('YYYY-MM-DD');\r\n      }\r\n    }\r\n    let req: any = {\r\n      createdBy: this.userDet.empId,\r\n      empList: this.selectedWorkForceData\r\n    }\r\n    if (req.empList == null || req.empList.length == 0) {\r\n      this.alertService.error('Please select employee');\r\n      this.submitLoader = false;\r\n      return;\r\n    }\r\n    console.log(req);\r\n    /* let x = 0;\r\n    if (x == 0) {\r\n      this.submitLoader = false;\r\n      return;\r\n    } */\r\n    this.apiService.saveWorkforceData('apis/sm/saveWorkForceDeployment', req).subscribe((res: any) => {\r\n      this.submitLoader = false;\r\n      if (res.result) {\r\n        this.alertService.success('Workforce deployment saved successfully.');\r\n        this.close('Cross Click');\r\n      } else {\r\n        if (res.statusCode == 100) {\r\n          this.alertService.error(res.reason);\r\n        } else {\r\n          this.alertService.error('Error occurred while saving data. Please try again');\r\n        }\r\n      }\r\n    }, (error: any) => {\r\n      this.submitLoader = false;\r\n    })\r\n\r\n  }\r\n  isObjectEmpty(objectName) {\r\n    return Object.keys(objectName).length == 0\r\n  }\r\n\r\n  isChecked(row: any, field: string) {\r\n    let obj: any = {};\r\n    // console.log(row, field)\r\n    for (let item in row) {\r\n      if (this.selectedDet.title == 'View') {\r\n        if (field == row.workstationName) {\r\n          if (!this.isObjectEmpty(row) && row.hasOwnProperty(\"currentSkillLevel\") && row.hasOwnProperty(\"currentSkillLevelId\") && row.currentSkillLevelId != null) {\r\n            if (row.currentSkillLevelId) {\r\n              return { 'status': this.constant.EQUAL, level: row.currentSkillLevel };\r\n            }\r\n          } else {\r\n            if (row.currentSkillLevelId == null) {\r\n              return { 'status': this.constant.NOT_ELIGIBLE, level: 'L0' };\r\n            } else {\r\n              return { 'status': this.constant.NOT_ELIGIBLE, level: 'L0' };\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if (field == item) {\r\n        // console.log(item);\r\n        if (!this.isObjectEmpty(row) && row[item].hasOwnProperty(\"currentSkillLevel\") && row[item].hasOwnProperty(\"currentSkillLevelId\")) {\r\n          if (row[item].currentSkillLevelId == row[item].requireSkillLevelId) {\r\n            return { 'status': this.constant.EQUAL, level: row[item].currentSkillLevel };\r\n          } else if (row[item].currentSkillLevelId > row[item].requireSkillLevelId) {\r\n            return { 'status': this.constant.EQUAL, level: row[item].currentSkillLevel };\r\n          } else if ((row[item].requireSkillLevelId - row[item].currentSkillLevelId) == 1) {\r\n            return { 'status': this.constant.ELIGIBLE, level: row[item].currentSkillLevel };\r\n          } else if ((row[item].requireSkillLevelId - row[item].currentSkillLevelId) > 1) {\r\n            return { 'status': this.constant.NOT_ELIGIBLE, level: row[item].currentSkillLevel };\r\n          }\r\n        } else {\r\n          if (row[item].requireSkillLevelId == 1) {\r\n            return { 'status': this.constant.NOT_ELIGIBLE, level: 'L0' };\r\n          } else {\r\n            return { 'status': this.constant.NOT_ELIGIBLE, level: 'L0' };\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  sortFunction(array, key) {\r\n    if (array != null && array.length > 0) {\r\n      array.sort(function (a, b) {\r\n        var nameA = (!Number(a[key])) ? a[key].toUpperCase() : a[key];\r\n        var nameB = (!Number(b[key])) ? b[key].toUpperCase() : b[key];\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n\r\n  /*\r\n     Common function for set an array for dropdown\r\n     Author: Mahesh\r\n     Date : 05 Oct 2023\r\n  */\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../shared/auth/http.service'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillingService {\r\n \r\n  deleteOJTPlan(url: any) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n  ) { }\r\n\r\n  getBranchAccessList(url: any) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n\r\n  getdepartmentlistbybranchid(url: any) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n  getOJTPlan(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getOJTRegistration(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getSkillMatrixList(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getWorkforceResourceList(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getSkillMatrixEmpList(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getWorkstationList(url: any, getReq: any) {\r\n    return this.httpService.postMethod(url, getReq);\r\n  }\r\n  submitOJTPlan(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  submitOJTRegi(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getOJTPlanDetails(url: any) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n  getUserTypeList(url: any, reqData: any) {\r\n    return this.httpService.postMethod(url, reqData);\r\n  }\r\n  getCellList(url: any, req: any) {\r\n    return this.httpService.postMethod(url, req);\r\n  }\r\n  getWorkForceDeploymentDetails(url: any, req: any) {\r\n    return this.httpService.postMethod(url, req);\r\n  }\r\n  // ---------------mySkilling Certificate API's by @Saurabh salunke ---------------------\r\n  /* Get Department List by BranchId */\r\n  getDepartmentByBranch(url: any) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n  // get master certificate list\r\n  getCertificateList(url: any, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n\r\n  // you will get assessment list here simran\r\n  getAssessmentDisplay(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n\r\n  // you will get level list here simran\r\n  getMasterLevelList(url: string) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n  // you will get department list here simran\r\n  getMasterDepartmentList(url: string) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n  // you will get skilling action list here simran\r\n  getSkillMatrixActionList(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n  getSkillMatrixData(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n  getShiftData(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n  getWorkforceDeploymentData(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n  getWFDetailsList(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n  saveWorkforceData(url: string, data: any) {\r\n    return this.httpService.postMethod(url, data);\r\n  }\r\n\r\n  getOJTRegistrationDetails(url: any) {\r\n    return this.httpService.getMethod(url);\r\n  }\r\n  // getWorkforceList(req: any) {\r\n  //   return this.httpService.postMethod('apis/sm/getWorkForceDeploymentList', req); \r\n  // }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SkillingService } from '../skilling.service'\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AssessessmentDetailModalComponent } from 'src/app/theme/shared/components/assessessment-detail-modal/assessessment-detail-modal.component';\r\nimport { Sort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-assessments',\r\n  templateUrl: './assessments.component.html',\r\n  styleUrls: ['./assessments.component.scss']\r\n})\r\nexport class AssessmentsComponent implements OnInit {\r\n  loggedInEmpDet: any;\r\n  assessmentData: any;\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  multipleDropdownSettings: IDropdownSettings = {};\r\n  searchDet: any = {};\r\n  plantList: any;\r\n  masterLevelList: any;\r\n  filterData: FormGroup;\r\n  masterDeptList: any[];\r\n  selectedBranchId: any;\r\n  selectedAssessData: any;\r\n  selectedRecForModal: string;\r\n  isUpload: boolean = false;\r\n  filterFlag: boolean = false;\r\n  staticPagination: any = {\r\n    total: 0,\r\n    page: 1,\r\n    maxSize: 5,\r\n    itemsPerPage: 10,\r\n    totalPages: 0,\r\n    listLength: 0\r\n  }\r\n  sorting: any;\r\n  // @Input() selectedDetail;\r\n\r\n  listLoading: boolean;\r\n  worksatationData: any;\r\n  masterWorkList: any[];\r\n  selectedBranch: any;\r\n  submitAttempted: boolean = false;\r\n  // @Input() masterActivity;\r\n\r\n  constructor(private skillingService: SkillingService,\r\n    private modalService: NgbModal,\r\n    public fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInEmpDet = JSON.parse(localStorage.getItem('userDet'));\r\n    this.filterData = this.fb.group({\r\n      branchId: new FormControl('', Validators.required),\r\n      masterWork: new FormControl(''),\r\n      deptLvlId: new FormControl('')\r\n    });\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.multipleDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: \"id\",\r\n      textField: \"name\",\r\n      selectAllText: \"Select All\",\r\n      unSelectAllText: \"UnSelect All\",\r\n      itemsShowLimit: 2,\r\n      allowSearchFilter: true,\r\n    };\r\n    this.getMasterSkillLevelList();\r\n    this.getAccessiblePlantList();\r\n    // this.getMasterDepartmentList();\r\n    this.getAssessmentList('');\r\n  }\r\n\r\n  // Assessment module\r\n  // Author: Simran\r\n  // created date: 25/08/2023\r\n  // description : you will get assessmnet list \r\n  getAssessmentList(searchfilter) {\r\n    this.assessmentData = [];\r\n    // if (\r\n    //   this.staticPagination.offset > 0 && this.filterFlag == false && searchfilter == \"filter\"\r\n    // ) {\r\n    //   this.clearPagination();\r\n    // }\r\n    if (this.staticPagination.page == 1) {\r\n      this.staticPagination.offset = 0;\r\n    } else {\r\n      this.staticPagination.offset = (this.staticPagination.page - 1) * this.staticPagination.itemsPerPage;\r\n    }\r\n    let data: any = {\r\n      \"orgId\": this.loggedInEmpDet.organization.orgId,\r\n      'offset': this.staticPagination.offset,\r\n      'limit': this.staticPagination.itemsPerPage,\r\n    }\r\n    if (searchfilter == 'filter') {\r\n      if (this.searchDet.branchId != null && this.searchDet.branchId.length > 0) {\r\n        data.branchId = this.searchDet.branchId[0].id;\r\n      }\r\n      if (this.searchDet.deptIds != null && this.searchDet.deptIds.length > 0) {\r\n        data.deptIds = this.getIDsArray(this.searchDet.deptIds)\r\n      }\r\n      if (this.searchDet.masterWorkList != null && this.searchDet.masterWorkList.length > 0) {\r\n        data.workstationIds = this.getIDsArray(this.searchDet.masterWorkList)\r\n      }\r\n    }\r\n    else {\r\n      data.branchId = this.loggedInEmpDet.branch.branchId;\r\n    }\r\n    if (this.searchDet.searchData && this.searchDet.searchInput && this.searchDet.searchInput != '') {\r\n      data.search = this.searchDet.searchInput;\r\n    }\r\n    if (this.sorting) {\r\n      if (this.sorting.direction != \"\") {\r\n        data.colName = this.sorting.active;\r\n        data.orderType = this.sorting.direction.toUpperCase();\r\n      }\r\n    }\r\n    console.log(data);\r\n    this.skillingService.getAssessmentDisplay('apis/sm/getOJTAssessmentsList', data).subscribe((response: any) => {\r\n      // if (response.result) {\r\n      //   console.log(response);\r\n      //   // (response.dataList != null && response.dataList.length > 0) ? response.dataList.length : 0;\r\n      //   this.staticPagination.total = response.totalCount;\r\n      //   // (this.staticPagination.total > 0) ? Math.ceil(this.staticPagination.total / this.staticPagination.itemsPerPage) : 0;\r\n      //   this.staticPagination.totalPages =  Math.ceil(response.totalMyActionCount / this.staticPagination.itemsPerPage);\r\n      //   if (response.dataList != null && response.dataList.length > 0) {\r\n      //     this.assessmentData = response.dataList;\r\n      //     console.log(this.assessmentData);\r\n      //     this.staticPagination.listLength = this.assessmentData.length;\r\n      //     console.log(response.dataList);\r\n      //   }\r\n      //   else {\r\n      //     this.assessmentData = [];\r\n      //     this.staticPagination.listLength = this.assessmentData.length;\r\n      //   }\r\n      // }\r\n      // else {\r\n      //   this.assessmentData = [];\r\n      //   this.staticPagination.listLength = this.assessmentData.length;\r\n      // }\r\n      if (response.result) {\r\n        if (this.staticPagination.page == 1) {\r\n          this.staticPagination.total = response.totalCount;\r\n          this.staticPagination.totalPages = Math.ceil(response.totalCount / this.staticPagination.itemsPerPage);\r\n        }\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.assessmentData = response.dataList;\r\n          console.log(this.assessmentData);\r\n          this.staticPagination.listLength = response.dataList.length;\r\n        }\r\n        else {\r\n          this.assessmentData = [];\r\n        }\r\n      } else {\r\n        this.assessmentData = [];\r\n      }\r\n      (error: any) => {\r\n        this.assessmentData = [];\r\n        this.listLoading = false;\r\n      }\r\n    })\r\n  }\r\n  // Assessment module\r\n  // Author: Simran\r\n  // created date: 25/08/2023\r\n  // description : filter modal open\r\n  filterModalOpen(modal) {\r\n    this.filterFlag = true\r\n    this.modalService.open(modal, {\r\n      windowClass: 'filterPopup',\r\n    });\r\n  }\r\n\r\n  // Assessment module\r\n  // Author: Simran\r\n  // created date: 25/08/2023\r\n  // description : you will get branch list\r\n  getAccessiblePlantList() {\r\n    this.skillingService.getBranchAccessList('getBranchAccessSetupByEmpId/' + this.loggedInEmpDet.organization.orgId + \"/\" + this.loggedInEmpDet.empId).subscribe((res: any) => {\r\n      if (res.result) {\r\n        if (res.branchAccessList != null && res.branchAccessList.length > 0) {\r\n          this.plantList = this.setArray(res.branchAccessList, 'branchId', 'branchName');\r\n          this.searchDet.plantList = this.setArray(res.branchAccessList, 'branchId', 'branchName');\r\n        } else {\r\n          this.plantList = [{ id: this.loggedInEmpDet.branch.branchId, name: this.loggedInEmpDet.branch.name }];\r\n        }\r\n      } else {\r\n        this.plantList = [{ id: this.loggedInEmpDet.branch.branchId, name: this.loggedInEmpDet.branch.name }];\r\n      }\r\n      // this.searchDet.branchId = [this.searchDet.plantList[0]];\r\n      // this.getMasterDepartmentList(this.searchDet.branchId[0]);\r\n      this.getAssessmentList('');\r\n      // this.getMasterDepartmentList();\r\n    })\r\n  }\r\n\r\n  // Assessment module\r\n  // Author: Simran\r\n  // created date: 25/08/2023\r\n  // description : you will get level list\r\n  getMasterSkillLevelList() {\r\n    this.skillingService.getMasterLevelList('apis/sm/getLevelList').subscribe((res: any) => {\r\n      if (res.result) {\r\n        if (res.dataList != null && res.dataList.length > 0) {\r\n          this.masterLevelList = this.setArray(res.dataList, 'id', 'levelName');\r\n          // this.searchDet.skillLvlId = [this.masterLevelList[0]];\r\n        } else {\r\n          this.masterLevelList = [];\r\n        }\r\n      } else {\r\n        this.masterLevelList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  // Assessment module\r\n  // Author: Simran\r\n  // created date: 25/08/2023\r\n  // description : you will get department list\r\n  getMasterDepartmentList(selectedBranchId) {\r\n    this.skillingService.getMasterDepartmentList('getdepartmentlistbybranchid/' + selectedBranchId.id).subscribe((res: any) => {\r\n      if (res.result) {\r\n        console.log(res)\r\n        if (res.deptList != null && res.deptList.length > 0) {\r\n          this.masterDeptList = this.setArray(res.deptList, 'deptId', 'deptName');\r\n          this.searchDet.departmentList = this.setArray(res.deptList, 'deptId', 'deptName');\r\n          // this.searchDet.deptIds = this.searchDet.departmentList;\r\n          this.getWorkstationList()\r\n          // this.searchDet.skillLvlId = [this.masterLevelList[0]];\r\n        } else {\r\n          this.masterDeptList = [];\r\n        }\r\n      } else {\r\n        this.masterDeptList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n  // Assessment module\r\n  // Author: Simran\r\n  // created date: 25/08/2023\r\n  // description : you will workstation list\r\n  getWorkstationList() {\r\n    this.listLoading = true;\r\n    let getReq: any = {\r\n      \"branchId\": this.searchDet.branchId[0].id,\r\n      \"orgId\": this.loggedInEmpDet.organization.orgId\r\n    }\r\n    if (this.getIDsArray(this.searchDet.deptIds) != null && this.getIDsArray(this.searchDet.deptIds).length > 0) {\r\n      for (let i = 0; i < this.getIDsArray(this.searchDet.deptIds).length; i++) {\r\n        getReq.deptIds = this.getIDsArray(this.searchDet.deptIds)\r\n        console.log(getReq.deptIds)\r\n      }\r\n    }\r\n    console.log(getReq);\r\n    this.skillingService.getWorkstationList('apis/sm/getWorkstationList', getReq).subscribe((response: any) => {\r\n      console.log(response);\r\n      this.listLoading = false;\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.worksatationData = response.dataList;\r\n          this.masterWorkList = this.setArray(response.dataList, 'id', 'workstation');\r\n          this.searchDet.masterWorkStationList = this.setArray(response.dataList, 'id', 'workstation');\r\n          // this.searchDet.masterWorkList = this.searchDet.masterWorkStationList;\r\n          console.log(this.searchDet.masterWorkList);\r\n        } else {\r\n          this.worksatationData = [];\r\n        }\r\n      }\r\n      else {\r\n        this.worksatationData = [];\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n  // onChange(selectedPlant: any) {\r\n  //   this.selectedBranchId = selectedPlant.id\r\n  //   console.log(selectedPlant)\r\n  //   // Fetch the departments based on the selected plant ID\r\n  //   // const plantId = selectedPlant[0]?.id; // Assuming singleSelection is true\r\n  //   if (selectedPlant.id) {\r\n  //     this.getMasterDepartmentList(this.selectedBranchId)\r\n  //   }\r\n  //   else {\r\n  //     this.masterDeptList = [];\r\n  //   }\r\n  // }\r\n  // onDeSelectPlant(){\r\n  //   this.masterDeptList = [];\r\n  // }\r\n\r\n  openViewModal(modal, data) {\r\n    console.log(data);\r\n    this.selectedRecForModal = '';\r\n    this.selectedRecForModal = data;\r\n    console.log(this.selectedRecForModal)\r\n    var modalRef = this.modalService.open(modal, {\r\n      windowClass: 'right'\r\n    });\r\n    // modalRef.componentInstance.selectedDet = data;\r\n    modalRef.result.then((result) => {\r\n      if (result === 'success') {\r\n      }\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  /* \r\n      Load More Pagination next page Data\r\n      @Author : Simran\r\n      @Date : 30/08/2023\r\n    */\r\n  loadMore(ev: any) {\r\n    this.staticPagination = ev;\r\n    this.getAssessmentList('');\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sorting = sort;\r\n    this.getAssessmentList('')\r\n  }\r\n  /*\r\n       Apply filter function\r\n       Author: simran\r\n       Date : 30 Aug 2023\r\n */\r\n  submitFilterForm(form) {\r\n    this.submitAttempted = true;\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    this.clearPagination();\r\n    this.searchDet.filterFlag = true;\r\n    this.getAssessmentList('filter');\r\n    this.modalService.dismissAll();\r\n  }\r\n  /* \r\n    Remove Filter\r\n    Author : simran\r\n    Date : 30 Aug 2023\r\n  */\r\n  removeFilter() {\r\n    this.submitAttempted = false;\r\n    this.filterData.patchValue({\r\n      branchId: [],\r\n      deptLvlId: [],\r\n      masterWork: []\r\n\r\n    })\r\n    this.searchDet.branchId = [];\r\n    this.searchDet.deptIds = [];\r\n    this.searchDet.masterWorkList = [];\r\n    this.searchDet.filterFlag = false;\r\n    this.getAssessmentList('');\r\n  }\r\n\r\n  /* \r\nReset Form function\r\nAuthor: Simran\r\nDate : 30/08/2023\r\n*/\r\n  resetFormField(form, keyName) {\r\n    Object.keys(form.controls).forEach(key => {\r\n      if (keyName != '' && key == keyName) {\r\n        form.get(keyName).reset();\r\n        form.get(keyName).markAsPristine();\r\n        form.get(keyName).markAsUntouched();\r\n      } else {\r\n        form.get(key).reset();\r\n        form.get(key).markAsPristine();\r\n        form.get(key).markAsUntouched();\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n    Multi Select Dropdown onChange function\r\n    Author: simran\r\n    Date : 04/09/2023\r\n*/\r\n  onChangeAll(ev: any, type) {\r\n    if (ev) {\r\n      console.log('Select All action');\r\n    } else {\r\n      console.log('Unselect All action');\r\n    }\r\n  }\r\n\r\n  /*\r\n    Single Select Dropdown onChange function\r\n    Author: simran\r\n    Date : 01/09/2023\r\n*/\r\n  onChange(ev: any, type) {\r\n    if (ev) {\r\n      if (type == 'plant') {\r\n        this.getMasterDepartmentList(ev);\r\n      }\r\n    } else {\r\n      if (type == 'plant') {\r\n        if (this.searchDet.filterModalOpen) {\r\n          this.searchDet.departmentList = [];\r\n          this.resetFormField(this.filterData, 'deptIds');\r\n        }\r\n        // else {\r\n        //   this.resetFormField(this.stakeholderForm, 'deptIds');\r\n        // }\r\n      } /*else if (type == 'dept') {\r\n          } else if (type == 'userType') { }*/\r\n    }\r\n  }\r\n  /*\r\n       Common function For get Ids from array\r\n       Author: simran\r\n       Date : 01/09/2023\r\n   */\r\n  getIDsArray(array) {\r\n    let tmp: any = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        tmp.push(element.id);\r\n      }\r\n    }\r\n    return tmp;\r\n  }\r\n  /*\r\n  Common function For Searching\r\n  Author: simran\r\n  Date : 09/09/2023\r\n*/\r\n  getSearchList(ev) {\r\n    this.clearPagination();\r\n    this.searchDet.searchData = ev;\r\n    if (!ev) {\r\n      this.searchDet.searchInput = '';\r\n    }\r\n    if (this.filterFlag) {\r\n      this.getAssessmentList('filter');\r\n    } else {\r\n      this.getAssessmentList('');\r\n    }\r\n  }\r\n  /*\r\n      @DESC : Function to clear pagination \r\n      @Author: Simran\r\n      @Date : 09/09/2023\r\n    */\r\n  clearPagination() {\r\n    this.staticPagination = {\r\n      total: 0,\r\n      page: 1,\r\n      maxSize: 5,\r\n      itemsPerPage: 10,\r\n      totalPages: 0,\r\n      listLength: 0\r\n    }\r\n  }\r\n  getSortFunction(array, fieldToSort) {\r\n    if (array && Array.isArray(array) && array.length > 0) {\r\n      if (fieldToSort === \"plant\" || fieldToSort === \"cell\" || fieldToSort === \"work\") {\r\n        array.sort(function (a, b) {\r\n          var nameA = a.name ? a.name.toUpperCase() : \"\";\r\n          var nameB = b.name ? b.name.toUpperCase() : \"\";\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n}\r\n","export default \".insideLabel {\\n  margin-bottom: 10px;\\n}\\n.insideLabel .col-form-label {\\n  position: absolute;\\n  z-index: 999;\\n  top: 0px;\\n  font: normal normal bold 12px/1.5 Helvetica Neue;\\n  left: 1.5rem;\\n  color: #7044cd;\\n}\\n.extraContent .addRegDiv .addRegBtn {\\n  right: 5rem !important;\\n}\\n.img-fluid {\\n  height: 20px;\\n}\\n.title {\\n  color: #7044CD !important;\\n}\\n.extraContent .addRegDiv .addRegBtn,\\n.extraContent .addRegDiv .addRegBtn:hover,\\n.extraContent .addRegDiv .addRegBtn:focus {\\n  right: 9rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcd29ya2ZvcmNlLWRlcGxveW1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtBQUNKO0FBQUk7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxRQUFBO0VBQ0EsZ0RBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQUVSO0FBQ0E7RUFDSSxzQkFBQTtBQUVKO0FBQUE7RUFDSSxZQUFBO0FBR0o7QUFEQTtFQUNJLHlCQUFBO0FBSUo7QUFGQTs7O0VBR0ksc0JBQUE7QUFLSiIsImZpbGUiOiJ3b3JrZm9yY2UtZGVwbG95bWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnNpZGVMYWJlbCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgLmNvbC1mb3JtLWxhYmVsIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogOTk5O1xyXG4gICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgIGZvbnQ6IG5vcm1hbCBub3JtYWwgYm9sZCAxMnB4LzEuNSBIZWx2ZXRpY2EgTmV1ZTtcclxuICAgICAgICBsZWZ0OiAxLjVyZW07XHJcbiAgICAgICAgY29sb3I6ICM3MDQ0Y2Q7XHJcbiAgICB9XHJcbn1cclxuLmV4dHJhQ29udGVudCAuYWRkUmVnRGl2IC5hZGRSZWdCdG4ge1xyXG4gICAgcmlnaHQ6IDVyZW0gIWltcG9ydGFudDtcclxufVxyXG4uaW1nLWZsdWlke1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG59XHJcbi50aXRsZXtcclxuICAgIGNvbG9yOiAjNzA0NENEICFpbXBvcnRhbnQ7XHJcbn1cclxuLmV4dHJhQ29udGVudCAuYWRkUmVnRGl2IC5hZGRSZWdCdG4sXHJcbi5leHRyYUNvbnRlbnQgLmFkZFJlZ0RpdiAuYWRkUmVnQnRuOmhvdmVyLFxyXG4uZXh0cmFDb250ZW50IC5hZGRSZWdEaXYgLmFkZFJlZ0J0bjpmb2N1cyB7XHJcbiAgICByaWdodDogOXJlbSAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\";","export const CONSTANT = {\r\n    EQUAL: \"EQUAL\",\r\n    ELIGIBLE: \"ELIGIBLE\",\r\n    NOT_ELIGIBLE: \"NOT_ELIGIBLE\",\r\n    OTHER: \"OTHER\"\r\n}","export default \".logo {\\n  height: 20px;\\n}\\n\\n.insideLabel .col-form-label {\\n  position: absolute;\\n  z-index: 999;\\n  top: 0px;\\n  font: normal normal bold 12px/1.5 Helvetica Neue;\\n  left: 1.5rem;\\n  color: #7044cd;\\n}\\n\\n.center-align {\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n\\n.bg-l1 {\\n  background-color: red;\\n}\\n\\n.bg-l2 {\\n  background-color: #D9D9D9;\\n}\\n\\n.bg-l3 {\\n  background-color: green;\\n}\\n\\n.skill-table {\\n  margin-top: 5px;\\n  border-top: 1px solid lightgray;\\n}\\n\\n.skill-table thead th {\\n  box-shadow: none !important;\\n  border-color: lightgray;\\n  border-width: 1px;\\n}\\n\\n.excelbutton {\\n  cursor: pointer;\\n}\\n\\n.excelbutton .excelFont {\\n  font: normal normal 500 11px/1.5 Helvetica Neue;\\n}\\n\\n.empSkillLevelTd .form-check-label {\\n  color: #000 !important;\\n  font-weight: 400;\\n  text-align: center;\\n}\\n\\n.empSkillLevelTd.EQUAL {\\n  background: #FF0000;\\n}\\n\\n.empSkillLevelTd.ELIGIBLE {\\n  background: #D9D9D9;\\n}\\n\\n.empSkillLevelTd.NOT_ELIGIBLE {\\n  background: #99cd3a;\\n}\\n\\n.empSkillLevelTd.OTHER {\\n  background: #FFF;\\n}\\n\\n.red-background {\\n  background: #FF0000;\\n}\\n\\n.gray-background {\\n  background: #D9D9D9;\\n}\\n\\n.green-background {\\n  background: #99cd3a;\\n}\\n\\n.white-background {\\n  background: #FFF;\\n}\\n\\n.count-block {\\n  padding: 0px;\\n  margin: 0px;\\n  display: inline-block;\\n  width: 100%;\\n}\\n\\n.count-block .countLi {\\n  float: left;\\n  list-style: none;\\n  width: 22%;\\n  background: #fff;\\n  padding: 0px 10px 5px;\\n  margin: 10px 10px 5px;\\n  border-radius: 5px;\\n  box-shadow: 0px 0px 8px #8e8e8e;\\n}\\n\\n.count-block .countLi .heading {\\n  font: normal normal normal 13px/1.5 Helvetica Neue;\\n  margin: 0px;\\n}\\n\\n.count-block .countLi .headerBlock {\\n  border-bottom: 1px solid #7044cd;\\n  margin: 0px -10px;\\n  padding: 0px 10px;\\n}\\n\\n.count-block .countLi .headerBlock .heading {\\n  color: #7044cd;\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n\\n.count-block .countLi .count {\\n  font: normal normal bold 14px/1.5 Helvetica Neue;\\n  color: #000;\\n}\\n\\n.btn-excel-export {\\n  cursor: pointer;\\n}\\n\\n.input-wrapper {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.input-wrapper label {\\n  margin-right: 10px;\\n}\\n\\n.form-control {\\n  margin-top: -9px;\\n  height: calc(1.5em + 0.75rem + -4px);\\n  margin-bottom: -10px;\\n}\\n\\n.vertical-text {\\n  vertical-align: middle;\\n}\\n\\n.text-center {\\n  text-align: center;\\n}\\n\\n.first-col {\\n  position: sticky;\\n  left: 0;\\n  top: 0;\\n  /* Makes it sticky vertically */\\n  width: 100px;\\n  z-index: 5;\\n}\\n\\n.second-col {\\n  position: sticky;\\n  left: 68px;\\n  top: 0;\\n  /* Makes it sticky vertically */\\n  width: 100px;\\n  z-index: 5;\\n}\\n\\n.third-col {\\n  position: sticky;\\n  left: 145px;\\n  top: 0;\\n  /* Makes it sticky vertically */\\n  width: 100px;\\n  z-index: 5;\\n}\\n\\n.first-col-td {\\n  position: sticky;\\n  *position: relative;\\n  /*ie7*/\\n  left: 0;\\n  width: 100px;\\n  z-index: 4;\\n}\\n\\n.second-col-td {\\n  position: sticky;\\n  *position: relative;\\n  /*ie7*/\\n  left: 68px;\\n  width: 100px;\\n  z-index: 4;\\n}\\n\\n.third-col-td {\\n  position: sticky;\\n  *position: relative;\\n  /*ie7*/\\n  left: 145px;\\n  width: 100px;\\n  z-index: 4;\\n}\\n\\n.extraContent {\\n  margin-left: 12px;\\n  padding: 2px 10px 0px 5px;\\n}\\n\\n.main {\\n  display: flex;\\n  justify-content: space-evenly;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","export default \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"col-8 m-auto\\\">\\r\\n        <app-topBar title=\\\"Certificates\\\"></app-topBar>\\r\\n    </div>\\r\\n    <div class=\\\"col-3 m-auto\\\">\\r\\n        <!-- <app-loginInfo></app-loginInfo> -->\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-1 p-0 m-auto text-center\\\">\\r\\n        <!-- <button class=\\\"btn btn-default filter-btn\\\" title=\\\"Filter\\\" (click)=\\\"filterModalOpen(FilterModal)\\\" [(ngModel)]=\\\"searchDet.searchInput\\\">\\r\\n            <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i> \\r\\n        </button> -->\\r\\n        <div class=\\\"btn-filter-wrap\\\">\\r\\n            <button class=\\\"btn btn-default filter-btn\\\" [ngClass]=\\\"{'applied' : searchDet.filterFlag}\\\" title=\\\"Filter\\\"\\r\\n                (click)=\\\"filterModalOpen(FilterModal)\\\">\\r\\n                <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n            <div class=\\\"btn-clear-filter\\\" *ngIf=\\\"searchDet.filterFlag\\\" (click)=\\\"removeFilter();\\\">x</div>\\r\\n            <div class=\\\"lbl-filter-applied\\\" *ngIf=\\\"searchDet.filterFlag\\\">Filter Applied</div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"homepage-block bg-Transperant p-l-15 p-r-15\\\">\\r\\n   \\r\\n        <div class=\\\" extraContent row m-0\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n                <!-- <div class=\\\"p-l-0 p-r-5\\\" [ngClass]=\\\"(searchDet.filterFlag)?'col-6':'col-12'\\\"> -->\\r\\n                <div class=\\\"form-group has-search\\\">\\r\\n                    <span *ngIf=\\\"!searchDet.searchData\\\" class=\\\"fa fa-search form-control-feedback\\\"\\r\\n                        (click)=\\\"getSearchList(true)\\\"></span>\\r\\n                    <span *ngIf=\\\"searchDet.searchData\\\" class=\\\"fa fa-times-circle form-control-clear\\\"\\r\\n                        (click)=\\\"getSearchList(false)\\\"></span>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"searchInput\\\"\\r\\n                        placeholder=\\\"Search by name or workstation\\\" [(ngModel)]=\\\"searchDet.searchInput\\\"\\r\\n                        autocomplete=\\\"off\\\" (keyup)=\\\"$event.keyCode == 13 ? getSearchList(true) : ''\\\">\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-6 p-r-5 p-l-5\\\" *ngIf=\\\"searchDet.filterFlag\\\">\\r\\n                        <div class=\\\"filterDiv\\\">\\r\\n                            <button class=\\\"clearFilter\\\" (click)=\\\"removeFilter()\\\">Clear filter</button>\\r\\n                            &nbsp;\\r\\n                            <span style=\\\"color: green;font-size: 12px; font-weight: 500;\\\">Filter\\r\\n                                Applied</span>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\"></div>\\r\\n        </div>\\r\\n \\r\\n    <div class=\\\"table-block\\\">\\r\\n        <div class=\\\"table-responsive tableFixHead\\\">\\r\\n            <table class=\\\"table\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th mat-sort-header=\\\"BranchName\\\">Plant</th>\\r\\n                        <th mat-sort-header=\\\"DeptName\\\">Department</th>\\r\\n                        <th mat-sort-header=\\\"EmpId\\\">Emp. ID</th>\\r\\n                        <th mat-sort-header=\\\"EmpName\\\">Emp.Name</th>\\r\\n                        <th mat-sort-header=\\\"Workstation\\\">WorkStation</th>\\r\\n                        <th mat-sort-header=\\\"LevelName\\\">Level</th>\\r\\n                        <th mat-sort-header=\\\"Status\\\">Status</th>\\r\\n                        <th>Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let data of certificateList\\\">\\r\\n                        <td>{{data.branchName }}</td>\\r\\n                        <td>{{data.deptName }}</td>\\r\\n                        <!-- <td>{{x.lineName}}</td> -->\\r\\n                        <td>{{data.companyEmpId }}</td>\\r\\n                        <td>{{data.empName }}</td>\\r\\n                        <td>{{data.workstationName }}</td>\\r\\n                        <td>{{data.levelName }}</td>\\r\\n                        <td [ngClass]=\\\"{'completed':data.status == 'COMPLETED','pending':data.status == 'PENDING'}\\\">{{data.status}}</td>\\r\\n                        <td class=\\\"actionTd fixedColumn\\\">\\r\\n                            <a (click)=\\\"previewCertificate(data,certificateModal)\\\"\\r\\n                                style=\\\"color:#7044CD;cursor: pointer\\\"><i class=\\\"fa fa-eye viewIcon\\\"></i></a>\\r\\n                            &nbsp; &nbsp;\\r\\n                            <!-- <a style=\\\"color:#7044CD;cursor: pointer;\\\" href=\\\"{{data.certificatePath}}\\\" download\\r\\n                                target=\\\"_blank\\\"><i class=\\\"fa fa-download\\\"></i></a> -->\\r\\n\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"(certificateList == null || certificateList.length == 0)\\\">\\r\\n                        <td colspan=\\\"11\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoading\\\">\\r\\n                            Data Not Found\\r\\n                        </td>\\r\\n                        <td colspan=\\\"11\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoading\\\">\\r\\n                            <app-loading></app-loading>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <app-pagination [staticPagination]=\\\"staticPagination\\\" (paginationData)=\\\"loadMore($event)\\\">\\r\\n    </app-pagination>\\r\\n</div>\\r\\n\\r\\n<ng-template #FilterModal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title popup-header-txt\\\" id=\\\"myModalLabel2\\\">Filter</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"filterData\\\" (ngSubmit)=\\\"submitFilterForm(filterData)\\\" autocomplete=\\\"off\\\"\\r\\n        class=\\\"needs-validation\\\">\\r\\n        <div class=\\\"modal-body p-2\\\" style=\\\"height: calc(100vh - 14vh);\\\">\\r\\n            <perfect-scrollbar>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"branchId\\\" class=\\\"col-sm-12 col-form-label filter-label p-b-0\\\">Plant</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"branchId\\\" id=\\\"branchId\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                            [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                            [data]=\\\"getSortFunction(plantList,'plant')\\\" formControlName=\\\"branchId\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.branch\\\" (onSelect)=\\\"onChange($event,'plant')\\\"\\r\\n                            (onDeSelect)=\\\"onChange(false,'plant')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"submitAttempted && filterData.controls['branchId'].invalid && (filterData.controls['branchId'].touched || filterData.controls['branchId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\" style=\\\"padding-left: 15px;\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['branchId'].errors.required\\\">\\r\\n                                Please select plant\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"deptIds\\\" class=\\\"col-sm-12 col-form-label filter-label p-b-0\\\">Department</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"deptIds\\\" id=\\\"deptIds\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"multipleDropdownSettings\\\"\\r\\n                            [data]=\\\"getSortFunction(searchDet.departmentList,'dept')\\\" formControlName=\\\"deptIds\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.deptIds\\\" (onSelect)=\\\"onChange($event,'dept')\\\"\\r\\n                            (onDeSelect)=\\\"onChange(false,'dept')\\\" (onSelectAll)=\\\"onChangeAll($event,'dept')\\\"\\r\\n                            (onDeSelectAll)=\\\"onChangeAll($event,'dept')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"submitAttempted && filterData.controls['deptIds'].invalid && (filterData.controls['deptIds'].touched || filterData.controls['deptIds'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\" style=\\\"padding-left: 15px;\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['deptIds'].errors.required\\\">\\r\\n                                Please select department\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </perfect-scrollbar>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer footerBlock text-right\\\">\\r\\n            <button class=\\\"btn submitBtn event-btn\\\" type=\\\"submit\\\">\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                <span *ngIf=\\\"!submitSpinner\\\" class=\\\"btn-text\\\">Apply Filter</span>\\r\\n            </button>\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn cancelBtn\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">Cancel -->\\r\\n            <!-- </button> -->\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #certificateModal let-c=\\\"close\\\">\\r\\n    <app-viewCertificate [close]=\\\"c\\\" [selectedDet]=\\\"selectedRecForModal\\\"></app-viewCertificate>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- <ng-template #previewCertModal let-c1=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content previewCert\\\" >\\r\\n            <div class=\\\"modal-header previewHeader\\\">\\r\\n                <h4 class=\\\"modal-title popup-header-txt\\\" id=\\\"myModalLabel2\\\">Preview Certificate</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body p-0 text-center\\\">\\r\\n                <perfect-scrollbar [style.height]=\\\"'calc(100vh - 25vh)'\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\">\\r\\n                            <div class=\\\"certImgDiv\\\">\\r\\n                                <span style=\\\"display: inline-block;width: calc(100% - 46%);position: relative;\\\"\\r\\n                                    id=\\\"certDiv\\\">\\r\\n                                    <img src=\\\"{{''}}\\\" alt=\\\"\\\" class=\\\"certImg\\\" />\\r\\n\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </perfect-scrollbar>\\r\\n                <div class=\\\"row text-center p-2\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <a class=\\\"btn Downloadbtn submitBtn\\\" href=\\\"{{''}}\\\" download\\r\\n                            target=\\\"_blank\\\">Download</a>\\r\\n                        &nbsp;&nbsp;\\r\\n                        <button type=\\\"button\\\" class=\\\"btn cancelBtn\\\" (click)=\\\"c1('Cross click')\\\">\\r\\n                            Cancel\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template> -->\";","export default \".headerTitle {\\n  color: #7044cd !important;\\n  font: normal normal 500 18px/1.5 Helvetica Neue !important;\\n}\\n\\n.tableFixHead table .fixedColumn {\\n  position: sticky;\\n  top: 0px;\\n  z-index: 2;\\n  border-left: none;\\n  border-right: none;\\n}\\n\\n.tableFixHead tr th:nth-child(11),\\n.tableFixHead tr td:nth-child(11) {\\n  width: 150px;\\n  min-width: 150px;\\n  max-width: 150px;\\n  right: 72px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYXNzZXNzbWVudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLDBEQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNKOztBQXFCSTs7RUFFSSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUFsQlIiLCJmaWxlIjoiYXNzZXNzbWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyVGl0bGUge1xyXG4gICAgY29sb3I6ICM3MDQ0Y2QgIWltcG9ydGFudDtcclxuICAgIGZvbnQ6IG5vcm1hbCBub3JtYWwgNTAwIDE4cHgvMS41IEhlbHZldGljYSBOZXVlICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi50YWJsZUZpeEhlYWQgdGFibGUgLmZpeGVkQ29sdW1uIHtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgICBib3JkZXItbGVmdDogbm9uZTtcclxuICAgIGJvcmRlci1yaWdodDogbm9uZTtcclxufVxyXG5cclxuLnRhYmxlRml4SGVhZCB7XHJcblxyXG4gICAgLy8gdHIgdGg6Zmlyc3QtY2hpbGQoMSksIHRyIHRkOmZpcnN0LWNoaWxkKDEpIHtcclxuICAgIC8vICAgICB3aWR0aDogNTBweDttaW4td2lkdGg6IDUwcHg7bWF4LXdpZHRoOiA1MHB4O1xyXG4gICAgLy8gICAgIHRleHQtd3JhcDogd3JhcDtcclxuICAgIC8vICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gICAgLy8gfVxyXG4gICAgLy8gdHIgdGg6bnRoLWNoaWxkKDIpLCB0ciB0ZDpudGgtY2hpbGQoMikge1xyXG4gICAgLy8gICAgIHdpZHRoOiAxMDBweDttaW4td2lkdGg6IDEwMHB4O21heC13aWR0aDogMTAwcHg7XHJcbiAgICAvLyAgICAgbGVmdDogNjRweDtcclxuICAgIC8vICAgICB0ZXh0LXdyYXA6IHdyYXA7XHJcbiAgICAvLyAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxuICAgIC8vIH1cclxuICAgIC8vIHRyIHRoOm50aC1jaGlsZCgzKSwgdHIgdGQ6bnRoLWNoaWxkKDMpIHtcclxuICAgIC8vICAgICB3aWR0aDogMjAwcHg7bWluLXdpZHRoOiAyMDBweDttYXgtd2lkdGg6IDIwMHB4O1xyXG4gICAgLy8gICAgIGxlZnQ6IDE2NHB4O1xyXG4gICAgLy8gICAgIHRleHQtd3JhcDogd3JhcDtcclxuICAgIC8vICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gICAgLy8gfVxyXG4gICAgdHIgdGg6bnRoLWNoaWxkKDExKSxcclxuICAgIHRyIHRkOm50aC1jaGlsZCgxMSkge1xyXG4gICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgICAgIG1heC13aWR0aDogMTUwcHg7XHJcbiAgICAgICAgcmlnaHQ6IDcycHg7XHJcbiAgICB9XHJcbn0iXX0= */\";","export default \".tableFixHead table .fixedColumn {\\n  position: sticky;\\n  top: 0px;\\n  z-index: 2;\\n  border-left: none;\\n  border-right: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYWN0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsUUFBQTtFQUNBLFVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBQ0oiLCJmaWxlIjoiYWN0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZUZpeEhlYWQgdGFibGUgLmZpeGVkQ29sdW1uIHtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIHotaW5kZXg6IDI7IFxyXG4gICAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbn0iXX0= */\";","export default \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"col-7 m-auto\\\" >\\r\\n        <app-topBar title=\\\"Home\\\" style=\\\"max-width: 200px;\\\"></app-topBar>\\r\\n   </div>\\r\\n\\r\\n   \\r\\n    <div class=\\\"col-3 m-auto main\\\" >\\r\\n        <div></div>\\r\\n        <div class=\\\"form-group has-search \\\" style=\\\"margin-top: 20px; max-width: 220px;\\\">\\r\\n            <span\\r\\n                class=\\\"fa form-control-feedback\\\"\\r\\n                [ngClass]=\\\"{'fa-search': !searchInput, 'fa-times-circle': searchInput}\\\"\\r\\n                (click)=\\\"clearSearch()\\\">\\r\\n            </span>\\r\\n            <input style=\\\"border: 1px solid #7044cd; background-color: transparent; border-radius: 12px; min-width: 218px;\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                name=\\\"searchInput\\\" placeholder=\\\"Search by Emp Id, Name\\\"  [(ngModel)]=\\\"searchInput\\\"\\r\\n                (input)=\\\"filterList()\\\" autocomplete=\\\"off\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 p-0 m-auto \\\" style=\\\"display: flex; gap: 30px;\\\">\\r\\n        <div class=\\\"btn-filter-wrap\\\">\\r\\n            <button class=\\\"btn btn-default filter-btn\\\" [ngClass]=\\\"{'applied' : isAppliedFilter}\\\" title=\\\"Filter\\\"\\r\\n                (click)=\\\"filterModalOpen(FilterModal)\\\">\\r\\n                <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n            <div class=\\\"btn-clear-filter\\\" *ngIf=\\\"isAppliedFilter\\\" (click)=\\\"removeFilter();\\\">x</div>\\r\\n            <div class=\\\"lbl-filter-applied\\\" *ngIf=\\\"isAppliedFilter\\\">Filter Applied</div>\\r\\n        </div>\\r\\n\\r\\n        <img src=\\\"assets/images/ic_excel.png\\\" style=\\\"height: 37px; width: 30px;\\\" alt=\\\"\\\" class=\\\"img-fluid btn-excel-export\\\" (click)=\\\"exportReport()\\\">\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-1 m-auto\\\" style=\\\"padding-left: 17px;\\\">\\r\\n        <img src=\\\"assets/images/ic_excel.png\\\" alt=\\\"\\\" class=\\\"img-fluid btn-excel-export\\\" (click)=\\\"exportReport()\\\">\\r\\n    </div> -->\\r\\n    <!-- <div class=\\\"col-3 m-auto\\\">\\r\\n        <app-loginInfo></app-loginInfo>\\r\\n    </div> -->\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"row\\\" style=\\\"margin-top: 3px;\\\">\\r\\n    <div class=\\\"col-11 m-auto\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-1 m-auto\\\" style=\\\"padding-left: 17px;\\\">\\r\\n        <img src=\\\"assets/images/ic_excel.png\\\" alt=\\\"\\\" class=\\\"img-fluid btn-excel-export\\\" (click)=\\\"exportReport()\\\">\\r\\n    </div>\\r\\n</div> -->\\r\\n<div class=\\\"homepage-block bg-Transperant p-l-15 p-r-15\\\">\\r\\n    <div class=\\\"extraContent\\\">\\r\\n    </div>\\r\\n    <div class=\\\"table-block skill-table\\\">\\r\\n        <div class=\\\"table-responsive tableFixHead\\\">\\r\\n            <table id=\\\"tbl-skill-matrix\\\" class=\\\"table table-bordered\\\">\\r\\n                <ng-container *ngIf=\\\"!isObjectEmpty(skillMatrixDetails)\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th colspan=\\\"3\\\" class=\\\"first-col\\\" scope=\\\"col\\\">\\r\\n                                <!--    Aniket :- Show Document Name  -->\\r\\n                                <b>Doc No:- &nbsp; {{ skillMatrixDocument?.docName || '-' }}</b>\\r\\n                            </th>\\r\\n                            <th colspan=\\\"2\\\" scope=\\\"col\\\" class=\\\"\\\">MACHINE INDEX RATING</th>\\r\\n                            <ng-container *ngFor=\\\"let column of skillMatrixDetails.columns\\\">\\r\\n                                <ng-container\\r\\n                                    *ngIf=\\\"column.field != 'empId' && column.field != 'empName' && column.field != 'gender' && column.field != 'experience' && column.field != 'empLevel'\\\">\\r\\n                                    <th class=\\\"text-center\\\" scope=\\\"col\\\">\\r\\n                                        {{column.machineIndex}}\\r\\n                                    </th>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                            <th class=\\\"vertical-text\\\" rowspan=\\\"2\\\" scope=\\\"col\\\">\\r\\n                                NO. OF SHIFTS\\r\\n                            </th>\\r\\n                            <th class=\\\"vertical-text\\\" rowspan=\\\"2\\\" colspan=\\\"2\\\" scope=\\\"col\\\">\\r\\n                                <ng-multiselect-dropdown name=\\\"shift\\\"\\r\\n                                    class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                                    [placeholder]=\\\"'Select Shift'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                                    [data]=\\\"shiftList\\\" [(ngModel)]=\\\"searchDet.shift\\\" (onSelect)=\\\"onChangeShift($event)\\\"\\r\\n                                    (onDeSelect)=\\\"onChangeShift(false)\\\">\\r\\n                                </ng-multiselect-dropdown>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th class=\\\"first-col\\\" colspan=\\\"3\\\" scope=\\\"col\\\">\\r\\n                                <!--    Aniket :- Show Document date  -->\\r\\n                                <b>Rev Date:- &nbsp; {{ skillMatrixDocument?.currentDate | date:' dd MMMM yyyy' || '-'\\r\\n                                    }}</b>\\r\\n                            </th>\\r\\n                            <th colspan=\\\"2\\\" class=\\\"\\\" scope=\\\"col\\\">MIN. SKILL LEVEL REQ.</th>\\r\\n                            <ng-container *ngFor=\\\"let column of skillMatrixDetails.columns\\\">\\r\\n                                <ng-container\\r\\n                                    *ngIf=\\\"column.field != 'empId' && column.field != 'empName' && column.field != 'gender' && column.field != 'experience' && column.field != 'empLevel'\\\">\\r\\n                                    <th class=\\\"text-center\\\" scope=\\\"col\\\">\\r\\n                                        {{column.levelName}}\\r\\n                                    </th>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <!--    Aniket :- Show Document Rev No  -->\\r\\n                            <th class=\\\"first-col\\\" colspan=\\\"3\\\" scope=\\\"col\\\">\\r\\n                                <div class=\\\"input-wrapper\\\">\\r\\n                                    <label>\\r\\n                                        <b>Rev No:- </b>\\r\\n                                    </label>\\r\\n                                    <input placeholder=\\\"Enter Rev No\\\" class=\\\"form-control checksheetinputBox\\\" id=\\\"revNo\\\"\\r\\n                                        name=\\\"revNo\\\" [(ngModel)]=\\\"revNo\\\" type=\\\"number\\\" pattern=\\\"^\\\\d{1,2}$\\\">\\r\\n                                </div>\\r\\n                            </th>\\r\\n                            <th colspan=\\\"2\\\" class=\\\"\\\" scope=\\\"col\\\">REQUIRED NUMBER TRAINED</th>\\r\\n                            <ng-container *ngFor=\\\"let column of skillMatrixDetails.columns\\\">\\r\\n                                <ng-container\\r\\n                                    *ngIf=\\\"column.field != 'empId' && column.field != 'empName' && column.field != 'gender' && column.field != 'experience' && column.field != 'empLevel'\\\">\\r\\n                                    <th class=\\\"text-center\\\" scope=\\\"col\\\">\\r\\n                                        {{column.requiredWorkforce}}\\r\\n                                    </th>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                            <th class=\\\"vertical-text\\\" rowspan=\\\"2\\\" scope=\\\"col\\\">SKILL LEVEL</th>\\r\\n\\r\\n                            <th class=\\\"vertical-text\\\" rowspan=\\\"2\\\" scope=\\\"col\\\" style=\\\"position: static !important;\\\">\\r\\n                                MULTI SKILL %\\r\\n                            </th>\\r\\n                            <th class=\\\"vertical-text\\\" rowspan=\\\"2\\\" scope=\\\"col\\\" style=\\\"position: static !important;\\\">\\r\\n                                MARKS\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <th class=\\\"first-col first-col-head\\\" scope=\\\"col\\\">Sr No</th>\\r\\n                            <ng-container *ngFor=\\\"let x of skillMatrixDetails.columns\\\">\\r\\n                                <ng-container *ngIf=\\\"x.field != 'gender'\\\">\\r\\n                                    <th \\r\\n                                        class=\\\"\\\" \\r\\n                                        scope=\\\"col\\\" \\r\\n                                        [ngClass]=\\\"{\\r\\n                                            'second-col': x.field === 'empId', \\r\\n                                            'third-col': x.field === 'empName'\\r\\n                                        }\\\">\\r\\n                                        {{x.heading}}\\r\\n                                    </th>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                            \\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <!--filteredEmpData <ng-container *ngFor=\\\"let row of skillMatrixDetails.tableEmpData; let recIndex = index;\\\"> -->\\r\\n                            <ng-container *ngFor=\\\"let row of filteredEmpData; let recIndex = index;\\\">\\r\\n                            <tr *ngIf=\\\"row.empLevel != 'TL'\\\">\\r\\n                                <td class=\\\"first-col-td\\\">{{recIndex+1}}</td>\\r\\n                                <td class=\\\"second-col-td\\\">{{row.empId}}</td>\\r\\n                                <td class=\\\"third-col-td\\\">{{row.empName}}</td>\\r\\n                                <!-- <td class=\\\"\\\">{{ row.gender }}</td> -->\\r\\n                                <td class=\\\"\\\">{{row.experience}}</td>\\r\\n                                <td class=\\\"\\\">{{row.empLevel}}</td>\\r\\n                                <ng-container *ngFor=\\\"let column of skillMatrixDetails.columns\\\">\\r\\n                                    <ng-container\\r\\n                                        *ngIf=\\\"column.field != 'empId' && column.field != 'empName' && column.field != 'gender' && column.field != 'experience' && column.field != 'empLevel'\\\">\\r\\n                                        <td class=\\\"text-center empSkillLevelTd\\\"\\r\\n                                            [ngClass]=\\\"(!isObjectEmpty(isChecked(row, column.field))) ? isChecked(row, column.field).status : ''\\\">\\r\\n                                            {{!isObjectEmpty(isChecked(row, column.field)) ? isChecked(row,\\r\\n                                            column.field).level : ''}}\\r\\n                                        </td>\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                                <td style=\\\"text-align: center;\\\" class=\\\"{{getSkillLevelClass(row.skillLevel)}}\\\">\\r\\n                                    {{row.skillLevel}}</td>\\r\\n                                <td style=\\\"text-align: center;\\\" class=\\\"\\\">{{row.skillingPer}}%</td>\\r\\n                                <td style=\\\"text-align: center;\\\" class=\\\"\\\">{{row.marks}}</td>\\r\\n                            </tr>\\r\\n                        </ng-container>\\r\\n                        <!-- <ng-container *ngFor=\\\"let row of skillMatrixDetails.workstationLvlCount;let recIndex = index;\\\"> -->\\r\\n                        <tr>\\r\\n                            <!-- Header for 'Actual No Trained' -->\\r\\n                            <td colspan=\\\"5\\\" style=\\\"text-align: center;\\\">Actual No Trained</td>\\r\\n\\r\\n                            <!-- Loop through workstationLvlCount -->\\r\\n                            <ng-container\\r\\n                                *ngFor=\\\"let lvlCount of skillMatrixDetails.workstationLvlCount; let recIndex = index;\\\">\\r\\n                                <!-- Loop through columns -->\\r\\n                                <ng-container *ngFor=\\\"let column of skillMatrixDetails.columns;\\\">\\r\\n                                    <!-- Check if workstation matches the column field -->\\r\\n                                    <td *ngIf=\\\"column.field === lvlCount.workstation\\\"\\r\\n                                        class=\\\"text-center empSkillLevelTd\\\">\\r\\n                                        <!-- Output workstation and total count -->\\r\\n                                        {{ lvlCount.totalCount }}\\r\\n                                    </td>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <!-- Empty cells to match colspan -->\\r\\n                            <td colspan=\\\"3\\\"></td>\\r\\n                        </tr>\\r\\n                        <!-- </ng-container> -->\\r\\n                        <tr>\\r\\n                            <td style=\\\"padding-left: 15em;\\\" [attr.colspan]=\\\"skillMatrixDetails.columns.length + 3\\\">Team\\r\\n                                Leader Skill Level</td>\\r\\n                        </tr>\\r\\n                    \\r\\n                        <ng-container *ngFor=\\\"let row of filteredSkillMatrixTLData; let index = index;\\\">\\r\\n                            <tr>\\r\\n                                <td class=\\\"first-col-td\\\">{{ index + 1 }}</td>\\r\\n                                <td class=\\\"second-col-td\\\">{{ row.empId }}</td>\\r\\n                                <td class=\\\"third-col-td\\\">{{ row.empName }}</td>\\r\\n                                <td>{{ row.experience }}</td>\\r\\n                                <td>{{ row.empLevel }}</td>\\r\\n                                <ng-container *ngFor=\\\"let column of skillMatrixDetails.columns\\\">\\r\\n                                    <ng-container\\r\\n                                        *ngIf=\\\"column.field !== 'empId' && column.field !== 'empName' &&\\r\\n                                                column.field !== 'gender' && column.field !== 'experience' &&\\r\\n                                                column.field !== 'empLevel'\\\">\\r\\n                                        <td class=\\\"text-center empSkillLevelTd\\\"\\r\\n                                            [ngClass]=\\\"(!isObjectEmpty(isChecked(row, column.field))) ? isChecked(row, column.field).status : ''\\\">\\r\\n                                            {{ !isObjectEmpty(isChecked(row, column.field)) ? isChecked(row, column.field).level : '' }}\\r\\n                                        </td>\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                                <td style=\\\"text-align: center;\\\" class=\\\"{{ getSkillLevelClass(row.skillLevel) }}\\\">\\r\\n                                    {{ row.skillLevel }}\\r\\n                                </td>\\r\\n                                <td style=\\\"text-align: center;\\\">{{ row.skillingPer }}%</td>\\r\\n                                <td style=\\\"text-align: center;\\\">{{ row.marks }}</td>\\r\\n                            </tr>\\r\\n                        </ng-container>\\r\\n                        \\r\\n                    </tbody>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isObjectEmpty(skillMatrixDetails)\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td colspan=\\\"11\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoader\\\">\\r\\n                                Data Not Found\\r\\n                            </td>\\r\\n                            <td colspan=\\\"11\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoader\\\">\\r\\n                                <app-loading></app-loading>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </ng-container>\\r\\n                <tr *ngIf=\\\"(filteredEmpData == null || filteredEmpData.length == 0)\\\">\\r\\n                    <td colspan=\\\"11\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoading\\\">\\r\\n                        Data Not Found\\r\\n                    </td>\\r\\n                  \\r\\n                </tr>\\r\\n\\r\\n                \\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"pr\\\">\\r\\n        <ul class=\\\"count-block\\\">\\r\\n            <ng-container *ngFor=\\\"let count of skillMatrixDetails.levelSummary\\\">\\r\\n                <li class=\\\"countLi\\\" *ngIf=\\\"count.levelName != 'L4'\\\">\\r\\n                    <div class=\\\"headerBlock\\\">\\r\\n                        <label class=\\\"heading\\\">{{count.levelName}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"row m-0\\\">\\r\\n                        <div class=\\\"col-4 text-center m-auto p-l-5 p-r-5\\\">\\r\\n                            <label class=\\\"heading\\\">REQD.</label><br />\\r\\n                            <p class=\\\"m-0 count\\\">{{count.requiredCount || '0'}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4 text-center m-auto p-l-5 p-r-5\\\">\\r\\n                            <label class=\\\"heading\\\">ACT.</label><br />\\r\\n                            <p class=\\\"m-0 count\\\">{{count.actualCount || '0'}}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4 text-center m-auto p-l-5 p-r-5\\\">\\r\\n                            <label class=\\\"heading\\\">GAP</label><br />\\r\\n                            <p class=\\\"m-0 count\\\">{{((count.requiredCount && count.requiredCount > 0) &&\\r\\n                                (count.requiredCount\\r\\n                                > count.actualCount)) ? (count.requiredCount -\\r\\n                                count.actualCount) : 0 || '0'}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </li>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container >\\r\\n                <li class=\\\"countLi\\\">\\r\\n                    <div class=\\\"headerBlock\\\">\\r\\n                        <label class=\\\"heading\\\">Average Multiskilling %</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"row m-0\\\">\\r\\n                        <div class=\\\"col-4 text-center m-auto p-l-5 p-r-5\\\">\\r\\n                            <label class=\\\"heading\\\"> </label><br />\\r\\n                            <p class=\\\"m-0 count\\\">{{multiskillingPercentage}} %</p>\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"col-4 text-center m-auto p-l-5 p-r-5\\\">\\r\\n                            <label class=\\\"heading\\\">ACT.</label><br />\\r\\n                            <p class=\\\"m-0 count\\\">D3</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4 text-center m-auto p-l-5 p-r-5\\\">\\r\\n                            <label class=\\\"heading\\\">GAP</label><br />\\r\\n                           \\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </li>\\r\\n            </ng-container>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- Filter Modal -->\\r\\n<ng-template #FilterModal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title popup-header-txt\\\" id=\\\"myModalLabel2\\\">Filter</h4> <button type=\\\"button\\\" class=\\\"close\\\"\\r\\n            aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\"> <span aria-hidden=\\\"true\\\">&times;</span> </button>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"filterData\\\" (ngSubmit)=\\\"submitFilterForm(filterData)\\\" autocomplete=\\\"off\\\"\\r\\n        class=\\\"needs-validation\\\">\\r\\n        <div class=\\\"modal-body p-2\\\" style=\\\"height: calc(100vh - 14vh);\\\"> <perfect-scrollbar>\\r\\n                <div class=\\\"row m-b-0\\\"> <label for=\\\"moduleId\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Plant <span\\r\\n                            class=\\\"astrik\\\">*</span></label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"selectedModuleId\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                            [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"branchAccessList\\\"\\r\\n                            formControlName=\\\"branchId\\\" (onSelect)=\\\"onChangeBranch($event)\\\"\\r\\n                            (onDeSelect)=\\\"onChangeBranch(false)\\\" [(ngModel)]=\\\"searchDet.branch\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\"filterData.controls['branchId'].invalid && (filterData.controls['branchId'].touched || filterData.controls['branchId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['branchId'].errors.required\\\">\\r\\n                                Please select plant\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"dept\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Department <!--<span class=\\\"astrik\\\"\\r\\n                            *ngIf=\\\"deptList != null && deptList.length > 0\\\">*</span>--></label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"dept\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                            [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"deptList\\\"\\r\\n                            formControlName=\\\"deptId\\\" [(ngModel)]=\\\"searchDet.dept\\\" (onSelect)=\\\"onChangeDept($event)\\\"\\r\\n                            (onDeSelect)=\\\"onChangeDept(false)\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <!-- <div *ngIf=\\\"filterData.controls['deptId'].invalid && (filterData.controls['deptId'].touched || filterData.controls['deptId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['deptId'].errors.required\\\">\\r\\n                                Please select department\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"cell\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Cell / Line <!--<span class=\\\"astrik\\\"\\r\\n                            *ngIf=\\\"cellList != null && cellList.length > 0\\\">*</span>--></label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"cell\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                            [placeholder]=\\\"'Select Cell / Line'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"cellList\\\"\\r\\n                            formControlName=\\\"lineIds\\\" [(ngModel)]=\\\"searchDet.cell\\\" (onSelect)=\\\"onChangeCell($event)\\\"\\r\\n                            (onDeSelect)=\\\"onChangeCell(false)\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <!-- <div *ngIf=\\\"filterData.controls['lineIds'].invalid && (filterData.controls['lineIds'].touched || filterData.controls['lineIds'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['lineIds'].errors.required\\\">\\r\\n                                Please select cell/line\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </perfect-scrollbar>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer footerBlock text-right\\\">\\r\\n            <button class=\\\"btn submitBtn event-btn\\\" type=\\\"submit\\\"> <span *ngIf=\\\"submitSpinner\\\"\\r\\n                    class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                <span *ngIf=\\\"!submitSpinner\\\" class=\\\"btn-text\\\">Apply Filter</span> </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn cancelBtn\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">Cancel\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from 'src/app/theme/shared/components';\r\nimport { SkillingService } from '../skilling.service';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Sort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-certificates',\r\n  templateUrl: './certificates.component.html',\r\n  styleUrls: ['./certificates.component.scss'],\r\n\r\n})\r\nexport class CertificatesComponent implements OnInit {\r\n  filterData: FormGroup;\r\n  submitAttempted: boolean = false;\r\n  searchDet: any = {};\r\n  userDet: any = {};\r\n  submitSpinner: boolean = false;\r\n  plantList: any = [];\r\n  departmentList: any;\r\n  certificateList: any;\r\n  selectedCert: any;\r\n  listLoading: boolean = false;\r\n  SingleDropdownSettings: { singleSelection: boolean; idField: string; textField: string; allowSearchFilter: boolean; closeDropDownOnSelection: boolean; };\r\n  multipleDropdownSettings: { singleSelection: boolean; idField: string; textField: string; selectAllText: string; unSelectAllText: string; itemsShowLimit: number; allowSearchFilter: boolean; };\r\n  selectedRecForModal: any;\r\n  staticPagination: any = {\r\n    total: 50,\r\n    page: 1,\r\n    maxSize: 5,\r\n    itemsPerPage: 10,\r\n    totalPages: 5,\r\n    listLength: 50\r\n  };\r\n  sorting: Sort;\r\n  getbranchId: any;\r\n  filterFlag: boolean = false;\r\n  constructor(\r\n    public modalConfig: NgbModalConfig,\r\n    public modalService: NgbModal,\r\n    public alertService: AlertService,\r\n    public fb: FormBuilder,\r\n    private apiService: SkillingService\r\n  ) {\r\n    modalConfig.backdrop = 'static';\r\n    modalConfig.keyboard = false;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userDet = JSON.parse(localStorage.getItem('userDet'));\r\n\r\n    this.filterData = this.fb.group({\r\n      branchId: new FormControl('', Validators.required),\r\n      deptIds: new FormControl('')\r\n    });\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.multipleDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: \"id\",\r\n      textField: \"name\",\r\n      selectAllText: \"Select All\",\r\n      unSelectAllText: \"UnSelect All\",\r\n      itemsShowLimit: 2,\r\n      allowSearchFilter: true,\r\n    };\r\n\r\n    this.getAccessiblePlantList();\r\n    this.getMasterCertificateList();\r\n  };\r\n\r\n  /*\r\n      Common function for set an array for dropdown\r\n      Author: Saurabh salunke\r\n    Date : 25 Aug 2023\r\n  */\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n\r\n  /*\r\n      Get Accessible Plant List\r\n      Author: Saurabh salunke\r\n      Date : 25 Aug 2023\r\n   */\r\n  getAccessiblePlantList() {\r\n    this.apiService.getBranchAccessList('getBranchAccessSetupByEmpId/' + this.userDet.organization.orgId + \"/\" + this.userDet.empId).subscribe((res: any) => {\r\n      console.log(res)\r\n      if (res.result) {\r\n        if (res.branchAccessList != null && res.branchAccessList.length > 0) {\r\n          this.plantList = this.setArray(res.branchAccessList, 'branchId', 'branchName');\r\n\r\n        } else {\r\n          this.plantList = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n        }\r\n      } else {\r\n        this.plantList = [{ id: this.userDet.branch.branchId, name: this.userDet.branch.name }];\r\n      }\r\n      // this.searchDet.branch = [this.plantList[0]];\r\n      this.searchDet.branchId = this.plantList[0].branchId;\r\n      this.getbranchId = this.plantList[0].id;\r\n      console.log(this.getbranchId)\r\n      // this.getDepartmentList(this.getbranchId)\r\n    })\r\n  }\r\n  /*\r\nGet Department List\r\nAuthor: Saurabh salunke\r\nDate : 25 Aug 2023\r\n*/\r\n  getDepartmentList(branchId) {\r\n    console.log(branchId);\r\n\r\n    this.apiService.getDepartmentByBranch('getdepartmentlistbybranchid/' + branchId).subscribe((res: any) => {\r\n      if (res.result) {\r\n        if (res.deptList != null && res.deptList.length > 0) {\r\n          this.departmentList = this.setArray(res.deptList, 'deptId', 'deptName');\r\n          this.searchDet.departmentList = this.setArray(res.deptList, 'deptId', 'deptName');\r\n          // this.searchDet.deptIds = this.searchDet.departmentList;\r\n          if (this.certificateList == null || this.certificateList.length == 0) {\r\n            // this.getMasterCertificateList();\r\n          }\r\n        } else {\r\n          this.searchDet.departmentList = [];\r\n        }\r\n      } else {\r\n        this.searchDet.departmentList = [];\r\n      }\r\n    })\r\n  }\r\n  /*\r\n    Modal function to Open Filter function\r\n    Author: Saurabh salunke\r\n    Date : 25 Aug 2023\r\n*/\r\n  filterModalOpen(modal) {\r\n    this.resetFormField(this.filterData, 'branchId');\r\n    this.resetFormField(this.filterData, 'deptIds');\r\n    this.searchDet.branch = [];\r\n    this.searchDet.deptIds = [];\r\n    this.modalService.open(modal, { windowClass: 'filterPopup' }).result.then(\r\n      (result) => {\r\n        console.log(`Closed with: ${result}`);\r\n        //this.closeResult = `Closed with: ${result}`;\r\n      },\r\n      (reason) => {\r\n        console.log(`Closed with:` + reason);\r\n        if (reason == 'Cross click') {\r\n          this.submitAttempted = false;\r\n\r\n          //   this.searchDet.filterFlag = false;\r\n          //   this.searchDet.filterPopupOpen = false;\r\n          //   this.getMasterCertificateList();\r\n        }\r\n        //this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      },\r\n    );\r\n  }\r\n  /*\r\n       Single Select Dropdown onChange function\r\n        Author: Saurabh salunke\r\n        Date : 25 Aug 2023\r\n    */\r\n  onChange(ev: any, type) {\r\n    if (ev) {\r\n      if (type == 'plant') {\r\n        this.searchDet.branchId = ev.id;\r\n        console.log(ev)\r\n        this.searchDet.deptIds = [];\r\n        this.getDepartmentList(this.searchDet.branchId);\r\n\r\n      }\r\n    } else {\r\n      if (type == 'plant') {\r\n        this.searchDet.departmentList = [];\r\n        this.resetFormField(this.filterData, 'deptIds');\r\n      }\r\n    }\r\n  }\r\n  /*\r\n     Multi Select Dropdown onChange function\r\n     Author: Saurabh salunke\r\n  Date : 25 Aug 2023\r\n */\r\n  onChangeAll(ev: any, type) {\r\n    if (ev) {\r\n      console.log('Select All action');\r\n\r\n    } else {\r\n      console.log('Unselect All action');\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n     Filter function for plant and cell\r\n     Author: Saurabh salunke\r\n     Date : 25 Aug 2023\r\n   */\r\n  submitFilterForm(form) {\r\n    this.submitAttempted = true;\r\n    console.log(form)\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      if (form.controls.branchId.invalid) {\r\n        return;\r\n      }\r\n\r\n    }\r\n    this.clearPagination();\r\n    this.searchDet.filterFlag = true;\r\n    this.getMasterCertificateList()\r\n    this.modalService.dismissAll();\r\n  }\r\n  clearPagination() {\r\n    this.staticPagination = {\r\n      total: 0,\r\n      page: 1,\r\n      maxSize: 5,\r\n      itemsPerPage: 10,\r\n      totalPages: 0,\r\n      listLength: 0\r\n    }\r\n  }\r\n  /* \r\n      Removes Filter of plant and cell\r\n      Author: Saurabh salunke\r\n       Date : 25 Aug 2023\r\n    */\r\n  removeFilter() {\r\n    this.submitAttempted = false;\r\n    this.filterData.reset();\r\n    this.searchDet.branch = [];\r\n    this.searchDet.deptIds = [];\r\n    this.searchDet.filterFlag = false;\r\n    this.searchDet.filterPopupOpen = false;\r\n    this.certificateList = []\r\n    this.getDepartmentList(this.plantList[0].id);\r\n\r\n  }\r\n\r\n  /* Get Master Certificate List\r\n   Author: Saurabh salunke\r\n   Date : 25 Aug 2023\r\n*/\r\n  getMasterCertificateList() {\r\n    this.listLoading = true;\r\n\r\n    if (this.staticPagination.page == 1) {\r\n      this.staticPagination.offset = 0;\r\n    } else {\r\n      this.staticPagination.offset = (this.staticPagination.page - 1) * this.staticPagination.itemsPerPage;\r\n    }\r\n\r\n    var req: any = {\r\n      \"orgId\": this.userDet.organization.orgId,\r\n      \"offset\": this.staticPagination.offset,\r\n      \"limit\": this.staticPagination.itemsPerPage,\r\n\r\n    }\r\n    if (this.searchDet.branch != null && this.searchDet.branch.length > 0) {\r\n      for (let i = 0; i < this.searchDet.branch.length; i++) {\r\n        req.branchId = this.searchDet.branch[0].id;\r\n\r\n      }\r\n    }\r\n    else {\r\n      req.branchId = this.userDet.branch.branchId;\r\n    }\r\n    if (this.getIDsArray(this.searchDet.deptIds) != null && this.getIDsArray(this.searchDet.deptIds).length > 0) {\r\n      for (let i = 0; i < this.getIDsArray(this.searchDet.deptIds).length; i++) {\r\n        req.deptIds = this.getIDsArray(this.searchDet.deptIds)\r\n      }\r\n    }\r\n    if (this.sorting) {\r\n      if (this.sorting.direction != \"\") {\r\n        req.colName = this.sorting.active;\r\n        req.orderType = this.sorting.direction.toUpperCase();\r\n      }\r\n    }\r\n    if (this.searchDet.searchData && this.searchDet.searchInput && this.searchDet.searchInput != '') {\r\n      req.search = this.searchDet.searchInput;\r\n    }\r\n\r\n    this.apiService.getCertificateList('apis/sm/getCertificateList', req).subscribe((res: any) => {\r\n      this.listLoading = false;\r\n      console.log(res);\r\n\r\n      if (res.result) {\r\n        if (this.staticPagination.page == 1) {\r\n          this.staticPagination.total = res.totalCount;\r\n          this.staticPagination.totalPages = Math.ceil(res.totalCount / this.staticPagination.itemsPerPage);\r\n        }\r\n        if (res.dataList != null && res.dataList.length > 0) {\r\n          this.certificateList = res.dataList;\r\n          console.log(this.certificateList);\r\n          this.staticPagination.listLength = res.dataList.length;\r\n        } else {\r\n          this.certificateList = [];\r\n          this.staticPagination.listLength = this.certificateList.length;\r\n          this.staticPagination.total = this.certificateList.length;\r\n        }\r\n      } else {\r\n        this.certificateList = [];\r\n        this.staticPagination.listLength = this.certificateList.length;\r\n        this.staticPagination.total = this.certificateList.length;\r\n      }\r\n    })\r\n  }\r\n\r\n  /* Function to view Selected Certificate\r\n   Author: Saurabh salunke\r\n  Date : 25 Aug 2023\r\n*/\r\n  previewCertificate(data, previewCertModal) {\r\n    console.log(data, previewCertModal)\r\n    this.selectedRecForModal = data;\r\n    this.modalService.open(previewCertModal, {\r\n      windowClass: 'bottom'\r\n    });\r\n  }\r\n\r\n  /* \r\n      This function resets Form \r\n       Author: Saurabh salunke\r\n      Date : 25 Aug 2023\r\n  */\r\n  resetFormField(form, keyName) {\r\n    Object.keys(form.controls).forEach(key => {\r\n      if (keyName != '' && key == keyName) {\r\n        form.get(keyName).reset();\r\n        form.get(keyName).markAsPristine();\r\n        form.get(keyName).markAsUntouched();\r\n      } else {\r\n        form.get(key).reset();\r\n        form.get(key).markAsPristine();\r\n        form.get(key).markAsUntouched();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /*\r\n   @DESC : Load More Pagination next page Data\r\n   Author: Saurabh salunke\r\n     Date : 1 sept 2023\r\n */\r\n  loadMore(data: any) {\r\n    this.certificateList = [];\r\n    this.listLoading = true;\r\n    this.staticPagination = data;\r\n    this.certificateList = [];\r\n    if (this.filterFlag) {\r\n      this.getMasterCertificateList()\r\n    } else {\r\n      this.getMasterCertificateList()\r\n    }\r\n\r\n  }\r\n  /*\r\n   @DESC : Sort table\r\n   Author: Saurabh salunke\r\n     Date : 1 sept 2023\r\n */\r\n  sortData(sort: Sort) {\r\n    this.sorting = sort;\r\n    this.getMasterCertificateList();\r\n  }\r\n\r\n  /*\r\nCommon function For get Ids from array\r\n@Author Saurabh salunke\r\n* @Date sept 1, 2023\r\n*/\r\n  getIDsArray(array) {\r\n    let tmp: any = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        tmp.push(element.id);\r\n      }\r\n    }\r\n    return tmp;\r\n  }\r\n\r\n  /* Common function For Searching  \r\n   @Author Saurabh salunke\r\n * @Date August 31, 2023*/\r\n  getSearchList(ev) {\r\n    console.log(ev);\r\n    // this.clearPagination();\r\n    this.searchDet.searchData = ev;\r\n    if (!ev) {\r\n      this.searchDet.searchInput = \"\";\r\n    }\r\n    if (this.filterFlag) {\r\n      this.getMasterCertificateList();\r\n    } else {\r\n      this.getMasterCertificateList();\r\n    }\r\n  }\r\n  getSortFunction(array, fieldToSort) {\r\n    if (array && Array.isArray(array) && array.length > 0) {\r\n      if (fieldToSort === \"plant\" || fieldToSort === \"cell\" || fieldToSort === \"dept\") {\r\n        array.sort(function (a, b) {\r\n          var nameA = a.name ? a.name.toUpperCase() : \"\";\r\n          var nameB = b.name ? b.name.toUpperCase() : \"\";\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n}\r\n","export default \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title headerTitle\\\" id=\\\"modal-basic-title\\\">\\r\\n        {{selectedDet.title}} Workforce Deployment\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close('Cross Click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"row m-0 formInputField\\\">\\r\\n    <div class=\\\"col-2 insideLabel p-l-5 p-r-5\\\">\\r\\n        <label for=\\\"moduleId\\\" class=\\\"col-form-label p-0\\\">Plant&nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n        <div class=\\\"\\\">\\r\\n            <ng-multiselect-dropdown name=\\\"branch\\\"\\r\\n                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"branchAccessList\\\"\\r\\n                (onSelect)=\\\"onChangeBranch($event)\\\" (onDeSelect)=\\\"onChangeBranch(false)\\\" [(ngModel)]=\\\"searchDet.branch\\\"\\r\\n                [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n            </ng-multiselect-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 insideLabel p-l-5 p-r-5\\\">\\r\\n        <label for=\\\"dept\\\" class=\\\"col-form-label p-0\\\">Department&nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n        <div class=\\\"\\\">\\r\\n            <ng-multiselect-dropdown name=\\\"dept\\\"\\r\\n                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"deptList\\\"\\r\\n                [(ngModel)]=\\\"searchDet.dept\\\" (onSelect)=\\\"onChangeDept($event)\\\" (onDeSelect)=\\\"onChangeDept(false)\\\"\\r\\n                [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n            </ng-multiselect-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 insideLabel p-l-5 p-r-5\\\">\\r\\n        <label for=\\\"cell\\\" class=\\\"col-form-label p-0\\\">Cell / Line&nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n        <div class=\\\"\\\">\\r\\n            <ng-multiselect-dropdown name=\\\"cell\\\"\\r\\n                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                [placeholder]=\\\"'Select Cell / Line'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"cellList\\\"\\r\\n                [(ngModel)]=\\\"searchDet.cell\\\" (onSelect)=\\\"onChangeCell($event)\\\" (onDeSelect)=\\\"onChangeCell(false)\\\"\\r\\n                [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n            </ng-multiselect-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 insideLabel p-l-5 p-r-5\\\">\\r\\n        <label for=\\\"shift\\\" class=\\\"col-form-label p-0\\\">Shift&nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n        <div class=\\\"\\\">\\r\\n            <ng-multiselect-dropdown name=\\\"shift\\\"\\r\\n                class=\\\"custom-multiSelection customWidthForInter assessmentdropDown addLabelInside\\\"\\r\\n                [placeholder]=\\\"'Select Shift'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"shiftList\\\"\\r\\n                [(ngModel)]=\\\"searchDet.shift\\\" (onSelect)=\\\"onChangeShift($event)\\\" (onDeSelect)=\\\"onChangeShift(false)\\\"\\r\\n                [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n            </ng-multiselect-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 p-l-5 p-r-5\\\">\\r\\n        <div class=\\\"row  m-0\\\">\\r\\n            <div class=\\\"col-6 insideLabel datePickerBlock p-l-5 p-r-5\\\">\\r\\n                <label for=\\\"fromDate\\\" class=\\\"col-form-label\\\">From\\r\\n                    Date&nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                <div class=\\\"custom-Input-Group\\\" (click)=\\\"fromDatePicker.open()\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                        <div class=\\\"input-group-text\\\">\\r\\n                            <i class=\\\"feather icon-calendar\\\"></i>\\r\\n                        </div>\\r\\n                        <input matInput #input=\\\"ngModel\\\" [(ngModel)]=\\\"searchDet.fromDate\\\" [min]=\\\"minDate\\\"\\r\\n                            [matDatepicker]=\\\"fromDatePicker\\\" class=\\\"form-control datePickInput\\\" placeholder=\\\"From Date\\\"\\r\\n                            (keydown)=\\\"false\\\" (dateChange)=\\\"selectDate('from', $event)\\\" name=\\\"fromDate\\\"\\r\\n                            [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n                        <mat-datepicker #fromDatePicker></mat-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 insideLabel datePickerBlock p-l-5 p-r-5\\\">\\r\\n                <label for=\\\"toDate\\\" class=\\\"col-form-label\\\">To\\r\\n                    Date&nbsp;<span class=\\\"astrik\\\">*</span></label>\\r\\n                <div class=\\\"custom-Input-Group\\\" (click)=\\\"toDatePicker.open()\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                        <div class=\\\"input-group-text\\\">\\r\\n                            <i class=\\\"feather icon-calendar\\\"></i>\\r\\n                        </div>\\r\\n                        <input matInput #input=\\\"ngModel\\\" [(ngModel)]=\\\"searchDet.toDate\\\" [min]=\\\"searchDet.fromDate\\\" [matDatepicker]=\\\"toDatePicker\\\" class=\\\"form-control datePickInput\\\"\\r\\n                            placeholder=\\\"To Date\\\" (keydown)=\\\"false\\\" (dateChange)=\\\"selectDate('to', $event)\\\"\\r\\n                            name=\\\"toDate\\\" [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n                        <mat-datepicker #toDatePicker></mat-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\" style=\\\"padding: 10px;\\\">\\r\\n    <perfect-scrollbar [style.height]=\\\"(selectedDet.title == 'Add') ? 'calc(100vh - 23vh)' : 'calc(100vh - 15vh)'\\\">\\r\\n        <div class=\\\"table-block skill-table\\\">\\r\\n            <div class=\\\"table-responsive tableFixHead\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                    <ng-container *ngIf=\\\"!isObjectEmpty(skillMatrixDetails)\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <ng-container *ngFor=\\\"let x of skillMatrixDetails.columns\\\">\\r\\n                                    <ng-container\\r\\n                                        *ngIf=\\\"(selectedDet.title == 'Add') ? (x.field != 'empId' && x.field != 'cmpyEmpId' && x.field != 'empName') : true\\\">\\r\\n                                        <th class=\\\"\\\" scope=\\\"col\\\">\\r\\n                                            {{x.heading}}<ng-container\\r\\n                                                *ngIf=\\\"x.hasOwnProperty('levelName') && x.levelName\\\">\\r\\n                                                ({{x.levelName}})\\r\\n                                            </ng-container>\\r\\n                                        </th>\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngIf=\\\"!isObjectEmpty(skillMatrixDetails)\\\">\\r\\n                                <ng-container *ngFor=\\\"let row of skillMatrixDetails.columns\\\">\\r\\n                                    <ng-container\\r\\n                                        *ngIf=\\\"(selectedDet.title == 'Add') ? (row.field != 'empId' && row.field != 'cmpyEmpId' && row.field != 'empName') : true\\\">\\r\\n                                        <td class=\\\"p-0\\\">\\r\\n                                            <!-- <ng-container\\r\\n                                                *ngIf=\\\"selectedWorkForceData != null && selectedWorkForceData.length > 0\\\">\\r\\n                                                <ng-container *ngFor=\\\"let x of selectedWorkForceData\\\">\\r\\n                                                    <div class=\\\"checkbox-block form-check\\\" \\r\\n                                                        (click)=\\\"(selectedDet.title == 'View') ? '' : onChangeEmp(x, row,'remove')\\\"\\r\\n                                                        *ngIf=\\\"x.isSelected && row.id == x.workstationId\\\">\\r\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                                            [checked]=\\\"x.isSelected\\\"\\r\\n                                                            [id]=\\\"'checkbox' + x.empId + '_' + row.field\\\"\\r\\n                                                            [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n                                                        <label\\r\\n                                                            [for]=\\\"'checkbox' + x.empId + '_' + row.field\\\">{{x.empName}}\\r\\n                                                            <ng-container\\r\\n                                                                *ngIf=\\\"!isObjectEmpty(isChecked(x, row.field))\\\">\\r\\n                                                                &nbsp;({{isChecked(x,row.field).level}})\\r\\n                                                            </ng-container>\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                            </ng-container> -->\\r\\n                                            <ng-container\\r\\n                                                *ngIf=\\\"selectedWorkForceData != null && selectedWorkForceData.length > 0\\\">\\r\\n                                                <ng-container *ngFor=\\\"let x of selectedWorkForceData\\\">\\r\\n                                                    <div class=\\\"checkbox-block form-check\\\"\\r\\n                                                        (click)=\\\"(selectedDet.title == 'View') ? '' : onChangeEmp(x, row, 'remove')\\\"\\r\\n                                                        *ngIf=\\\"x.isSelected && row.id == x.workstationId\\\"\\r\\n                                                        [ngClass]=\\\"{'red-text': x.isEligible == false}\\\">\\r\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                                            [checked]=\\\"x.isSelected\\\"\\r\\n                                                            [id]=\\\"'checkbox' + x.empId + '_' + row.field\\\"\\r\\n                                                            [disabled]=\\\"selectedDet.title == 'View'\\\">\\r\\n                                                        <label\\r\\n                                                            [for]=\\\"'checkbox' + x.empId + '_' + row.field\\\">{{x.empName}}\\r\\n                                                            <ng-container\\r\\n                                                                *ngIf=\\\"!isObjectEmpty(isChecked(x, row.field))\\\">\\r\\n                                                                &nbsp;({{isChecked(x,row.field).level}})\\r\\n                                                            </ng-container>\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                            </ng-container>\\r\\n                                            <ng-container\\r\\n                                                *ngIf=\\\"skillMatrixDetails.tableData != null && skillMatrixDetails.tableData.length > 0\\\">\\r\\n                                                <ng-container *ngFor=\\\"let y of skillMatrixDetails.tableData\\\">\\r\\n                                                    <div class=\\\"checkbox-block form-check\\\" *ngIf=\\\"!y.isSelected\\\"\\r\\n                                                        (click)=\\\"onChangeEmp(y, row,'add')\\\">\\r\\n                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                                            [checked]=\\\"y.isSelected\\\"\\r\\n                                                            [id]=\\\"'checkbox' + y.empId + '_' + row.field\\\">\\r\\n                                                        <label\\r\\n                                                            [for]=\\\"'checkbox' + y.empId + '_' + row.field\\\">{{y.empName}}\\r\\n                                                            <ng-container\\r\\n                                                                *ngIf=\\\"!isObjectEmpty(isChecked(y, row.field))\\\">\\r\\n                                                                &nbsp;({{isChecked(y,row.field).level}})\\r\\n                                                            </ng-container>\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </ng-container>\\r\\n                                            </ng-container>\\r\\n                                        </td>\\r\\n                                    </ng-container>\\r\\n                                </ng-container>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"isObjectEmpty(skillMatrixDetails)\\\">\\r\\n                                <td colspan=\\\"12\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoader\\\">\\r\\n                                    Data Not Found\\r\\n                                </td>\\r\\n                                <td colspan=\\\"12\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoader\\\">\\r\\n                                    <app-loading></app-loading>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"isObjectEmpty(skillMatrixDetails)\\\">\\r\\n                        <tbody>\\r\\n                            <tr>\\r\\n                                <td colspan=\\\"6\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoader\\\">\\r\\n                                    Data Not Found\\r\\n                                </td>\\r\\n                                <td colspan=\\\"6\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoader\\\">\\r\\n                                    <app-loading></app-loading>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </ng-container>\\r\\n                </table>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"footerBlock text-right\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn cancelBtn m-l-5\\\" aria-label=\\\"Close\\\"\\r\\n                    [disabled]=\\\"submitLoader && selectedDet.title == 'Add'\\\" (click)=\\\"close('Cross Click')\\\">Cancel\\r\\n                </button>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </perfect-scrollbar>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <button style=\\\"margin-right: 10px;\\\" type=\\\"button\\\" class=\\\"btn cancelBtn m-l-5\\\" aria-label=\\\"Close\\\"\\r\\n                    [disabled]=\\\"submitLoader && selectedDet.title == 'Add'\\\" (click)=\\\"close('Cross Click')\\\">Cancel\\r\\n                </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn submitBtn event-btn\\\" (click)=\\\"(!submitLoader) ? saveWorkForce() : ''\\\"\\r\\n                *ngIf=\\\"selectedDet.title == 'Add'\\\">\\r\\n                <span *ngIf=\\\"submitLoader\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                <span *ngIf=\\\"!submitLoader\\\" class=\\\"btn-text\\\">Submit </span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { SkillingService } from '../skilling.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Sort } from '@angular/material/sort';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-actions',\r\n  templateUrl: './actions.component.html',\r\n  styleUrls: ['./actions.component.scss']\r\n})\r\nexport class ActionsComponent implements OnInit {\r\n  filterFormData: FormGroup;\r\n  filterFlag: boolean = false;\r\n  searchDet: any = {};\r\n  actionList: any = [];\r\n  selectedBranch: any = {};\r\n  branchAccessList: any = [];\r\n  deptList: any = [];\r\n  loggedInEmpDet: any = {};\r\n  SingleDropdownSettings: IDropdownSettings = {};\r\n  multipleDropdownSettings: IDropdownSettings = {};\r\n  listLoading: boolean = false;\r\n  // SingleDeptDropdownSettings: IDropdownSettings = {};\r\n  sorting: any;\r\n  submitAttempted: boolean = false;\r\n  plantList: any = [];\r\n  masterDeptList: any = [];\r\n  isAppliedFilter: boolean = false;\r\n  masterLevelList: any = [];\r\n  cellList: any[];\r\n  staticPagination: any = {\r\n    total: 0,\r\n    page: 1,\r\n    maxSize: 5,\r\n    itemsPerPage: 10,\r\n    totalPages: 0,\r\n    listLength: 0\r\n  }\r\n  constructor(\r\n    private skillingService: SkillingService,\r\n    private modalService: NgbModal,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInEmpDet = JSON.parse(localStorage.getItem('userDet'));\r\n\r\n    this.filterFormData = this.fb.group({\r\n      branch: new FormControl('', Validators.required),\r\n      dept: new FormControl(''),\r\n      lineIds: new FormControl(''),\r\n      fromDate: new FormControl(\"\"),\r\n      toDate: new FormControl(\"\"),\r\n      skillLvlId: new FormControl(''),\r\n    });\r\n    this.SingleDropdownSettings = {\r\n      singleSelection: true,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      allowSearchFilter: true,\r\n      closeDropDownOnSelection: true,\r\n    };\r\n    this.multipleDropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'id',\r\n      textField: 'name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      // itemsShowLimit: 3,\r\n      itemsShowLimit: 2,\r\n      allowSearchFilter: true\r\n    };\r\n    // this.SingleDeptDropdownSettings = {\r\n    //   singleSelection: true,\r\n    //   idField: 'deptId',\r\n    //   textField: 'deptName',\r\n    //   allowSearchFilter: true,\r\n    //   closeDropDownOnSelection: true,\r\n    // };\r\n\r\n    this.getBranchAccessList();\r\n    this.getSkillMatrixOjtList();\r\n    this.getMasterSkillLevelList();\r\n  }\r\n\r\n  getSearchList(ev) {\r\n    this.clearPagination();\r\n    this.searchDet.searchData = ev;\r\n    if (!ev) {\r\n      this.searchDet.searchInput = '';\r\n      this.getSkillMatrixOjtList();\r\n    }\r\n    else {\r\n      this.getSkillMatrixOjtList()\r\n    }\r\n  }\r\n  filterModalOpen(modal: any) {\r\n    this.filterFlag = true\r\n    this.modalService.open(modal, {\r\n      windowClass: 'filterPopup',\r\n    });\r\n  }\r\n  /* gets Branch access list on employee\r\n   @Author Jayshri Kolase\r\n  * @Date August 24, 2023\r\n */\r\n  getBranchAccessList() {\r\n    this.skillingService.getBranchAccessList('getBranchAccessSetupByEmpId/' + this.loggedInEmpDet.organization.orgId + \"/\" + this.loggedInEmpDet.empId)\r\n      .subscribe((res: any) => {\r\n        if (res.result) {\r\n          if (res.branchAccessList != null && res.branchAccessList.length > 0) {\r\n            this.plantList = this.setArray(res.branchAccessList, 'branchId', 'branchName');\r\n          } else {\r\n            this.plantList = [{ id: this.loggedInEmpDet.branch.branchId, name: this.loggedInEmpDet.branch.name }];\r\n          }\r\n        } else {\r\n          this.plantList = [{ id: this.loggedInEmpDet.branch.branchId, name: this.loggedInEmpDet.branch.name }];\r\n        }\r\n        // this.searchDet.branchId = [this.plantList[0]];\r\n      });\r\n  }\r\n\r\n  /* Change branch selction\r\n     @Author Jayshri Kolase\r\n    * @Date August 24, 2023\r\n  */\r\n  // onChangeBranch(event: any) {\r\n  //   this.selectedBranch.branchId = event.branchId;\r\n  //   console.log(event);\r\n  //   this.getDeptList()\r\n  // }\r\n  /* get department list on branch selection\r\n     @Author Jayshri Kolase\r\n    * @Date August 24, 2023\r\n  */\r\n  getDeptList(branch) {\r\n    this.skillingService.getdepartmentlistbybranchid('getdepartmentlistbybranchid/' + branch.id).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.deptList != null && response.deptList.length > 0) {\r\n          this.masterDeptList = this.setArray(response.deptList, 'deptId', 'deptName');\r\n          console.log(this.masterDeptList)\r\n          // this.searchDet.skillLvlId = [this.masterLevelList[0]];\r\n        } else {\r\n          this.masterDeptList = [];\r\n        }\r\n      } else {\r\n        this.masterDeptList = [];\r\n      }\r\n    })\r\n  }\r\n  /* get skill mtrix action list\r\n     Author : simran\r\n     created date : 14/09/2023\r\n   */\r\n\r\n  getSkillMatrixOjtList = function () {\r\n    if (this.staticPagination.page == 1) {\r\n      this.staticPagination.offset = 0;\r\n    } else {\r\n      this.staticPagination.offset = (this.staticPagination.page - 1) * this.staticPagination.itemsPerPage;\r\n    }\r\n    let req: any = {\r\n      'orgId': this.loggedInEmpDet.organization.orgId,\r\n      'offset': this.staticPagination.offset,\r\n      'limit': this.staticPagination.itemsPerPage\r\n    }\r\n    console.log(this.searchDet.branchId)\r\n    if (this.searchDet.branchId != null && this.searchDet.branchId.length > 0) {\r\n      req.branchId = this.searchDet.branchId[0].id;\r\n    }\r\n    else {\r\n      req.branchId = this.loggedInEmpDet.branch.branchId;\r\n    }\r\n    if (this.searchDet.deptId != null && this.searchDet.deptId.length > 0) {\r\n      req.deptId = this.searchDet.deptId[0].id;\r\n    }\r\n    if (this.searchDet.lineIds != null && this.searchDet.lineIds.length > 0) {\r\n      req.lineIds = this.getIDsArray(this.searchDet.lineIds);\r\n    }\r\n    if (this.searchDet.fromDate != null) {\r\n      req.fromDt = moment(this.searchDet.fromDate).format(\"YYYY-MM-DD\");\r\n    }\r\n    if (this.searchDet.toDate != null) {\r\n      req.toDate = moment(this.searchDet.toDate).format(\"YYYY-MM-DD\");\r\n    }\r\n    if (this.searchDet.skillLvlId != null && this.searchDet.skillLvlId.length > 0) {\r\n      req.skillLevelId = this.searchDet.skillLvlId[0].id;\r\n    }\r\n    if (this.searchDet.searchInput && this.searchDet.searchInput != '') {\r\n      req.search = this.searchDet.searchInput;\r\n    }\r\n    if (this.sorting) {\r\n      if (this.sorting.direction != \"\") {\r\n        req.colName = this.sorting.active;\r\n        req.orderType = this.sorting.direction.toUpperCase();\r\n      }\r\n    }\r\n    this.skillingService.getSkillMatrixActionList('apis/sm/getSkillMatrixActionList', req).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (this.staticPagination.page == 1) {\r\n          this.staticPagination.total = response.totalCount;\r\n          this.staticPagination.totalPages = Math.ceil(response.totalCount / this.staticPagination.itemsPerPage);\r\n        }\r\n        if (response.smActionList != null && response.smActionList.length > 0) {\r\n          this.actionList = response.smActionList;\r\n          console.log(this.actionList)\r\n          this.staticPagination.listLength = this.actionList.length;\r\n        }\r\n        else {\r\n          this.actionList = [];\r\n          this.staticPagination.listLength = this.actionList.length;\r\n        }\r\n      }\r\n      else {\r\n        this.actionList = [];\r\n        this.listLoading = false;\r\n        this.staticPagination.listLength = this.actionList.length;\r\n      }\r\n    });\r\n    console.log(req);\r\n  }\r\n  /*\r\n        Apply filter function\r\n        Author: simran\r\n        Date : 14/09/2023\r\n  */\r\n  submitFilterForm(form) {\r\n    this.submitAttempted = true;\r\n    if (form.invalid) {\r\n      Object.keys(form.controls).forEach(key => {\r\n        form.controls[key].markAsDirty();\r\n      });\r\n      return;\r\n    }\r\n    this.clearPagination();\r\n    this.isAppliedFilter = true;\r\n    this.searchDet.filterFlag = true;\r\n    this.staticPagination.offset = 0;\r\n    this.staticPagination.itemsPerPage = 10;\r\n    this.modalService.dismissAll();\r\n    this.getSkillMatrixOjtList();\r\n  }\r\n  removeFilter() {\r\n    this.isAppliedFilter = false;\r\n    this.filterFormData.reset();\r\n    this.searchDet.branchId = [];\r\n    this.searchDet.deptId = [];\r\n    this.searchDet.lineIds = [];\r\n    this.searchDet.fromDate = null;\r\n    this.searchDet.toDate = null;\r\n    this.searchDet.skillLvlId = [];\r\n    this.getSkillMatrixOjtList();\r\n  }\r\n  /*\r\n  Common function for set an array for dropdown\r\n  Author: simran\r\n  Date : 14/09/2023\r\n  */\r\n  setArray(array, key1, key2) {\r\n    let tmpArray = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        element.id = element[key1];\r\n        element.name = element[key2];\r\n        tmpArray.push(element);\r\n      }\r\n    }\r\n    return tmpArray;\r\n  }\r\n  /*\r\n    Single Select Dropdown onChange function\r\n    Author: Simran\r\n    Date : 14/09/2023\r\n  */\r\n  onChange(ev: any, type) {\r\n    console.log(ev)\r\n    // if (ev) {\r\n    //   this.getDeptList(ev)\r\n    // } else {\r\n    //   console.log('Unselect plant');\r\n    // }\r\n    if (ev) {\r\n      if (type == \"plant\") {\r\n        this.getDeptList(ev);\r\n        //this.getLineNameList(ev);\r\n        this.searchDet.deptId = [];\r\n        this.searchDet.lineIds = [];\r\n\r\n      }\r\n      else if (type == \"dept\") {\r\n        this.getCellList(ev);\r\n        //this.getLineNameList(ev);\r\n        this.searchDet.lineIds = [];\r\n      }\r\n    } else {\r\n      if (type == \"plant\") {\r\n        if (this.searchDet) {\r\n          this.searchDet.departmentList = [];\r\n        }\r\n      }\r\n      else if (type == \"dept\") {\r\n        if (this.searchDet) {\r\n          this.searchDet.cellLineList = [];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* \r\n  Load More Pagination next page Data\r\n  Author : Simran\r\n  Date : 14/09/2023\r\n  */\r\n  loadMore(ev: any) {\r\n    this.staticPagination = ev;\r\n    this.actionList = [];\r\n    this.listLoading = true;\r\n    this.getSkillMatrixOjtList();\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.sorting = sort;\r\n    this.getSkillMatrixOjtList()\r\n  }\r\n\r\n  /*\r\n    DESC : Function to clear pagination \r\n    Author: Simran\r\n    Date : 14/09/2023\r\n  */\r\n  clearPagination() {\r\n    this.staticPagination = {\r\n      total: 0,\r\n      page: 1,\r\n      maxSize: 5,\r\n      itemsPerPage: 10,\r\n      totalPages: 0,\r\n      listLength: 0\r\n    }\r\n  }\r\n  getSortFunction(array, fieldToSort) {\r\n    if (array && Array.isArray(array) && array.length > 0) {\r\n      if (fieldToSort === \"dept\" || fieldToSort === \"plant\") {\r\n        array.sort(function (a, b) {\r\n          var nameA = a.name ? a.name.toUpperCase() : \"\";\r\n          var nameB = b.name ? b.name.toUpperCase() : \"\";\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  }\r\n  // Date select  function\r\n  // 30/10/2023\r\n  // simran\r\n  selectCustomDate(fromDate, toDate) {\r\n    console.log(\"From Date:\", fromDate);\r\n    console.log(\"To Date:\", toDate);\r\n    if (\r\n      fromDate.value != null &&\r\n      fromDate.value != undefined &&\r\n      fromDate.value != \"\"\r\n    ) {\r\n      this.searchDet.fromDate = new Date(fromDate.value);\r\n    }\r\n    if (\r\n      toDate.value != null &&\r\n      toDate.value != undefined &&\r\n      toDate.value != \"\"\r\n    ) {\r\n      this.searchDet.toDate = new Date(toDate.value);\r\n    }\r\n  }\r\n  /*\r\n     Get Master Level List\r\n     Author: Simran\r\n     Date : 30/10/2023\r\n */\r\n  getMasterSkillLevelList() {\r\n    this.skillingService.getMasterLevelList('apis/sm/getLevelList').subscribe((res: any) => {\r\n      if (res.result) {\r\n        if (res.dataList != null && res.dataList.length > 0) {\r\n          this.masterLevelList = this.setArray(res.dataList, 'id', 'levelName');\r\n          // this.searchDet.skillLvlId = [this.masterLevelList[0]];\r\n        } else {\r\n          this.masterLevelList = [];\r\n        }\r\n      } else {\r\n        this.masterLevelList = [];\r\n      }\r\n    })\r\n  }\r\n  getCellList(data) {\r\n    var req: any = {\r\n      branchId: this.searchDet.branchId[0].id,\r\n      // deptId:this.searchDet.deptId\r\n      deptId: data.id\r\n    };\r\n    this.skillingService.getCellList(\"apis/sm/getCellList\", req).subscribe((response: any) => {\r\n      if (response.result) {\r\n        if (response.dataList != null && response.dataList.length > 0) {\r\n          this.cellList = this.setArray(response.dataList, \"lineId\", \"lineName\");\r\n          // this.cellList = this.sortFunction( this.cellList,\"lineName\");\r\n          console.log(this.cellList)\r\n          // this.searchDet.cell = [this.cellList[0]];\r\n          console.log(this.searchDet.cell)\r\n\r\n        } else {\r\n          this.cellList = [];\r\n        }\r\n      } else {\r\n        this.cellList = [];\r\n      }\r\n    });\r\n  }\r\n  onChangeAll(ev: any, type) {\r\n    if (ev) {\r\n      console.log('Select All action');\r\n    } else {\r\n      console.log('Unselect All action');\r\n    }\r\n  }\r\n  getIDsArray(array) {\r\n    let tmp: any = [];\r\n    if (array != null && array.length > 0) {\r\n      for (const element of array) {\r\n        tmp.push(element.id);\r\n      }\r\n    }\r\n    return tmp;\r\n  }\r\n}\r\n","export default \"<div class=\\\"row m-0\\\">\\r\\n    <div class=\\\"col-11 m-auto\\\">\\r\\n        <app-topBar title=\\\"Actions\\\"></app-topBar>\\r\\n    </div>\\r\\n    <!-- <div class=\\\"col-3 m-auto\\\">\\r\\n        <app-loginInfo></app-loginInfo>\\r\\n    </div> -->\\r\\n    <!-- <div class=\\\"col-1 p-0 m-auto text-center\\\">\\r\\n        <button class=\\\"btn btn-default filter-btn\\\" title=\\\"Filter\\\" (click)=\\\"filterModalOpen(filterPopup)\\\">\\r\\n            <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n    </div> -->\\r\\n    <div class=\\\"col-1 p-0 m-auto text-center\\\">\\r\\n        <div class=\\\"btn-filter-wrap\\\">\\r\\n            <button class=\\\"btn btn-default filter-btn\\\" [ngClass]=\\\"{'applied' : isAppliedFilter}\\\" title=\\\"Filter\\\"\\r\\n                (click)=\\\"filterModalOpen(filterPopup)\\\">\\r\\n                <i class=\\\"fa fa-filter filter-icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n            <div class=\\\"btn-clear-filter\\\" *ngIf=\\\"isAppliedFilter\\\" (click)=\\\"removeFilter();\\\">x</div>\\r\\n            <div class=\\\"lbl-filter-applied\\\" *ngIf=\\\"isAppliedFilter\\\">Filter Applied</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"homepage-block bg-Transperant p-l-15 p-r-15\\\">\\r\\n    <div class=\\\"extraContent\\\">\\r\\n        <div class=\\\"row m-0\\\">\\r\\n            <div class=\\\"p-l-0 p-r-5 col-4\\\">\\r\\n                <div class=\\\"row m-0\\\">\\r\\n                    <div class=\\\"p-l-0 p-r-5\\\" [ngClass]=\\\"(filterFlag)?'col-6':'col-12'\\\">\\r\\n                        <div class=\\\"form-group has-search\\\">\\r\\n                            <span class=\\\"fa fa-search form-control-feedback\\\" *ngIf=\\\"!searchDet.searchData\\\"\\r\\n                                (click)=\\\"getSearchList(true)\\\"></span>\\r\\n                            <span *ngIf=\\\"searchDet.searchData\\\" class=\\\"fa fa-times-circle form-control-clear\\\"\\r\\n                                (click)=\\\"getSearchList(false)\\\"></span>\\r\\n                            <input style=\\\"border-bottom: 1px solid #7044cd;\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                name=\\\"searchInput\\\" placeholder=\\\"Search here..\\\" [(ngModel)]=\\\"searchDet.searchInput\\\"\\r\\n                                (keyup)=\\\"$event.keyCode == 13 ? getSearchList(true) : ''\\\" autocomplete=\\\"off\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"col-6 p-r-5 p-l-5\\\" *ngIf=\\\"filterFlag\\\">\\r\\n                        <div class=\\\"filterDiv\\\">\\r\\n                            <button class=\\\"clearFilter\\\" (click)=\\\"removeFilter()\\\">Clear filter</button>\\r\\n                            &nbsp;\\r\\n                            <span style=\\\"color: green;font-size: 12px; font-weight: 500;\\\">Filter\\r\\n                                Applied</span>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 p-r-5 p-l-5 form-group\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-4 p-0\\\">\\r\\n                <!-- <div class=\\\"addRegDiv\\\" style=\\\"bottom: -0.1rem;\\\">\\r\\n                    <button class=\\\"btn addRegBtn m-0\\\" type=\\\"button\\\" (click)=\\\"modalOpen(workStation,'top')\\\"><i\\r\\n                            class=\\\"fa fa-plus m-r-10\\\"></i>Add\\r\\n                        Workstation</button>\\r\\n                </div> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"table-block\\\">\\r\\n        <div class=\\\"table-responsive tableFixHead\\\">\\r\\n            <table datatable class=\\\"table\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"fixedColumn\\\" mat-sort-header=\\\"BranchName\\\">Plant</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"AssignedEmpId\\\"> Assigned Emp ID</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"AssignedEmpName\\\">Assigned Name</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"CmpyEmpId\\\">Emp ID</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"EmpName\\\">Emp Name</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"DeptName\\\">Department</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"Line\\\">Cell/Line</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"Workstation\\\">Workstation</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"LevelName\\\">Level</th>\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"ActivityDate\\\">Assigned Date</th>\\r\\n                        <!-- <th class=\\\"\\\" mat-sort-header=\\\"ActivityDate\\\"> Activity Due Date</th> -->\\r\\n                        <th class=\\\"\\\" mat-sort-header=\\\"Activity\\\">Activity</th>\\r\\n                        <th class=\\\"pending fixedColumn\\\" mat-sort-header=\\\"status\\\">Status</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let x of actionList\\\">\\r\\n                        <td class=\\\"actionTd fixedColumn\\\">{{x.branchName}}</td>\\r\\n                        <td>{{x.assignedEmpId}}</td>\\r\\n                        <td>{{x.assignedEmpName}}</td>\\r\\n                        <td>{{x.cmpyEmpId}}</td>\\r\\n                        <td>{{x.oeEmpName}}</td>\\r\\n                        <td>{{x.deptName}}</td>\\r\\n                        <td>{{x.lineName}}</td>\\r\\n                        <td>{{x.workstation}}</td>\\r\\n                        <td>{{x.currentSkillLevel}}</td>\\r\\n                        <td>{{(x.activityDate) ? (x.activityDate | date:'dd-MM-yyyy') : 'N/A'}}</td>\\r\\n                        <!-- <td>{{x.activityDueDate}}</td> -->\\r\\n                        <td>{{x.activity}}</td>\\r\\n                        <td class=\\\"actionTd fixedColumn\\\"\\r\\n                            [ngClass]=\\\"{'completed':x.status == 'COMPLETED','pending':x.status == 'PENDING'}\\\">\\r\\n                            {{x.status}}</td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"(actionList == null || actionList.length == 0)\\\">\\r\\n                        <td colspan=\\\"8\\\" class=\\\"text-center no-record-found\\\" *ngIf=\\\"!listLoading\\\">\\r\\n                            Data not found\\r\\n                        </td>\\r\\n                        <td colspan=\\\"8\\\" class=\\\"text-center loading-div\\\" *ngIf=\\\"listLoading\\\">\\r\\n                            <app-loading></app-loading>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <app-pagination [staticPagination]=\\\"staticPagination\\\" (paginationData)=\\\"loadMore($event)\\\"></app-pagination>\\r\\n</div>\\r\\n<ng-template #filterPopup let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title popup-header-txt\\\" id=\\\"myModalLabel2\\\">Filter</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"filterFormData\\\" (ngSubmit)=\\\"submitFilterForm(filterFormData)\\\" autocomplete=\\\"off\\\"\\r\\n        class=\\\"needs-validation\\\">\\r\\n        <div class=\\\"modal-body p-2\\\" style=\\\"height: calc(100vh - 14vh);\\\">\\r\\n            <perfect-scrollbar>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"branch\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Plant</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"branch\\\" id=\\\"branch\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Plant'\\\" [settings]=\\\"SingleDropdownSettings\\\" formControlName=\\\"branch\\\"\\r\\n                            [data]=\\\"getSortFunction(plantList,'plant')\\\" [disabled]=\\\"false\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.branchId\\\" (onSelect)=\\\"onChange($event,'plant')\\\"\\r\\n                            (onDeSelect)=\\\"onChange(false,'plant')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <div *ngIf=\\\" submitAttempted && filterFormData.controls['branch'].invalid && (filterFormData.controls['branch'].touched || filterFormData.controls['branch'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\" style=\\\"padding-left: 15px;z-index: 10;\\\">\\r\\n                            <div *ngIf=\\\"filterFormData.controls['branch'].errors.required\\\">\\r\\n                                Please Select Plant\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"opt\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Department</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"dept\\\" id=\\\"dept\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Department'\\\" [settings]=\\\"SingleDropdownSettings\\\"\\r\\n                            formControlName=\\\"dept\\\" [data]=\\\"getSortFunction(masterDeptList,'dept')\\\" [disabled]=\\\"false\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.deptId\\\" (onSelect)=\\\"onChange($event,'dept')\\\"\\r\\n                            (onDeSelect)=\\\"onChange(false,'dept')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <!-- <div *ngIf=\\\"submitAttempted && filterFormData.controls['dept'].invalid && (filterFormData.controls['dept'].touched || filterFormData.controls['dept'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterFormData.controls['dept'].errors.required\\\">\\r\\n                                Please select department\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"opt\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">Cell/Line</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"opt\\\"\\r\\n                            class=\\\"custom-multiSelection assessmentdropDown customWidthForRport\\\"\\r\\n                            [placeholder]=\\\"'Select Cell/Line'\\\" [settings]=\\\"multipleDropdownSettings\\\"\\r\\n                            [data]=\\\"getSortFunction(cellList,'cell')\\\" formControlName=\\\"lineIds\\\"\\r\\n                            [(ngModel)]=\\\"searchDet.lineIds\\\" (onSelect)=\\\"onChange($event,'line')\\\"\\r\\n                            (onSelectAll)=\\\"onChangeAll($event,'dept')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <!-- <div *ngIf=\\\"submitAttempted && filterData.controls['lineIds'].invalid && (filterData.controls['lineIds'].touched || filterData.controls['lineIds'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\" style=\\\"padding-left: 15px;\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['lineIds'].errors.required\\\">\\r\\n                                Please select Cell/Line\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"skillLvlId\\\" class=\\\"col-sm-12 col-form-label filter-label p-b-0\\\">Level</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <ng-multiselect-dropdown name=\\\"skillLvlId\\\" id=\\\"skillLvlId\\\"\\r\\n                            class=\\\"custom-multiSelection customWidthForInter assessmentdropDown\\\"\\r\\n                            [placeholder]=\\\"'Select Level'\\\" [settings]=\\\"SingleDropdownSettings\\\" [data]=\\\"masterLevelList\\\"\\r\\n                            formControlName=\\\"skillLvlId\\\" [(ngModel)]=\\\"searchDet.skillLvlId\\\"\\r\\n                            (onSelect)=\\\"onChange($event,'skillLvlId')\\\" (onDeSelect)=\\\"onChange(false,'skillLvlId')\\\">\\r\\n                        </ng-multiselect-dropdown>\\r\\n                        <!-- <div *ngIf=\\\"submitAttempted && filterData.controls['skillLvlId'].invalid && (filterData.controls['skillLvlId'].touched || filterData.controls['skillLvlId'].dirty)\\\"\\r\\n                            class=\\\"custom-errorMsg\\\">\\r\\n                            <div *ngIf=\\\"filterData.controls['skillLvlId'].errors.required\\\">\\r\\n                                Please select level\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"opt\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">From Date</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"input-group m-0 custom-Input-Group\\\" (click)=\\\"startDatePicker.open()\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <div class=\\\"input-group-text\\\">\\r\\n                                    <i class=\\\"feather icon-calendar\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <input matInput [(ngModel)]=\\\"searchDet.fromDate\\\" [max]=\\\"maxDate\\\"\\r\\n                                [matDatepicker]=\\\"startDatePicker\\\" class=\\\"form-control datePickInput\\\"\\r\\n                                placeholder=\\\"From Date\\\" (keydown)=\\\"false\\\" (dateChange)=\\\"selectCustomDate($event,'')\\\"\\r\\n                                formControlName=\\\"fromDate\\\" name=\\\"opt\\\">\\r\\n                            <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-b-0\\\">\\r\\n                    <label for=\\\"opt\\\" class=\\\"col-sm-12 col-form-label filter-label\\\">To Date</label>\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"input-group m-0 custom-Input-Group\\\" (click)=\\\"toDatePicker.open()\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <div class=\\\"input-group-text\\\">\\r\\n                                    <i class=\\\"feather icon-calendar\\\"></i>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <input matInput [(ngModel)]=\\\"searchDet.toDate\\\" [min]=\\\"searchDet.fromDate\\\" [max]=\\\"maxDate\\\"\\r\\n                                [matDatepicker]=\\\"toDatePicker\\\" class=\\\"form-control datePickInput\\\" placeholder=\\\"To Date\\\"\\r\\n                                (keydown)=\\\"false\\\" (dateChange)=\\\"selectCustomDate('', $event)\\\" formControlName=\\\"toDate\\\"\\r\\n                                name=\\\"opt\\\">\\r\\n                            <mat-datepicker #toDatePicker></mat-datepicker>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </perfect-scrollbar>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer footerBlock text-right\\\">\\r\\n            <button class=\\\"btn submitBtn event-btn\\\" type=\\\"submit\\\">\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\r\\n                <span *ngIf=\\\"submitSpinner\\\" class=\\\"load-text\\\"> Loading...</span>\\r\\n                <span *ngIf=\\\"!submitSpinner\\\" class=\\\"btn-text\\\">Apply Filter</span>\\r\\n            </button>\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn cancelBtn\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">Cancel\\r\\n            </button> -->\\r\\n        </div>\\r\\n    </form>\\r\\n</ng-template>\";"]}